{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Giri\u015f Rahman ve Rahim olan Allah'\u0131n ad\u0131yla. Bu projeyi \u00fcretebilme imkan\u0131n\u0131 bana veren Allah'a hamd olsun. Pratik Yapay Zeka , yapay zeka teknolojilerinde kendini geli\u015ftirmek isteyen, elde etti\u011fi bilgi ve tecr\u00fcbesini ba\u015fkalar\u0131yla payla\u015fmak isteyen, de\u011fer katmaktan, \u00fcretmek ve payla\u015fmaktan zevk alan herkes i\u00e7in olu\u015fturulmu\u015f projedir. Konu Ba\u015fl\u0131klar\u0131 A\u015fa\u011f\u0131da yer alan konular zamanla bu projeye eklenecektir. Konu Ba\u015fl\u0131\u011f\u0131 Durum Python Haz\u0131rlan\u0131yor NumPy Eklenecek Pandas Eklenecek Destek Projeye destek olmak i\u00e7in Github \u00fczerinden Pull Request g\u00f6nderebilirsiniz veya eklenmesini istedi\u011finiz bir \u00f6zelli\u011fi Issues k\u0131sm\u0131nda a\u00e7arak belirtebilirsiniz. Projeye katk\u0131da bulunabilmek i\u00e7in izlemeniz gereken ad\u0131mlar; Ad\u0131mlar yak\u0131nda eklenecek. \u015eu an geli\u015ftirilme a\u015famas\u0131nda. Son G\u00fcncelleme 16 Aral\u0131k 2019 - Pazartesi Lisans Bu projenin lisans\u0131 Creative Commons Attribution 4.0 International .","title":"Giri\u015f"},{"location":"#giris","text":"","title":"Giri\u015f"},{"location":"#_1","text":"Rahman ve Rahim olan Allah'\u0131n ad\u0131yla. Bu projeyi \u00fcretebilme imkan\u0131n\u0131 bana veren Allah'a hamd olsun. Pratik Yapay Zeka , yapay zeka teknolojilerinde kendini geli\u015ftirmek isteyen, elde etti\u011fi bilgi ve tecr\u00fcbesini ba\u015fkalar\u0131yla payla\u015fmak isteyen, de\u011fer katmaktan, \u00fcretmek ve payla\u015fmaktan zevk alan herkes i\u00e7in olu\u015fturulmu\u015f projedir.","title":"  "},{"location":"#konu-baslklar","text":"A\u015fa\u011f\u0131da yer alan konular zamanla bu projeye eklenecektir. Konu Ba\u015fl\u0131\u011f\u0131 Durum Python Haz\u0131rlan\u0131yor NumPy Eklenecek Pandas Eklenecek","title":"Konu Ba\u015fl\u0131klar\u0131"},{"location":"#destek","text":"Projeye destek olmak i\u00e7in Github \u00fczerinden Pull Request g\u00f6nderebilirsiniz veya eklenmesini istedi\u011finiz bir \u00f6zelli\u011fi Issues k\u0131sm\u0131nda a\u00e7arak belirtebilirsiniz. Projeye katk\u0131da bulunabilmek i\u00e7in izlemeniz gereken ad\u0131mlar; Ad\u0131mlar yak\u0131nda eklenecek. \u015eu an geli\u015ftirilme a\u015famas\u0131nda.","title":"Destek"},{"location":"#son-guncelleme","text":"16 Aral\u0131k 2019 - Pazartesi","title":"Son G\u00fcncelleme"},{"location":"#lisans","text":"Bu projenin lisans\u0131 Creative Commons Attribution 4.0 International .","title":"Lisans"},{"location":"changelog/","text":"De\u011fi\u015fiklik Kayd\u0131 Bu projede yap\u0131lan t\u00fcm de\u011fi\u015fiklikler bu dosyada belgelenmektedir. 0.2.1 - 2019-12-18 Eklendi Jupyter Notebooks i\u00e7erisine python_karakter_dizileri.ipynb eklendi. python_karakter_dizileri.md eklendi. Jupyter Notebooks i\u00e7erisine python_karakter_dizilerinin_metotlari.ipynb eklendi. python_karakter_dizilerinin_metotlari.md eklendi. De\u011fi\u015fti mkdocs.yml dosyas\u0131nda men\u00fc k\u0131sm\u0131 g\u00fcncellendi. 0.2.0 - 2019-12-17 Eklendi Jupyter Notebooks i\u00e7erisine hata yakalama eklendi. python_hata_yakalama.md eklendi. De\u011fi\u015fti mkdocs.yml dosyas\u0131nda men\u00fc k\u0131sm\u0131 g\u00fcncellendi. 0.1.9 - 2019-12-16 Eklendi Jupyter Notebooks i\u00e7erisine print fonksiyonu eklendi. print.md eklendi. Jupyer Notebooks i\u00e7erisine ka\u00e7\u0131\u015f dizileri eklendi. kacis_dizileri.md eklendi. Jupyter Notebooks i\u00e7erisine kullan\u0131c\u0131dan bilgi almak eklendi. kullanicidan_bilgi_almak.md eklendi. Jupyter Notebooks i\u00e7erisine ko\u015fullu durumlar eklendi. kosullu_durumlar.md eklendi. Jupyter Notebooks i\u00e7erisine i\u015flemler eklendi. islecler.md eklendi. Jupyter Notebooks i\u00e7erisine d\u00f6ng\u00fcler eklendi. python_donguler.md eklendi. De\u011fi\u015fti mkdocs.yml dosyas\u0131nda men\u00fc k\u0131sm\u0131 g\u00fcncellendi. 0.1.8 - 2019-12-14 Eklendi referanslar.md eklendi. De\u011fi\u015fti mkdocs.yml dosyas\u0131nda men\u00fc k\u0131sm\u0131 g\u00fcncellendi. 0.1.7 - 2019-12-14 Eklendi Jupyter Notebooks ve Python klas\u00f6r\u00fc olu\u015fturuldu. De\u011fi\u015fkenler \u00e7al\u0131\u015fmas\u0131 eklendi. degiskenler.md dosyas\u0131 eklendi. De\u011fi\u015fti mkdocs.yml dosyas\u0131nda men\u00fc k\u0131sm\u0131 g\u00fcncellendi. 0.1.6 - 2019-12-14 Eklendi Men\u00fc ibaresi mkdocs.yml dosyas\u0131na eklendi. 0.1.5 - 2019-12-14 Eklendi Web sayfas\u0131 i\u00e7in changelog.md dosyas\u0131 olu\u015fturuldu. De\u011fi\u015fti Readme.md dosyas\u0131 g\u00fcncellendi. 0.1.4 - 2019-12-14 De\u011fi\u015fti Index.md dosyas\u0131 g\u00fcncellendi. Readme.md dosyas\u0131 g\u00fcncellendi. 0.1.3 - 2019-12-14 De\u011fi\u015fti Readme.md dosyas\u0131 g\u00fcncellendi. 0.1.2 - 2019-12-14 De\u011fi\u015fti Favicon g\u00fcncellendi. Logo g\u00fcncellendi. 0.1.1 - 2019-12-14 Eklendi Changelog.md dosyas\u0131 eklendi. 0.1.0 - 2019-12-14 De\u011fi\u015fti Readme.md dosyas\u0131 g\u00fcncellendi. 0.0.9 - 2019-12-14 Eklendi Mkdocs.yml dosyas\u0131na sosyal medya ba\u011flant\u0131lar\u0131 eklendi. 0.0.8 - 2019-12-14 Eklendi Mkdocs.yml dosyas\u0131na telif hakk\u0131 ibaresi eklendi. 0.0.7 - 2019-12-14 Eklendi Mkdocs.yml dosyas\u0131na repo bilgileri eklendi. 0.0.6 - 2019-12-14 Eklendi Mkdocs.yml dosyas\u0131nda dil de\u011fi\u015fikli\u011fi yap\u0131ld\u0131. 0.0.5 - 2019-12-14 Eklendi Mkdocs.yml dosyas\u0131na proje bilgileri k\u0131sm\u0131 eklendi. 0.0.4 - 2019-12-14 Eklendi Mkdocs d\u00f6k\u00fcman\u0131n\u0131n temas\u0131 de\u011fi\u015ftirildi. 0.0.3 - 2019-12-14 Eklendi Markdown bi\u00e7imlendirme dilini destekleyen mkdocs d\u00f6k\u00fcman\u0131 olu\u015fturuldu. 0.0.2 - 2019-12-14 Eklendi Lisans dosyas\u0131 eklendi. 0.0.1 - 2019-12-14 Eklendi Repo olu\u015fturuldu. README.md dosyas\u0131 otomatik olarak olu\u015fturuldu.","title":"De\u011fi\u015fiklik Kayd\u0131"},{"location":"changelog/#degisiklik-kayd","text":"Bu projede yap\u0131lan t\u00fcm de\u011fi\u015fiklikler bu dosyada belgelenmektedir.","title":"De\u011fi\u015fiklik Kayd\u0131"},{"location":"changelog/#021-2019-12-18","text":"","title":"0.2.1 - 2019-12-18"},{"location":"changelog/#eklendi","text":"Jupyter Notebooks i\u00e7erisine python_karakter_dizileri.ipynb eklendi. python_karakter_dizileri.md eklendi. Jupyter Notebooks i\u00e7erisine python_karakter_dizilerinin_metotlari.ipynb eklendi. python_karakter_dizilerinin_metotlari.md eklendi.","title":"Eklendi"},{"location":"changelog/#degisti","text":"mkdocs.yml dosyas\u0131nda men\u00fc k\u0131sm\u0131 g\u00fcncellendi.","title":"De\u011fi\u015fti"},{"location":"changelog/#020-2019-12-17","text":"","title":"0.2.0 - 2019-12-17"},{"location":"changelog/#eklendi_1","text":"Jupyter Notebooks i\u00e7erisine hata yakalama eklendi. python_hata_yakalama.md eklendi.","title":"Eklendi"},{"location":"changelog/#degisti_1","text":"mkdocs.yml dosyas\u0131nda men\u00fc k\u0131sm\u0131 g\u00fcncellendi.","title":"De\u011fi\u015fti"},{"location":"changelog/#019-2019-12-16","text":"","title":"0.1.9 - 2019-12-16"},{"location":"changelog/#eklendi_2","text":"Jupyter Notebooks i\u00e7erisine print fonksiyonu eklendi. print.md eklendi. Jupyer Notebooks i\u00e7erisine ka\u00e7\u0131\u015f dizileri eklendi. kacis_dizileri.md eklendi. Jupyter Notebooks i\u00e7erisine kullan\u0131c\u0131dan bilgi almak eklendi. kullanicidan_bilgi_almak.md eklendi. Jupyter Notebooks i\u00e7erisine ko\u015fullu durumlar eklendi. kosullu_durumlar.md eklendi. Jupyter Notebooks i\u00e7erisine i\u015flemler eklendi. islecler.md eklendi. Jupyter Notebooks i\u00e7erisine d\u00f6ng\u00fcler eklendi. python_donguler.md eklendi.","title":"Eklendi"},{"location":"changelog/#degisti_2","text":"mkdocs.yml dosyas\u0131nda men\u00fc k\u0131sm\u0131 g\u00fcncellendi.","title":"De\u011fi\u015fti"},{"location":"changelog/#018-2019-12-14","text":"","title":"0.1.8 - 2019-12-14"},{"location":"changelog/#eklendi_3","text":"referanslar.md eklendi.","title":"Eklendi"},{"location":"changelog/#degisti_3","text":"mkdocs.yml dosyas\u0131nda men\u00fc k\u0131sm\u0131 g\u00fcncellendi.","title":"De\u011fi\u015fti"},{"location":"changelog/#017-2019-12-14","text":"","title":"0.1.7 - 2019-12-14"},{"location":"changelog/#eklendi_4","text":"Jupyter Notebooks ve Python klas\u00f6r\u00fc olu\u015fturuldu. De\u011fi\u015fkenler \u00e7al\u0131\u015fmas\u0131 eklendi. degiskenler.md dosyas\u0131 eklendi.","title":"Eklendi"},{"location":"changelog/#degisti_4","text":"mkdocs.yml dosyas\u0131nda men\u00fc k\u0131sm\u0131 g\u00fcncellendi.","title":"De\u011fi\u015fti"},{"location":"changelog/#016-2019-12-14","text":"","title":"0.1.6 - 2019-12-14"},{"location":"changelog/#eklendi_5","text":"Men\u00fc ibaresi mkdocs.yml dosyas\u0131na eklendi.","title":"Eklendi"},{"location":"changelog/#015-2019-12-14","text":"","title":"0.1.5 - 2019-12-14"},{"location":"changelog/#eklendi_6","text":"Web sayfas\u0131 i\u00e7in changelog.md dosyas\u0131 olu\u015fturuldu.","title":"Eklendi"},{"location":"changelog/#degisti_5","text":"Readme.md dosyas\u0131 g\u00fcncellendi.","title":"De\u011fi\u015fti"},{"location":"changelog/#014-2019-12-14","text":"","title":"0.1.4 - 2019-12-14"},{"location":"changelog/#degisti_6","text":"Index.md dosyas\u0131 g\u00fcncellendi. Readme.md dosyas\u0131 g\u00fcncellendi.","title":"De\u011fi\u015fti"},{"location":"changelog/#013-2019-12-14","text":"","title":"0.1.3 - 2019-12-14"},{"location":"changelog/#degisti_7","text":"Readme.md dosyas\u0131 g\u00fcncellendi.","title":"De\u011fi\u015fti"},{"location":"changelog/#012-2019-12-14","text":"","title":"0.1.2 - 2019-12-14"},{"location":"changelog/#degisti_8","text":"Favicon g\u00fcncellendi. Logo g\u00fcncellendi.","title":"De\u011fi\u015fti"},{"location":"changelog/#011-2019-12-14","text":"","title":"0.1.1 - 2019-12-14"},{"location":"changelog/#eklendi_7","text":"Changelog.md dosyas\u0131 eklendi.","title":"Eklendi"},{"location":"changelog/#010-2019-12-14","text":"","title":"0.1.0 - 2019-12-14"},{"location":"changelog/#degisti_9","text":"Readme.md dosyas\u0131 g\u00fcncellendi.","title":"De\u011fi\u015fti"},{"location":"changelog/#009-2019-12-14","text":"","title":"0.0.9 - 2019-12-14"},{"location":"changelog/#eklendi_8","text":"Mkdocs.yml dosyas\u0131na sosyal medya ba\u011flant\u0131lar\u0131 eklendi.","title":"Eklendi"},{"location":"changelog/#008-2019-12-14","text":"","title":"0.0.8 - 2019-12-14"},{"location":"changelog/#eklendi_9","text":"Mkdocs.yml dosyas\u0131na telif hakk\u0131 ibaresi eklendi.","title":"Eklendi"},{"location":"changelog/#007-2019-12-14","text":"","title":"0.0.7 - 2019-12-14"},{"location":"changelog/#eklendi_10","text":"Mkdocs.yml dosyas\u0131na repo bilgileri eklendi.","title":"Eklendi"},{"location":"changelog/#006-2019-12-14","text":"","title":"0.0.6 - 2019-12-14"},{"location":"changelog/#eklendi_11","text":"Mkdocs.yml dosyas\u0131nda dil de\u011fi\u015fikli\u011fi yap\u0131ld\u0131.","title":"Eklendi"},{"location":"changelog/#005-2019-12-14","text":"","title":"0.0.5 - 2019-12-14"},{"location":"changelog/#eklendi_12","text":"Mkdocs.yml dosyas\u0131na proje bilgileri k\u0131sm\u0131 eklendi.","title":"Eklendi"},{"location":"changelog/#004-2019-12-14","text":"","title":"0.0.4 - 2019-12-14"},{"location":"changelog/#eklendi_13","text":"Mkdocs d\u00f6k\u00fcman\u0131n\u0131n temas\u0131 de\u011fi\u015ftirildi.","title":"Eklendi"},{"location":"changelog/#003-2019-12-14","text":"","title":"0.0.3 - 2019-12-14"},{"location":"changelog/#eklendi_14","text":"Markdown bi\u00e7imlendirme dilini destekleyen mkdocs d\u00f6k\u00fcman\u0131 olu\u015fturuldu.","title":"Eklendi"},{"location":"changelog/#002-2019-12-14","text":"","title":"0.0.2 - 2019-12-14"},{"location":"changelog/#eklendi_15","text":"Lisans dosyas\u0131 eklendi.","title":"Eklendi"},{"location":"changelog/#001-2019-12-14","text":"","title":"0.0.1 - 2019-12-14"},{"location":"changelog/#eklendi_16","text":"Repo olu\u015fturuldu. README.md dosyas\u0131 otomatik olarak olu\u015fturuldu.","title":"Eklendi"},{"location":"referanslar/","text":"Referanslar Bu projede bulunan i\u00e7erikler a\u015fa\u011f\u0131da bulunan kaynaklar kullan\u0131larak haz\u0131rlanm\u0131\u015ft\u0131r. Son G\u00fcncelleme: 14 Aral\u0131k 2019 Python Dok\u00fcmantasyonu Python 3 i\u00e7in T\u00fcrk\u00e7e K\u0131lavuz","title":"Referanslar"},{"location":"referanslar/#referanslar","text":"Bu projede bulunan i\u00e7erikler a\u015fa\u011f\u0131da bulunan kaynaklar kullan\u0131larak haz\u0131rlanm\u0131\u015ft\u0131r. Son G\u00fcncelleme: 14 Aral\u0131k 2019 Python Dok\u00fcmantasyonu Python 3 i\u00e7in T\u00fcrk\u00e7e K\u0131lavuz","title":"Referanslar"},{"location":"python/degiskenler/","text":"De\u011fi\u015fkenler De\u011fi\u015fkenler b\u00fct\u00fcn programlama dillerinde olmazsa olmazd\u0131r. De\u011fi\u015fken tan\u0131mlarken baz\u0131 kurallar mevcuttur. De\u011fi\u015fken adlar\u0131 bir say\u0131 ile ba\u015flayamaz. Yani \u015fu kullan\u0131m yanl\u0131\u015ft\u0131r: 3_kilo = \"5 TL\" File \"<ipython-input-1-bc29f79e52e9>\", line 1 3_kilo = \"5 TL\" ^ SyntaxError: invalid token De\u011fi\u015fken adlar\u0131 aritmetik i\u015fle\u00e7lerle ba\u015flayamaz. Yani \u015fu kullan\u0131m yanl\u0131\u015ft\u0131r: +de\u011fer = 4568 File \"<ipython-input-2-53e025623b01>\", line 1 +de\u011fer = 4568 ^ SyntaxError: can't assign to operator De\u011fi\u015fken adlar\u0131 ya bir alfabe harfiyle ya da _ i\u015faretiyle ba\u015flamal\u0131d\u0131r: _deger = 4568 deger = 4568 De\u011fi\u015fken adlar\u0131 i\u00e7inde T\u00fcrk\u00e7e karakterler kullanabilirsiniz. Ancak ileride beklenmedik uyum sorunlar\u0131 \u00e7\u0131kmas\u0131 ihtimaline kar\u015f\u0131 de\u011fi\u015fken adlar\u0131nda T\u00fcrk\u00e7e karakter kullanmaktan ka\u00e7\u0131nmak isteyebilirsiniz. Python i\u00e7in anahtar veya \u00f6zel olan kelimeleri de\u011fi\u015fken ad\u0131 olarak kullanamazs\u0131n\u0131z. Bu adlar a\u015fa\u011f\u0131da listelenmi\u015ftir. import keyword keyword.kwlist ['False', 'None', 'True', 'and', 'as', 'assert', 'async', 'await', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield'] type Fonksiyonu Bu fonksiyonu herhangi bir nesnenin hangi veri tipinde oldu\u011funu \u00f6\u011frenebilmemizi sa\u011flar. print(type(\"Abdullah\")) print(type(1)) print(type(5.0)) print(type(True)) <class 'str'> <class 'int'> <class 'float'> <class 'bool'> len Fonksiyonu len fonksiyonu ile bir verinin uzunlu\u011funu h\u0131zl\u0131ca \u00f6\u011frenebilirsiniz. len(\"Abdullah\") 8 isim = \"Abdullah\" len(isim) 8 Son G\u00fcncelleme: 14 Aral\u0131k 2019 - Cumartesi","title":"De\u011fi\u015fkenler"},{"location":"python/degiskenler/#degiskenler","text":"De\u011fi\u015fkenler b\u00fct\u00fcn programlama dillerinde olmazsa olmazd\u0131r. De\u011fi\u015fken tan\u0131mlarken baz\u0131 kurallar mevcuttur. De\u011fi\u015fken adlar\u0131 bir say\u0131 ile ba\u015flayamaz. Yani \u015fu kullan\u0131m yanl\u0131\u015ft\u0131r: 3_kilo = \"5 TL\" File \"<ipython-input-1-bc29f79e52e9>\", line 1 3_kilo = \"5 TL\" ^ SyntaxError: invalid token De\u011fi\u015fken adlar\u0131 aritmetik i\u015fle\u00e7lerle ba\u015flayamaz. Yani \u015fu kullan\u0131m yanl\u0131\u015ft\u0131r: +de\u011fer = 4568 File \"<ipython-input-2-53e025623b01>\", line 1 +de\u011fer = 4568 ^ SyntaxError: can't assign to operator De\u011fi\u015fken adlar\u0131 ya bir alfabe harfiyle ya da _ i\u015faretiyle ba\u015flamal\u0131d\u0131r: _deger = 4568 deger = 4568 De\u011fi\u015fken adlar\u0131 i\u00e7inde T\u00fcrk\u00e7e karakterler kullanabilirsiniz. Ancak ileride beklenmedik uyum sorunlar\u0131 \u00e7\u0131kmas\u0131 ihtimaline kar\u015f\u0131 de\u011fi\u015fken adlar\u0131nda T\u00fcrk\u00e7e karakter kullanmaktan ka\u00e7\u0131nmak isteyebilirsiniz. Python i\u00e7in anahtar veya \u00f6zel olan kelimeleri de\u011fi\u015fken ad\u0131 olarak kullanamazs\u0131n\u0131z. Bu adlar a\u015fa\u011f\u0131da listelenmi\u015ftir. import keyword keyword.kwlist ['False', 'None', 'True', 'and', 'as', 'assert', 'async', 'await', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield']","title":"De\u011fi\u015fkenler"},{"location":"python/degiskenler/#type-fonksiyonu","text":"Bu fonksiyonu herhangi bir nesnenin hangi veri tipinde oldu\u011funu \u00f6\u011frenebilmemizi sa\u011flar. print(type(\"Abdullah\")) print(type(1)) print(type(5.0)) print(type(True)) <class 'str'> <class 'int'> <class 'float'> <class 'bool'>","title":"type Fonksiyonu"},{"location":"python/degiskenler/#len-fonksiyonu","text":"len fonksiyonu ile bir verinin uzunlu\u011funu h\u0131zl\u0131ca \u00f6\u011frenebilirsiniz. len(\"Abdullah\") 8 isim = \"Abdullah\" len(isim) 8 Son G\u00fcncelleme: 14 Aral\u0131k 2019 - Cumartesi","title":"len Fonksiyonu"},{"location":"python/islecler/","text":"\u0130\u015fle\u00e7ler Herhangi bir i\u015flemde, i\u015flenenler \u00fczerinde yap\u0131lmas\u0131 \u00f6ng\u00f6r\u00fclen i\u015fi tan\u0131mlayan \u00f6zel damga, damga dizgisi vb. g\u00f6stergeler, \u00f6rn. \u0097 | + | /| | * aritmetiksel, AND | OR | NOT mant\u0131ksal i\u015fle\u00e7ler olarak kullan\u0131l\u0131r. Kaynak Python i\u00e7erisinde farkl\u0131 i\u015fle\u00e7ler bulunmaktad\u0131r. Bunlar; 1. Aritmetik \u0130\u015fle\u00e7ler 2. Kar\u015f\u0131la\u015ft\u0131rma \u0130\u015fle\u00e7leri 3. Bool \u0130\u015fle\u00e7leri 4. De\u011fer Atama \u0130\u015fle\u00e7leri 5. Aitlik \u0130\u015fle\u00e7leri 6. Kimlik \u0130\u015fle\u00e7leri Aritmetik \u0130\u015fle\u00e7ler Aritmetik i\u015fle\u00e7ler, matematiksel i\u015flemler yapabilmemiz sa\u011flayan ara\u00e7lar. \u0130\u015fle\u00e7 \u0130\u015flem + Toplama - \u00c7\u0131karma * \u00c7arpma / B\u00f6lme ** Kuvvet % Mod\u00fcl\u00fcs // Taban B\u00f6lme Aritmetik i\u015fle\u00e7lerle baz\u0131 i\u015flemler yapal\u0131m ve nas\u0131l kullan\u0131ld\u0131klar\u0131n\u0131 \u00f6\u011frenelim. 3-2 1 3*2 6 3+2 5 3/2 1.5 3**2 9 \"Python\" + \"Dili\" 'PythonDili' \"yava\u015f\" * 2 'yava\u015fyava\u015f' \"/\" * 5 '/////' 29 % 4 #Bu i\u015fle\u00e7 bir say\u0131n\u0131n ba\u015fka bir say\u0131ya b\u00f6l\u00fcm\u00fcnde kalan\u0131 vermektedir. 1 30 % 5 0 Bir say\u0131n\u0131n \u00e7ift say\u0131 olup olmad\u0131\u011f\u0131n g\u00f6steren uygulama yapal\u0131m. sayi = int(input(\"Bir say\u0131 giriniz: \")) if sayi % 2 == 0: print(\"Girdi\u011finiz say\u0131 bir \u00e7ift say\u0131d\u0131r.\") else: print(\"Girdi\u011finiz say\u0131 \u00e7ift say\u0131 de\u011fildir.\") Bir say\u0131 giriniz: 5 Girdi\u011finiz say\u0131 \u00e7ift say\u0131 de\u011fildir. Kar\u015f\u0131la\u015ft\u0131rma \u0130\u015fle\u00e7leri Kar\u015f\u0131la\u015ft\u0131rma i\u015fle\u00e7leri, ad\u0131nda anla\u015f\u0131ld\u0131\u011f\u0131 \u00fczere kar\u015f\u0131la\u015ft\u0131rma i\u015flemlerini yapabilmemizi sa\u011flayan ara\u00e7lard\u0131r. \u0130\u015fle\u00e7 \u0130\u015flevi == E\u015fittir != E\u015fit De\u011fildir > B\u00fcy\u00fckt\u00fcr < K\u00fc\u00e7\u00fckt\u00fcr >= B\u00fcy\u00fck E\u015fittir <= K\u00fc\u00e7\u00fck E\u015fittir Tabloda bulunan i\u015fle\u00e7lerin hepsini olmasada baz\u0131lar\u0131 i\u00e7in k\u00fc\u00e7\u00fck bir \u00f6rnek ile nas\u0131l kullan\u0131ld\u0131\u011f\u0131na bakal\u0131m. parola = \"11111\" soru = input(\"parolan\u0131z: \") if soru == parola: print(\"do\u011fru parola!\") elif soru != parola: print(\"yanl\u0131\u015f parola!\") parolan\u0131z: 11111 do\u011fru parola! sayi = int(input(\"Bir say\u0131 giriniz: \")) if sayi == 5: print(\"Say\u0131 5'e e\u015fittir.\") elif sayi < 5: print(\"Say\u0131 5'ten k\u00fc\u00e7\u00fckt\u00fcr.\") elif sayi > 5: print(\"Say\u0131 5'ten b\u00fcy\u00fckt\u00fcr.\") Bir say\u0131 giriniz: 5 Say\u0131 5'e e\u015fittir. Bool \u0130\u015fle\u00e7leri Bu i\u015fle\u00e7 bizlere kar\u015f\u0131la\u015ft\u0131r\u0131lan bir nesne ile ilgili iki farkl\u0131 sonu\u00e7 g\u00f6sterir. Bunlar True veya False de\u011ferleridir. Bu yap\u0131n\u0131n nas\u0131l oldu\u011funa bakal\u0131m. 5 == 0 False 5 == 5 True E\u011fer istersek bool() fonksiyonundanda faydalanabiliriz. bool(5 == 0) False Bool i\u015fleci kendi i\u00e7inde \u00fc\u00e7 adet yap\u0131 bulundurmaktad\u0131r. Bunlar: and or not bu yap\u0131lar\u0131 tek tek inceleyelim. and yap\u0131s\u0131 Bu yap\u0131 ve anlam\u0131na gelmektedir. Bu yap\u0131y\u0131 kulland\u0131\u011f\u0131m\u0131z yerde her iki durumunda do\u011fru olmas\u0131 beklenir. \u00d6rnek \u00fczerinde nas\u0131l kullan\u0131ld\u0131\u011f\u0131n\u0131 inceleyelim. sayi = int(input(\"Bir say\u0131 giriniz: \")) if sayi > 0 and sayi < 5: print(\"Giridi\u011finiz say\u0131 0 ile 5 aras\u0131nda bulunmaktad\u0131r.\") elif sayi > 5 and sayi < 10: print(\"Girdi\u011finiz say\u0131 5 ile 10 aras\u0131nda bulunmaktad\u0131r.\") Bir say\u0131 giriniz: 7 Girdi\u011finiz say\u0131 5 ile 10 aras\u0131nda bulunmaktad\u0131r. or yap\u0131s\u0131 Bu yap\u0131 veya anlam\u0131na gelmektedir. Bu yap\u0131y\u0131 kulland\u0131\u011f\u0131m\u0131z yerde her iki durumdan sadece birisinin do\u011fru olmas\u0131 beklenmektedir. \u00d6rnek \u00fczerinde nas\u0131l kullan\u0131ld\u0131\u011f\u0131n\u0131 inceleyelim. x = int(input(\"Notunuz: \")) if x > 100 or x < 0: print(\"B\u00f6yle bir not yok\") elif x >= 90 and x <= 100: print(\"A ald\u0131n\u0131z.\") elif x >= 80 and x <= 89: print(\"B ald\u0131n\u0131z.\") elif x >= 70 and x <= 79: print(\"C ald\u0131n\u0131z.\") elif x >= 60 and x <= 69: print(\"D ald\u0131n\u0131z.\") elif x >= 0 and x <= 59: print(\"F ald\u0131n\u0131z.\") Notunuz: 99 A ald\u0131n\u0131z. not yap\u0131s\u0131 Bu yap\u0131 de\u011fil anlam\u0131na gelmektedir. Bu yap\u0131y\u0131 kulland\u0131\u011f\u0131m\u0131z yerde durum istedi\u011fimiz duruma e\u015fit de\u011filse gerekli i\u015flemleri yapmaktad\u0131r. parola = input(\"parola: \") if not parola: print(\"Parola bo\u015f b\u0131rak\u0131lamaz!\") else: print(\"Parola dolu.\") parola: Parola bo\u015f b\u0131rak\u0131lamaz! De\u011fer Atama i\u015fle\u00e7leri \u0130\u015fle\u00e7 \u0130\u015flevi = De\u011fer Atama += Topla ve Sonucu Aktar -= \u00c7\u0131kar ve Sonucu Aktar /= B\u00f6l ve Sonucu Aktar *= \u00c7arp ve Sonucu Aktar %= Kalan\u0131 Bul ve Sonucu Aktar **= \u00dcss\u00fcn\u00fc Al ve Sonucu Aktar //= Taban B\u00f6lme \u0130\u015flemini Yap ve Sonucu Aktar Tabloda bulunan i\u015fle\u00e7leri tek tek inceleyelim. a = 5 #de\u011fer atama c = 5 c += 5 #toplama i\u015flemi print(c) 10 #Yukar\u0131da yapt\u0131\u011f\u0131m\u0131z toplama i\u015fleminin e\u015f de\u011feri. b = 5 b = b + 5 print(b) 10 d = 2 d -= 1 #\u00e7\u0131karma i\u015flemi print(d) 1 e = 4 e /= 3 #b\u00f6lme i\u015flemi print(e) 1.3333333333333333 f = 5 f *= 2 #\u00e7arpma i\u015flemi print(f) 10 g = 10 g %= 3 print(g) 1 h = 2 h **= 3 print(h) 8 k = 3 k //= 2 print(k) 1 Aitlik \u0130\u015fle\u00e7leri Aitlik i\u015fle\u00e7leri, bir karakter dizisi ya da say\u0131n\u0131n, herhangi bir veri tipi i\u00e7inde bulunup bulunmad\u0131\u011f\u0131n\u0131 sorgulamam\u0131z\u0131 sa\u011flayan i\u015fle\u00e7lerdir. rakamlar = \"12345\" \"1\" in rakamlar True \"7\" in rakamlar False Kimlik \u0130\u015fle\u00e7leri Python\u2019da her \u015feyin (ya da ba\u015fka bir deyi\u015fle her nesnenin) bir kimlik numaras\u0131 (identity) vard\u0131r. Kabaca s\u00f6ylemek gerekirse, bu kimlik numaras\u0131 denen \u015fey esas\u0131nda o nesnenin bellekteki adresini g\u00f6sterir. Bu kimlik numaras\u0131na id() isimli fonksiyon ile eri\u015febiliriz. m = 5 id(m) 4480324880 n = 20 id(n) 4480325360 Son G\u00fcncelleme: 16 Aral\u0131k 2019 - Pazartesi","title":"\u0130\u015fle\u00e7ler"},{"location":"python/islecler/#islecler","text":"Herhangi bir i\u015flemde, i\u015flenenler \u00fczerinde yap\u0131lmas\u0131 \u00f6ng\u00f6r\u00fclen i\u015fi tan\u0131mlayan \u00f6zel damga, damga dizgisi vb. g\u00f6stergeler, \u00f6rn. \u0097 | + | /| | * aritmetiksel, AND | OR | NOT mant\u0131ksal i\u015fle\u00e7ler olarak kullan\u0131l\u0131r. Kaynak Python i\u00e7erisinde farkl\u0131 i\u015fle\u00e7ler bulunmaktad\u0131r. Bunlar; 1. Aritmetik \u0130\u015fle\u00e7ler 2. Kar\u015f\u0131la\u015ft\u0131rma \u0130\u015fle\u00e7leri 3. Bool \u0130\u015fle\u00e7leri 4. De\u011fer Atama \u0130\u015fle\u00e7leri 5. Aitlik \u0130\u015fle\u00e7leri 6. Kimlik \u0130\u015fle\u00e7leri","title":"\u0130\u015fle\u00e7ler"},{"location":"python/islecler/#aritmetik-islecler","text":"Aritmetik i\u015fle\u00e7ler, matematiksel i\u015flemler yapabilmemiz sa\u011flayan ara\u00e7lar. \u0130\u015fle\u00e7 \u0130\u015flem + Toplama - \u00c7\u0131karma * \u00c7arpma / B\u00f6lme ** Kuvvet % Mod\u00fcl\u00fcs // Taban B\u00f6lme Aritmetik i\u015fle\u00e7lerle baz\u0131 i\u015flemler yapal\u0131m ve nas\u0131l kullan\u0131ld\u0131klar\u0131n\u0131 \u00f6\u011frenelim. 3-2 1 3*2 6 3+2 5 3/2 1.5 3**2 9 \"Python\" + \"Dili\" 'PythonDili' \"yava\u015f\" * 2 'yava\u015fyava\u015f' \"/\" * 5 '/////' 29 % 4 #Bu i\u015fle\u00e7 bir say\u0131n\u0131n ba\u015fka bir say\u0131ya b\u00f6l\u00fcm\u00fcnde kalan\u0131 vermektedir. 1 30 % 5 0 Bir say\u0131n\u0131n \u00e7ift say\u0131 olup olmad\u0131\u011f\u0131n g\u00f6steren uygulama yapal\u0131m. sayi = int(input(\"Bir say\u0131 giriniz: \")) if sayi % 2 == 0: print(\"Girdi\u011finiz say\u0131 bir \u00e7ift say\u0131d\u0131r.\") else: print(\"Girdi\u011finiz say\u0131 \u00e7ift say\u0131 de\u011fildir.\") Bir say\u0131 giriniz: 5 Girdi\u011finiz say\u0131 \u00e7ift say\u0131 de\u011fildir.","title":"Aritmetik \u0130\u015fle\u00e7ler"},{"location":"python/islecler/#karslastrma-islecleri","text":"Kar\u015f\u0131la\u015ft\u0131rma i\u015fle\u00e7leri, ad\u0131nda anla\u015f\u0131ld\u0131\u011f\u0131 \u00fczere kar\u015f\u0131la\u015ft\u0131rma i\u015flemlerini yapabilmemizi sa\u011flayan ara\u00e7lard\u0131r. \u0130\u015fle\u00e7 \u0130\u015flevi == E\u015fittir != E\u015fit De\u011fildir > B\u00fcy\u00fckt\u00fcr < K\u00fc\u00e7\u00fckt\u00fcr >= B\u00fcy\u00fck E\u015fittir <= K\u00fc\u00e7\u00fck E\u015fittir Tabloda bulunan i\u015fle\u00e7lerin hepsini olmasada baz\u0131lar\u0131 i\u00e7in k\u00fc\u00e7\u00fck bir \u00f6rnek ile nas\u0131l kullan\u0131ld\u0131\u011f\u0131na bakal\u0131m. parola = \"11111\" soru = input(\"parolan\u0131z: \") if soru == parola: print(\"do\u011fru parola!\") elif soru != parola: print(\"yanl\u0131\u015f parola!\") parolan\u0131z: 11111 do\u011fru parola! sayi = int(input(\"Bir say\u0131 giriniz: \")) if sayi == 5: print(\"Say\u0131 5'e e\u015fittir.\") elif sayi < 5: print(\"Say\u0131 5'ten k\u00fc\u00e7\u00fckt\u00fcr.\") elif sayi > 5: print(\"Say\u0131 5'ten b\u00fcy\u00fckt\u00fcr.\") Bir say\u0131 giriniz: 5 Say\u0131 5'e e\u015fittir.","title":"Kar\u015f\u0131la\u015ft\u0131rma \u0130\u015fle\u00e7leri"},{"location":"python/islecler/#bool-islecleri","text":"Bu i\u015fle\u00e7 bizlere kar\u015f\u0131la\u015ft\u0131r\u0131lan bir nesne ile ilgili iki farkl\u0131 sonu\u00e7 g\u00f6sterir. Bunlar True veya False de\u011ferleridir. Bu yap\u0131n\u0131n nas\u0131l oldu\u011funa bakal\u0131m. 5 == 0 False 5 == 5 True E\u011fer istersek bool() fonksiyonundanda faydalanabiliriz. bool(5 == 0) False Bool i\u015fleci kendi i\u00e7inde \u00fc\u00e7 adet yap\u0131 bulundurmaktad\u0131r. Bunlar: and or not bu yap\u0131lar\u0131 tek tek inceleyelim.","title":"Bool \u0130\u015fle\u00e7leri"},{"location":"python/islecler/#and-yaps","text":"Bu yap\u0131 ve anlam\u0131na gelmektedir. Bu yap\u0131y\u0131 kulland\u0131\u011f\u0131m\u0131z yerde her iki durumunda do\u011fru olmas\u0131 beklenir. \u00d6rnek \u00fczerinde nas\u0131l kullan\u0131ld\u0131\u011f\u0131n\u0131 inceleyelim. sayi = int(input(\"Bir say\u0131 giriniz: \")) if sayi > 0 and sayi < 5: print(\"Giridi\u011finiz say\u0131 0 ile 5 aras\u0131nda bulunmaktad\u0131r.\") elif sayi > 5 and sayi < 10: print(\"Girdi\u011finiz say\u0131 5 ile 10 aras\u0131nda bulunmaktad\u0131r.\") Bir say\u0131 giriniz: 7 Girdi\u011finiz say\u0131 5 ile 10 aras\u0131nda bulunmaktad\u0131r.","title":"and yap\u0131s\u0131"},{"location":"python/islecler/#or-yaps","text":"Bu yap\u0131 veya anlam\u0131na gelmektedir. Bu yap\u0131y\u0131 kulland\u0131\u011f\u0131m\u0131z yerde her iki durumdan sadece birisinin do\u011fru olmas\u0131 beklenmektedir. \u00d6rnek \u00fczerinde nas\u0131l kullan\u0131ld\u0131\u011f\u0131n\u0131 inceleyelim. x = int(input(\"Notunuz: \")) if x > 100 or x < 0: print(\"B\u00f6yle bir not yok\") elif x >= 90 and x <= 100: print(\"A ald\u0131n\u0131z.\") elif x >= 80 and x <= 89: print(\"B ald\u0131n\u0131z.\") elif x >= 70 and x <= 79: print(\"C ald\u0131n\u0131z.\") elif x >= 60 and x <= 69: print(\"D ald\u0131n\u0131z.\") elif x >= 0 and x <= 59: print(\"F ald\u0131n\u0131z.\") Notunuz: 99 A ald\u0131n\u0131z.","title":"or yap\u0131s\u0131"},{"location":"python/islecler/#not-yaps","text":"Bu yap\u0131 de\u011fil anlam\u0131na gelmektedir. Bu yap\u0131y\u0131 kulland\u0131\u011f\u0131m\u0131z yerde durum istedi\u011fimiz duruma e\u015fit de\u011filse gerekli i\u015flemleri yapmaktad\u0131r. parola = input(\"parola: \") if not parola: print(\"Parola bo\u015f b\u0131rak\u0131lamaz!\") else: print(\"Parola dolu.\") parola: Parola bo\u015f b\u0131rak\u0131lamaz!","title":"not yap\u0131s\u0131"},{"location":"python/islecler/#deger-atama-islecleri","text":"\u0130\u015fle\u00e7 \u0130\u015flevi = De\u011fer Atama += Topla ve Sonucu Aktar -= \u00c7\u0131kar ve Sonucu Aktar /= B\u00f6l ve Sonucu Aktar *= \u00c7arp ve Sonucu Aktar %= Kalan\u0131 Bul ve Sonucu Aktar **= \u00dcss\u00fcn\u00fc Al ve Sonucu Aktar //= Taban B\u00f6lme \u0130\u015flemini Yap ve Sonucu Aktar Tabloda bulunan i\u015fle\u00e7leri tek tek inceleyelim. a = 5 #de\u011fer atama c = 5 c += 5 #toplama i\u015flemi print(c) 10 #Yukar\u0131da yapt\u0131\u011f\u0131m\u0131z toplama i\u015fleminin e\u015f de\u011feri. b = 5 b = b + 5 print(b) 10 d = 2 d -= 1 #\u00e7\u0131karma i\u015flemi print(d) 1 e = 4 e /= 3 #b\u00f6lme i\u015flemi print(e) 1.3333333333333333 f = 5 f *= 2 #\u00e7arpma i\u015flemi print(f) 10 g = 10 g %= 3 print(g) 1 h = 2 h **= 3 print(h) 8 k = 3 k //= 2 print(k) 1","title":"De\u011fer Atama i\u015fle\u00e7leri"},{"location":"python/islecler/#aitlik-islecleri","text":"Aitlik i\u015fle\u00e7leri, bir karakter dizisi ya da say\u0131n\u0131n, herhangi bir veri tipi i\u00e7inde bulunup bulunmad\u0131\u011f\u0131n\u0131 sorgulamam\u0131z\u0131 sa\u011flayan i\u015fle\u00e7lerdir. rakamlar = \"12345\" \"1\" in rakamlar True \"7\" in rakamlar False","title":"Aitlik \u0130\u015fle\u00e7leri"},{"location":"python/islecler/#kimlik-islecleri","text":"Python\u2019da her \u015feyin (ya da ba\u015fka bir deyi\u015fle her nesnenin) bir kimlik numaras\u0131 (identity) vard\u0131r. Kabaca s\u00f6ylemek gerekirse, bu kimlik numaras\u0131 denen \u015fey esas\u0131nda o nesnenin bellekteki adresini g\u00f6sterir. Bu kimlik numaras\u0131na id() isimli fonksiyon ile eri\u015febiliriz. m = 5 id(m) 4480324880 n = 20 id(n) 4480325360 Son G\u00fcncelleme: 16 Aral\u0131k 2019 - Pazartesi","title":"Kimlik \u0130\u015fle\u00e7leri"},{"location":"python/kacis_dizileri/","text":"Ka\u00e7\u0131\u015f Dizileri Ters Taksim (/) Bu i\u015faret karakter dizilerini tan\u0131mlarken olu\u015fabilecek hatalardan ka\u00e7mam\u0131z\u0131 sa\u011flar. print('\u0130stanbul\\'un 5 g\u00fcnl\u00fck hava durumu tahmini') \u0130stanbul'un 5 g\u00fcnl\u00fck hava durumu tahmini Sat\u0131r Ba\u015f\u0131 (/n) print(\"birinci sat\u0131r\\nikinci sat\u0131r\\n\u00fc\u00e7\u00fcnc\u00fc sat\u0131r\") birinci sat\u0131r ikinci sat\u0131r \u00fc\u00e7\u00fcnc\u00fc sat\u0131r Sekme (/t) /t ka\u00e7\u0131\u015f dizisi sanki Tab (sekme) tu\u015funa bas\u0131lm\u0131\u015f gibi bir etki olu\u015fturur. print(\"abc\\tdef\") abc def print(\"bir\", \"iki\", \"\u00fc\u00e7\", sep=\"\\t\") bir iki \u00fc\u00e7 print(*\"123456789\", sep=\"\\t\") 1 2 3 4 5 6 7 8 9 Zil Sesi (/a) \\ i\u015fareti \u2018a\u2019 harfiyle birle\u015ferek !bip! benzeri bir zil sesi \u00fcretilmesini sa\u011flar. print(\"\\a\") \u0007 Ayn\u0131 Sat\u0131r Ba\u015f\u0131 (/r) Bu ka\u00e7\u0131\u015f dizisi, bir karakter dizisinde ayn\u0131 sat\u0131r\u0131n en ba\u015f\u0131na d\u00f6n\u00fclmesini sa\u011flar. print(\"Merhaba\\rD\u00fcnya\") D\u00fcnya Burada, \u201cMerhaba\u201d karakter dizisi ekrana yazd\u0131r\u0131ld\u0131ktan sonra \\r ka\u00e7\u0131\u015f dizisinin etkisiyle sat\u0131r ba\u015f\u0131na d\u00f6n\u00fcl\u00fcyor ve bu ka\u00e7\u0131\u015f dizisinden sonra gelen \u201cD\u00fcnya\u201d karakter dizisi \u201cMerhaba\u201d karakter dizisinin \u00fczerine yaz\u0131yor. Tabii \u201cD\u00fcnya\u201d karakter dizisi i\u00e7inde 5 karakter, \u201cMerhaba\u201d karakter dizisi i\u00e7inde ise 7 karakter oldu\u011fu i\u00e7in, \u201cMerhaba\u201d karakter dizisinin son iki karakteri (\u201cba\u201d) d\u0131\u015farda kal\u0131yor. B\u00f6ylece ortaya \u201cD\u00fcnyaba\u201d gibi bir \u015fey \u00e7\u0131k\u0131yor. \u0130mle\u00e7 Kayd\u0131rma (/b) \\b ka\u00e7\u0131\u015f dizisinin g\u00f6revi, imleci o anki konumundan sola kayd\u0131rmakt\u0131r. print(\"yahoo.com\\b.uk\") yahoo.com\b.uk K\u00fc\u00e7\u00fck Unicode (/u) Bu ka\u00e7\u0131\u015f dizisi UNICODE sistemindeki her bir kodun konumunu g\u00f6sterir. '\\u0130' '\u0130' B\u00fcy\u00fck Unicode (/U) UNICODE kod konumlar\u0131n\u0131 g\u00f6sterebilmemizi sa\u011flar. '\\U00000131' '\u0131' Uzun Ad (/N) Karakterleri UNICODE adlar\u0131na g\u00f6re kullanabilmemizi sa\u011flar. print(\"\\N{LATIN SMALL LETTER A}\") a Onalt\u0131l\u0131 Karakter (\\x) Onalt\u0131l\u0131 sistemdeki bir say\u0131n\u0131n karakter kar\u015f\u0131l\u0131\u011f\u0131n\u0131 g\u00f6sterebilmemizi sa\u011flar. \"\\x41\" 'A' Etkisizle\u015ftirme (r) Karakter dizisi i\u00e7inde ka\u00e7\u0131\u015f dizilerini kullanabilmemizi sa\u011flar. print(r\"Kurulum dizini: C:\\aylar\\nisan\\toplam masraf\") Kurulum dizini: C:\\aylar\\nisan\\toplam masraf","title":"Ka\u00e7\u0131\u015f Dizileri"},{"location":"python/kacis_dizileri/#kacs-dizileri","text":"","title":"Ka\u00e7\u0131\u015f Dizileri"},{"location":"python/kacis_dizileri/#ters-taksim","text":"Bu i\u015faret karakter dizilerini tan\u0131mlarken olu\u015fabilecek hatalardan ka\u00e7mam\u0131z\u0131 sa\u011flar. print('\u0130stanbul\\'un 5 g\u00fcnl\u00fck hava durumu tahmini') \u0130stanbul'un 5 g\u00fcnl\u00fck hava durumu tahmini","title":"Ters Taksim (/)"},{"location":"python/kacis_dizileri/#satr-bas-n","text":"print(\"birinci sat\u0131r\\nikinci sat\u0131r\\n\u00fc\u00e7\u00fcnc\u00fc sat\u0131r\") birinci sat\u0131r ikinci sat\u0131r \u00fc\u00e7\u00fcnc\u00fc sat\u0131r","title":"Sat\u0131r Ba\u015f\u0131 (/n)"},{"location":"python/kacis_dizileri/#sekme-t","text":"/t ka\u00e7\u0131\u015f dizisi sanki Tab (sekme) tu\u015funa bas\u0131lm\u0131\u015f gibi bir etki olu\u015fturur. print(\"abc\\tdef\") abc def print(\"bir\", \"iki\", \"\u00fc\u00e7\", sep=\"\\t\") bir iki \u00fc\u00e7 print(*\"123456789\", sep=\"\\t\") 1 2 3 4 5 6 7 8 9","title":"Sekme (/t)"},{"location":"python/kacis_dizileri/#zil-sesi-a","text":"\\ i\u015fareti \u2018a\u2019 harfiyle birle\u015ferek !bip! benzeri bir zil sesi \u00fcretilmesini sa\u011flar. print(\"\\a\") \u0007","title":"Zil Sesi (/a)"},{"location":"python/kacis_dizileri/#ayn-satr-bas-r","text":"Bu ka\u00e7\u0131\u015f dizisi, bir karakter dizisinde ayn\u0131 sat\u0131r\u0131n en ba\u015f\u0131na d\u00f6n\u00fclmesini sa\u011flar. print(\"Merhaba\\rD\u00fcnya\") D\u00fcnya Burada, \u201cMerhaba\u201d karakter dizisi ekrana yazd\u0131r\u0131ld\u0131ktan sonra \\r ka\u00e7\u0131\u015f dizisinin etkisiyle sat\u0131r ba\u015f\u0131na d\u00f6n\u00fcl\u00fcyor ve bu ka\u00e7\u0131\u015f dizisinden sonra gelen \u201cD\u00fcnya\u201d karakter dizisi \u201cMerhaba\u201d karakter dizisinin \u00fczerine yaz\u0131yor. Tabii \u201cD\u00fcnya\u201d karakter dizisi i\u00e7inde 5 karakter, \u201cMerhaba\u201d karakter dizisi i\u00e7inde ise 7 karakter oldu\u011fu i\u00e7in, \u201cMerhaba\u201d karakter dizisinin son iki karakteri (\u201cba\u201d) d\u0131\u015farda kal\u0131yor. B\u00f6ylece ortaya \u201cD\u00fcnyaba\u201d gibi bir \u015fey \u00e7\u0131k\u0131yor.","title":"Ayn\u0131 Sat\u0131r Ba\u015f\u0131 (/r)"},{"location":"python/kacis_dizileri/#imlec-kaydrma-b","text":"\\b ka\u00e7\u0131\u015f dizisinin g\u00f6revi, imleci o anki konumundan sola kayd\u0131rmakt\u0131r. print(\"yahoo.com\\b.uk\") yahoo.com\b.uk","title":"\u0130mle\u00e7 Kayd\u0131rma (/b)"},{"location":"python/kacis_dizileri/#kucuk-unicode-u","text":"Bu ka\u00e7\u0131\u015f dizisi UNICODE sistemindeki her bir kodun konumunu g\u00f6sterir. '\\u0130' '\u0130'","title":"K\u00fc\u00e7\u00fck Unicode (/u)"},{"location":"python/kacis_dizileri/#buyuk-unicode-u","text":"UNICODE kod konumlar\u0131n\u0131 g\u00f6sterebilmemizi sa\u011flar. '\\U00000131' '\u0131'","title":"B\u00fcy\u00fck Unicode (/U)"},{"location":"python/kacis_dizileri/#uzun-ad-n","text":"Karakterleri UNICODE adlar\u0131na g\u00f6re kullanabilmemizi sa\u011flar. print(\"\\N{LATIN SMALL LETTER A}\") a","title":"Uzun Ad (/N)"},{"location":"python/kacis_dizileri/#onaltl-karakter-x","text":"Onalt\u0131l\u0131 sistemdeki bir say\u0131n\u0131n karakter kar\u015f\u0131l\u0131\u011f\u0131n\u0131 g\u00f6sterebilmemizi sa\u011flar. \"\\x41\" 'A'","title":"Onalt\u0131l\u0131 Karakter (\\x)"},{"location":"python/kacis_dizileri/#etkisizlestirme-r","text":"Karakter dizisi i\u00e7inde ka\u00e7\u0131\u015f dizilerini kullanabilmemizi sa\u011flar. print(r\"Kurulum dizini: C:\\aylar\\nisan\\toplam masraf\") Kurulum dizini: C:\\aylar\\nisan\\toplam masraf","title":"Etkisizle\u015ftirme (r)"},{"location":"python/kosullu_durumlar/","text":"Ko\u015fullu Durumlar Ko\u015fullu Duumlar, geli\u015ftirdi\u011fimiz yaz\u0131l\u0131mda baz\u0131 filtrelemeler yapmam\u0131z\u0131 veya belirli bir ko\u015ful belirleyip ona g\u00f6re davranmas\u0131n\u0131 sa\u011flayabiliriz. Bunun i\u00e7in python'da bulunan ko\u015fullar\u0131 inceleyelim. Ko\u015ful Deyimleri \u0130f Python programlama dilinde ko\u015fullu durumlar\u0131 belirtmek i\u00e7in \u00fc\u00e7 adet deyimden faydalan\u0131r\u0131z: if elif else if deyimi ile ba\u015flayal\u0131m. a = 10 if a > 5: print(\"Say\u0131 10'dan b\u00fcy\u00fckt\u00fcr.\") Say\u0131 10'dan b\u00fcy\u00fckt\u00fcr. if deyimi >(b\u00fcy\u00fckt\u00fcr) i\u015faretinin haricinde farkl\u0131 i\u015faretlerde almaktad\u0131r. \u0130\u015fle\u00e7 Anlam\u0131 > b\u00fcy\u00fckt\u00fcr < k\u00fc\u00e7\u00fckt\u00fcr >= b\u00fcy\u00fck e\u015fittir <= k\u00fc\u00e7\u00fck e\u015fittir == e\u015fittir != e\u015fit de\u011fildir Kullan\u0131c\u0131dan bilgi alarak if deyimini kullanal\u0131m. sayi = int(input(\"Bir say\u0131 giriniz: \")) if sayi < 5: print(\"say\u0131 5'ten k\u00fc\u00e7\u00fckt\u00fcr.\") if sayi > 5: print(\"say\u0131 5'ten b\u00fcy\u00fckt\u00fcr.\") if sayi == 5: print(\"say\u0131 5'e e\u015fittir.\") Bir say\u0131 giriniz: 5 say\u0131 5'e e\u015fittir. elif elif, bir ba\u015fka ko\u015ful deyimidir. Nas\u0131l \u00e7al\u0131\u015ft\u0131\u011f\u0131n\u0131 a\u015fa\u011f\u0131da bulunan \u00f6rne\u011fi incleyerek anlayal\u0131m. sayi = int(input(\"Bir say\u0131 giriniz: \")) if sayi == 5: print(\"say\u0131 5'e e\u015fittir.\") elif sayi < 5: print(\"say\u0131 5'ten k\u00fc\u00e7\u00fckt\u00fcr.\") elif sayi < 10: print(\"say\u0131 10'dan k\u00fc\u00e7\u00fckt\u00fcr.\") elif sayi > 5: print(\"say\u0131 5'ten b\u00fcy\u00fckt\u00fcr.\") Bir say\u0131 giriniz: 1 say\u0131 5'ten k\u00fc\u00e7\u00fckt\u00fcr. Yukar\u0131da yazd\u0131\u011f\u0131m\u0131z \u00f6rne\u011fi hepsi if olacak \u015fekilde yazal\u0131m ve iki sonucuda kar\u015f\u0131la\u015ft\u0131ral\u0131m. sayi = int(input(\"Bir say\u0131 giriniz: \")) if sayi == 5: print(\"say\u0131 5'e e\u015fittir.\") if sayi < 5: print(\"say\u0131 5'ten k\u00fc\u00e7\u00fckt\u00fcr.\") if sayi < 10: print(\"say\u0131 10'dan k\u00fc\u00e7\u00fckt\u00fcr.\") if sayi > 5: print(\"say\u0131 5'ten b\u00fcy\u00fckt\u00fcr.\") Bir say\u0131 giriniz: 1 say\u0131 5'ten k\u00fc\u00e7\u00fckt\u00fcr. say\u0131 10'dan k\u00fc\u00e7\u00fckt\u00fcr. G\u00f6rd\u00fc\u011f\u00fcn\u00fcz gibi elif ko\u015fulunu kullanarak yazd\u0131\u011f\u0131m\u0131z zaman girmi\u015f oldu\u011fumuz de\u011fer hem 5 hem de 10 de\u011ferinden k\u00fc\u00e7\u00fck oldu\u011fu halde sadece 5'ten k\u00fc\u00e7\u00fckt\u00fcr dedi. Yani elif de\u011feri kendisinden sonraki ba\u015fka ko\u015ful \u00e7al\u0131\u015facak dahi olsa o ko\u015fula hi\u00e7 u\u011fram\u0131yor. Ayn\u0131 program\u0131 if de\u011ferini kulland\u0131\u011f\u0131m\u0131z zaman hem 5'ten k\u00fc\u00e7\u00fckt\u00fcr hem de 10'dan k\u00fc\u00e7\u00fckt\u00fcr yazd\u0131. Bu da bizlere if ve elif ko\u015fullar\u0131n\u0131n nas\u0131l \u00e7al\u0131\u015ft\u0131\u011f\u0131 hakk\u0131nda bilgi veriyor. else else ko\u015fullu deyimi yukar\u0131da bahsetti\u011fimiz ko\u015fullu deyimlerden biraz farkl\u0131 \u00e7al\u0131\u015fmaktad\u0131r. Nas\u0131l \u00e7al\u0131\u015ft\u0131\u011f\u0131n\u0131 bir \u00f6rnek \u00fczerinde inceleyelim. sayi = int(input(\"Bir say\u0131 giriniz: \")) if sayi == 1: print(\"Bildiniz.\") else: print(\"Tekrar deneyiniz.\") Bir say\u0131 giriniz: 0 Tekrar deneyiniz. G\u00f6rm\u00fc\u015f oldu\u011funuz gibi e\u011fer yazm\u0131\u015f oldu\u011fumuz ko\u015ful sa\u011flanmad\u0131\u011f\u0131 zaman else durumu \u00e7al\u0131\u015fmaktad\u0131r. Son G\u00fcncelleme: 16 Aral\u0131k 2019 - Pazartesi","title":"Ko\u015fullu Durumlar"},{"location":"python/kosullu_durumlar/#kosullu-durumlar","text":"Ko\u015fullu Duumlar, geli\u015ftirdi\u011fimiz yaz\u0131l\u0131mda baz\u0131 filtrelemeler yapmam\u0131z\u0131 veya belirli bir ko\u015ful belirleyip ona g\u00f6re davranmas\u0131n\u0131 sa\u011flayabiliriz. Bunun i\u00e7in python'da bulunan ko\u015fullar\u0131 inceleyelim.","title":"Ko\u015fullu Durumlar"},{"location":"python/kosullu_durumlar/#kosul-deyimleri","text":"","title":"Ko\u015ful Deyimleri"},{"location":"python/kosullu_durumlar/#if","text":"Python programlama dilinde ko\u015fullu durumlar\u0131 belirtmek i\u00e7in \u00fc\u00e7 adet deyimden faydalan\u0131r\u0131z: if elif else if deyimi ile ba\u015flayal\u0131m. a = 10 if a > 5: print(\"Say\u0131 10'dan b\u00fcy\u00fckt\u00fcr.\") Say\u0131 10'dan b\u00fcy\u00fckt\u00fcr. if deyimi >(b\u00fcy\u00fckt\u00fcr) i\u015faretinin haricinde farkl\u0131 i\u015faretlerde almaktad\u0131r. \u0130\u015fle\u00e7 Anlam\u0131 > b\u00fcy\u00fckt\u00fcr < k\u00fc\u00e7\u00fckt\u00fcr >= b\u00fcy\u00fck e\u015fittir <= k\u00fc\u00e7\u00fck e\u015fittir == e\u015fittir != e\u015fit de\u011fildir Kullan\u0131c\u0131dan bilgi alarak if deyimini kullanal\u0131m. sayi = int(input(\"Bir say\u0131 giriniz: \")) if sayi < 5: print(\"say\u0131 5'ten k\u00fc\u00e7\u00fckt\u00fcr.\") if sayi > 5: print(\"say\u0131 5'ten b\u00fcy\u00fckt\u00fcr.\") if sayi == 5: print(\"say\u0131 5'e e\u015fittir.\") Bir say\u0131 giriniz: 5 say\u0131 5'e e\u015fittir.","title":"\u0130f"},{"location":"python/kosullu_durumlar/#elif","text":"elif, bir ba\u015fka ko\u015ful deyimidir. Nas\u0131l \u00e7al\u0131\u015ft\u0131\u011f\u0131n\u0131 a\u015fa\u011f\u0131da bulunan \u00f6rne\u011fi incleyerek anlayal\u0131m. sayi = int(input(\"Bir say\u0131 giriniz: \")) if sayi == 5: print(\"say\u0131 5'e e\u015fittir.\") elif sayi < 5: print(\"say\u0131 5'ten k\u00fc\u00e7\u00fckt\u00fcr.\") elif sayi < 10: print(\"say\u0131 10'dan k\u00fc\u00e7\u00fckt\u00fcr.\") elif sayi > 5: print(\"say\u0131 5'ten b\u00fcy\u00fckt\u00fcr.\") Bir say\u0131 giriniz: 1 say\u0131 5'ten k\u00fc\u00e7\u00fckt\u00fcr. Yukar\u0131da yazd\u0131\u011f\u0131m\u0131z \u00f6rne\u011fi hepsi if olacak \u015fekilde yazal\u0131m ve iki sonucuda kar\u015f\u0131la\u015ft\u0131ral\u0131m. sayi = int(input(\"Bir say\u0131 giriniz: \")) if sayi == 5: print(\"say\u0131 5'e e\u015fittir.\") if sayi < 5: print(\"say\u0131 5'ten k\u00fc\u00e7\u00fckt\u00fcr.\") if sayi < 10: print(\"say\u0131 10'dan k\u00fc\u00e7\u00fckt\u00fcr.\") if sayi > 5: print(\"say\u0131 5'ten b\u00fcy\u00fckt\u00fcr.\") Bir say\u0131 giriniz: 1 say\u0131 5'ten k\u00fc\u00e7\u00fckt\u00fcr. say\u0131 10'dan k\u00fc\u00e7\u00fckt\u00fcr. G\u00f6rd\u00fc\u011f\u00fcn\u00fcz gibi elif ko\u015fulunu kullanarak yazd\u0131\u011f\u0131m\u0131z zaman girmi\u015f oldu\u011fumuz de\u011fer hem 5 hem de 10 de\u011ferinden k\u00fc\u00e7\u00fck oldu\u011fu halde sadece 5'ten k\u00fc\u00e7\u00fckt\u00fcr dedi. Yani elif de\u011feri kendisinden sonraki ba\u015fka ko\u015ful \u00e7al\u0131\u015facak dahi olsa o ko\u015fula hi\u00e7 u\u011fram\u0131yor. Ayn\u0131 program\u0131 if de\u011ferini kulland\u0131\u011f\u0131m\u0131z zaman hem 5'ten k\u00fc\u00e7\u00fckt\u00fcr hem de 10'dan k\u00fc\u00e7\u00fckt\u00fcr yazd\u0131. Bu da bizlere if ve elif ko\u015fullar\u0131n\u0131n nas\u0131l \u00e7al\u0131\u015ft\u0131\u011f\u0131 hakk\u0131nda bilgi veriyor.","title":"elif"},{"location":"python/kosullu_durumlar/#else","text":"else ko\u015fullu deyimi yukar\u0131da bahsetti\u011fimiz ko\u015fullu deyimlerden biraz farkl\u0131 \u00e7al\u0131\u015fmaktad\u0131r. Nas\u0131l \u00e7al\u0131\u015ft\u0131\u011f\u0131n\u0131 bir \u00f6rnek \u00fczerinde inceleyelim. sayi = int(input(\"Bir say\u0131 giriniz: \")) if sayi == 1: print(\"Bildiniz.\") else: print(\"Tekrar deneyiniz.\") Bir say\u0131 giriniz: 0 Tekrar deneyiniz. G\u00f6rm\u00fc\u015f oldu\u011funuz gibi e\u011fer yazm\u0131\u015f oldu\u011fumuz ko\u015ful sa\u011flanmad\u0131\u011f\u0131 zaman else durumu \u00e7al\u0131\u015fmaktad\u0131r. Son G\u00fcncelleme: 16 Aral\u0131k 2019 - Pazartesi","title":"else"},{"location":"python/kullanicidan_bilgi_almak/","text":"Kullan\u0131c\u0131dan Bilgi Almak Kullan\u0131c\u0131dan bilgi almak, geli\u015ftirdi\u011fimiz yaz\u0131l\u0131mlar\u0131n kullan\u0131c\u0131ya \u00f6zg\u00fc bilgiler \u00fcretmesi i\u00e7in elzem bir durumdur. Bu y\u00fczden python i\u00e7erisinde bulunan ve kullan\u0131c\u0131dan bilgi almam\u0131za yarayan bir fonksiyondur. input() fonksiyonu isim = input(\"\u0130sminiz nedir? \") \u0130sminiz nedir? Abdullah print(\"Merhaba\", isim, end=\"!\\n\") Merhaba Abdullah! G\u00f6rd\u00fc\u011f\u00fcn\u00fcz gibi input() fonksiyonu etkile\u015fimli bir yaz\u0131l\u0131m \u00fcretmemiz konusunda kolayl\u0131k sa\u011fl\u0131yor. Peki bu fonksiyonu kullanarak bir adet toplama i\u015flemi yapt\u0131ral\u0131m; sayi1 = input(\"1. Say\u0131y\u0131 giriniz?: \") 1. Say\u0131y\u0131 giriniz?: 1 sayi2 = input(\"2. Say\u0131y\u0131 giriniz: \") 2. Say\u0131y\u0131 giriniz: 0 toplam = sayi1 + sayi2 print(\"Toplam i\u015fleminin sonucu: \",toplam) Toplam i\u015fleminin sonucu: 10 Yukar\u0131da bulunan i\u015flemi inceledi\u011fimiz taktirde bir hatan\u0131n oldu\u011funu g\u00f6r\u00fcyoruz. Bu hata toplama i\u015flemi yerine iki adet c\u00fcmleyi yan yana yazd\u0131rma i\u015flemi yapm\u0131\u015f olmas\u0131. Peki bu durumun sebebi ne, neden iki say\u0131y\u0131 toplamak yerine bu iki say\u0131y\u0131 yan yana yazd\u0131rd\u0131. Burada bakmam\u0131z gereken yap\u0131, girdi\u011fimiz say\u0131lar\u0131n tipinin say\u0131 m\u0131 oldu\u011fu yoksa c\u00fcmlemi oldu\u011fu. Hadi bu bakal\u0131m. type(sayi1) str type(sayi2) str type(toplam) str Yukar\u0131da da g\u00f6rd\u00fc\u011f\u00fcn\u00fcz gibi sayi1, sayi2 ve toplam de\u011fi\u015fkenlerinin tipi string. Bu durumda bizim kullan\u0131c\u0131dan ald\u0131\u011f\u0131m\u0131z de\u011ferlerin tiplerini d\u00f6n\u00fc\u015ft\u00fcrmemiz gerekmektedir. \u015e\u0130mdi de bu konuyu \u00f6\u011frenelim. Tip D\u00f6n\u00fc\u015f\u00fcmleri Tip d\u00f6n\u00fc\u015f\u00fcmleri, de\u011fi\u015fkenlerin farkl\u0131 tiplere d\u00f6n\u00fc\u015ft\u00fcr\u00fclmesini sa\u011flar. int() Bu yap\u0131 de\u011fi\u015fkenimizi int tipine d\u00f6n\u00fc\u015ft\u00fcrmemizi sa\u011flar. str_sayi = \"1\" int_sayi = int(str_sayi) print(\"str_sayi: \",type(str_sayi)) print(\"int_sayi: \",type(int_sayi)) str_sayi: <class 'str'> int_sayi: <class 'int'> string tipindeki de\u011fi\u015fkeni int() fonksiyonu ile int tipine d\u00f6n\u00fc\u015ft\u00fcrd\u00fck. B\u00f6ylece bu de\u011fi\u015fkeni matematiksel i\u015flemlerde kullanabiliriz. str() Bu yap\u0131 de\u011fi\u015fkenimizin tipini str tipine d\u00f6n\u00fc\u015ft\u00fcrmemizi sa\u011flar. sayi = 5 karakter = str(sayi) print(\"sayinin tipi: \",type(sayi)) print(\"karakterin tipi: \",type(karakter)) sayinin tipi: <class 'int'> karakterin tipi: <class 'str'> float() Bu yap\u0131 de\u011fi\u015fkenimizi float tipine d\u00f6n\u00fc\u015ft\u00fcrmemizi sa\u011flar. Bu t\u00fcr bildi\u011finiz \u00fczere kayan noktal\u0131 say\u0131lar oluyor. \u00d6rnek vermek gerekirse 1,5 gibi. a = 42 print(a) type(a) 42 int a = float(a) print(a) type(a) 42.0 float complex() Bu yap\u0131 de\u011fi\u015fkenimizi complex tipine d\u00f6n\u00fc\u015ft\u00fcrmemizi sa\u011flar. Bu t\u00fcr bildi\u011finiz \u00fczere karma\u015f\u0131k say\u0131lar oluyor. \u00d6rnek vermek gerekirse 15+0j gibi. type(15+0j) complex Bu k\u0131s\u0131mda \u00f6\u011frendiklerimiz ile yukar\u0131da yapmaya \u00e7al\u0131\u015ft\u0131\u011f\u0131m\u0131z, kullan\u0131c\u0131dan iki adet say\u0131 al\u0131p bunlar\u0131 toplama i\u015flemini yapal\u0131m. sayi1 = int(input(\"1. say\u0131y\u0131 giriniz: \")) 1. say\u0131y\u0131 giriniz: 1 sayi2 = int(input(\"2. say\u0131y\u0131 giriniz: \")) 2. say\u0131y\u0131 giriniz: 1 toplam = sayi1 + sayi2 print(\"Toplam: \",toplam) Toplam: 2 format() Metodu Bu fonksiyon, print fonksiyonunu daha etkili kullanabilmemiz ve baz\u0131 i\u015flemleri daha etkili yapmam\u0131z sa\u011flar. Hemen bir \u00f6rnek ile inceleyelim. dil1 = \"Python\" dil2 = \"Java\" print(\"{} ve {} bir progralama dilidir.\".format(dil1,dil2)) Python ve Java bir progralama dilidir. Bu yap\u0131y\u0131 kullan\u0131c\u0131dan ald\u0131\u011f\u0131m\u0131z bilgileri print fonksiyonu ile ekranda g\u00f6sterebiliriz. Son G\u00fcncelleme: 16 Aral\u0131k 2019 - Pazartesi","title":"Kullan\u0131c\u0131dan Bilgi Almak"},{"location":"python/kullanicidan_bilgi_almak/#kullancdan-bilgi-almak","text":"Kullan\u0131c\u0131dan bilgi almak, geli\u015ftirdi\u011fimiz yaz\u0131l\u0131mlar\u0131n kullan\u0131c\u0131ya \u00f6zg\u00fc bilgiler \u00fcretmesi i\u00e7in elzem bir durumdur. Bu y\u00fczden python i\u00e7erisinde bulunan ve kullan\u0131c\u0131dan bilgi almam\u0131za yarayan bir fonksiyondur.","title":"Kullan\u0131c\u0131dan Bilgi Almak"},{"location":"python/kullanicidan_bilgi_almak/#input-fonksiyonu","text":"isim = input(\"\u0130sminiz nedir? \") \u0130sminiz nedir? Abdullah print(\"Merhaba\", isim, end=\"!\\n\") Merhaba Abdullah! G\u00f6rd\u00fc\u011f\u00fcn\u00fcz gibi input() fonksiyonu etkile\u015fimli bir yaz\u0131l\u0131m \u00fcretmemiz konusunda kolayl\u0131k sa\u011fl\u0131yor. Peki bu fonksiyonu kullanarak bir adet toplama i\u015flemi yapt\u0131ral\u0131m; sayi1 = input(\"1. Say\u0131y\u0131 giriniz?: \") 1. Say\u0131y\u0131 giriniz?: 1 sayi2 = input(\"2. Say\u0131y\u0131 giriniz: \") 2. Say\u0131y\u0131 giriniz: 0 toplam = sayi1 + sayi2 print(\"Toplam i\u015fleminin sonucu: \",toplam) Toplam i\u015fleminin sonucu: 10 Yukar\u0131da bulunan i\u015flemi inceledi\u011fimiz taktirde bir hatan\u0131n oldu\u011funu g\u00f6r\u00fcyoruz. Bu hata toplama i\u015flemi yerine iki adet c\u00fcmleyi yan yana yazd\u0131rma i\u015flemi yapm\u0131\u015f olmas\u0131. Peki bu durumun sebebi ne, neden iki say\u0131y\u0131 toplamak yerine bu iki say\u0131y\u0131 yan yana yazd\u0131rd\u0131. Burada bakmam\u0131z gereken yap\u0131, girdi\u011fimiz say\u0131lar\u0131n tipinin say\u0131 m\u0131 oldu\u011fu yoksa c\u00fcmlemi oldu\u011fu. Hadi bu bakal\u0131m. type(sayi1) str type(sayi2) str type(toplam) str Yukar\u0131da da g\u00f6rd\u00fc\u011f\u00fcn\u00fcz gibi sayi1, sayi2 ve toplam de\u011fi\u015fkenlerinin tipi string. Bu durumda bizim kullan\u0131c\u0131dan ald\u0131\u011f\u0131m\u0131z de\u011ferlerin tiplerini d\u00f6n\u00fc\u015ft\u00fcrmemiz gerekmektedir. \u015e\u0130mdi de bu konuyu \u00f6\u011frenelim.","title":"input() fonksiyonu"},{"location":"python/kullanicidan_bilgi_almak/#tip-donusumleri","text":"Tip d\u00f6n\u00fc\u015f\u00fcmleri, de\u011fi\u015fkenlerin farkl\u0131 tiplere d\u00f6n\u00fc\u015ft\u00fcr\u00fclmesini sa\u011flar.","title":"Tip D\u00f6n\u00fc\u015f\u00fcmleri"},{"location":"python/kullanicidan_bilgi_almak/#int","text":"Bu yap\u0131 de\u011fi\u015fkenimizi int tipine d\u00f6n\u00fc\u015ft\u00fcrmemizi sa\u011flar. str_sayi = \"1\" int_sayi = int(str_sayi) print(\"str_sayi: \",type(str_sayi)) print(\"int_sayi: \",type(int_sayi)) str_sayi: <class 'str'> int_sayi: <class 'int'> string tipindeki de\u011fi\u015fkeni int() fonksiyonu ile int tipine d\u00f6n\u00fc\u015ft\u00fcrd\u00fck. B\u00f6ylece bu de\u011fi\u015fkeni matematiksel i\u015flemlerde kullanabiliriz.","title":"int()"},{"location":"python/kullanicidan_bilgi_almak/#str","text":"Bu yap\u0131 de\u011fi\u015fkenimizin tipini str tipine d\u00f6n\u00fc\u015ft\u00fcrmemizi sa\u011flar. sayi = 5 karakter = str(sayi) print(\"sayinin tipi: \",type(sayi)) print(\"karakterin tipi: \",type(karakter)) sayinin tipi: <class 'int'> karakterin tipi: <class 'str'>","title":"str()"},{"location":"python/kullanicidan_bilgi_almak/#float","text":"Bu yap\u0131 de\u011fi\u015fkenimizi float tipine d\u00f6n\u00fc\u015ft\u00fcrmemizi sa\u011flar. Bu t\u00fcr bildi\u011finiz \u00fczere kayan noktal\u0131 say\u0131lar oluyor. \u00d6rnek vermek gerekirse 1,5 gibi. a = 42 print(a) type(a) 42 int a = float(a) print(a) type(a) 42.0 float","title":"float()"},{"location":"python/kullanicidan_bilgi_almak/#complex","text":"Bu yap\u0131 de\u011fi\u015fkenimizi complex tipine d\u00f6n\u00fc\u015ft\u00fcrmemizi sa\u011flar. Bu t\u00fcr bildi\u011finiz \u00fczere karma\u015f\u0131k say\u0131lar oluyor. \u00d6rnek vermek gerekirse 15+0j gibi. type(15+0j) complex Bu k\u0131s\u0131mda \u00f6\u011frendiklerimiz ile yukar\u0131da yapmaya \u00e7al\u0131\u015ft\u0131\u011f\u0131m\u0131z, kullan\u0131c\u0131dan iki adet say\u0131 al\u0131p bunlar\u0131 toplama i\u015flemini yapal\u0131m. sayi1 = int(input(\"1. say\u0131y\u0131 giriniz: \")) 1. say\u0131y\u0131 giriniz: 1 sayi2 = int(input(\"2. say\u0131y\u0131 giriniz: \")) 2. say\u0131y\u0131 giriniz: 1 toplam = sayi1 + sayi2 print(\"Toplam: \",toplam) Toplam: 2","title":"complex()"},{"location":"python/kullanicidan_bilgi_almak/#format-metodu","text":"Bu fonksiyon, print fonksiyonunu daha etkili kullanabilmemiz ve baz\u0131 i\u015flemleri daha etkili yapmam\u0131z sa\u011flar. Hemen bir \u00f6rnek ile inceleyelim. dil1 = \"Python\" dil2 = \"Java\" print(\"{} ve {} bir progralama dilidir.\".format(dil1,dil2)) Python ve Java bir progralama dilidir. Bu yap\u0131y\u0131 kullan\u0131c\u0131dan ald\u0131\u011f\u0131m\u0131z bilgileri print fonksiyonu ile ekranda g\u00f6sterebiliriz. Son G\u00fcncelleme: 16 Aral\u0131k 2019 - Pazartesi","title":"format() Metodu"},{"location":"python/print/","text":"print Fonksiyonu Print fonksiyonu ekrana \u00e7\u0131kt\u0131 vermemizi sa\u011flar. print(\"Python\") Python Print fonksiyonunu \u00fc\u00e7 farkl\u0131 t\u0131rnak ile birlikte kullanabilirsiniz. Tek t\u0131rnak (\u2018 \u2018) \u00c7ift t\u0131rnak (\u201d \u201d) \u00dc\u00e7 t\u0131rnak (\u201c\u201d\u201d \u201c\u201d\u201d) print('1) Python programlama dili') print(\"2) Python programlama dili\") print(\"\"\"3) Python programlama dili\"\"\") 1) Python programlama dili 2) Python programlama dili 3) Python programlama dili Print fonksiyonun i\u00e7erisinde t\u0131rnaklar\u0131 beraber kullanmak isted\u011finiz zaman ise \u015fu \u015fekilde bir yol izleyebilirsiniz. print('Python programlama dilinin ad\u0131 \"piton\" y\u0131lan\u0131ndan gelmez') print(\"\u0130stanbul'un 5 g\u00fcnl\u00fck hava durumu tahmini\") print(\"\"\"Python programlama dilinin ad\u0131 \"piton\" y\u0131lan\u0131ndan gelmez\"\"\") print(\"\"\"\u0130stanbul'un 5 g\u00fcnl\u00fck hava durumu tahmini\"\"\") Python programlama dilinin ad\u0131 \"piton\" y\u0131lan\u0131ndan gelmez \u0130stanbul'un 5 g\u00fcnl\u00fck hava durumu tahmini Python programlama dilinin ad\u0131 \"piton\" y\u0131lan\u0131ndan gelmez \u0130stanbul'un 5 g\u00fcnl\u00fck hava durumu tahmini Print i\u00e7erisinde \u00fc\u00e7 t\u0131rnak kullanarak \u00e7ok farkl\u0131 \u00e7\u0131kt\u0131lar verebilirsiniz. print(\"\"\" [H]=========\u015eAH\u0130========[-][o][x] | | | Programa Ho\u015fgeldiniz! | | S\u00fcr\u00fcm 0.8 | | Devam etmek i\u00e7in herhangi | | bir d\u00fc\u011fmeye bas\u0131n. | | | |=================================| \"\"\") [H]=========\u015eAH\u0130========[-][o][x] | | | Programa Ho\u015fgeldiniz! | | S\u00fcr\u00fcm 0.8 | | Devam etmek i\u00e7in herhangi | | bir d\u00fc\u011fmeye bas\u0131n. | | | |=================================| Print fonksiyonunda rakam ile harfleri beraber yazd\u0131rabilirsiniz. print(\"Python\", \"Versiyon\",3.7) Python Versiyon 3.7 print() Fonksiyonunun Parametreleri sep sep parametresi, ekrana bas\u0131lacak \u00f6\u011feler aras\u0131na hangi karakterin yerle\u015ftirilece\u011fini g\u00f6sterir. print(\"http://\", \"www.\", \"istihza.\", \"com\", sep=\"\") http://www.istihza.com print(\"\u0130stanbul\", \"Konya\", sep=\"-\") \u0130stanbul-Konya end end parametresi ise bu parametrelerin sonuna neyin gelece\u011fini belirler. print(\"Bug\u00fcn g\u00fcnlerden Cuma\", end=\".\") Bug\u00fcn g\u00fcnlerden Cuma. file file verilen karakter dizisi ve/veya say\u0131lar\u0131n, yani parametrelerin nereye yaz\u0131laca\u011f\u0131n\u0131 belirtmektir. A\u015fa\u011f\u0131da bulunan komutlar\u0131o \u00e7al\u0131\u015ft\u0131rd\u0131\u011f\u0131m\u0131z taktirde python dosyas\u0131n\u0131n bulundu\u011fu konuma deneme.txt isminde bir dosya olu\u015fturup belirtmi\u015f oldu\u011fumuz c\u00fcmleyi yazacakt\u0131r. dosya = open(\"deneme.txt\", \"w\") print(\"Ben Python, Monty Python!\", file=dosya) dosya.close() y\u0131ld\u0131z(*) Bu parametre veriler aras\u0131nda i\u015flem yapmam\u0131z\u0131 sa\u011flar. print(*\"Python\") P y t h o n","title":"print Fonksiyonu"},{"location":"python/print/#print-fonksiyonu","text":"Print fonksiyonu ekrana \u00e7\u0131kt\u0131 vermemizi sa\u011flar. print(\"Python\") Python Print fonksiyonunu \u00fc\u00e7 farkl\u0131 t\u0131rnak ile birlikte kullanabilirsiniz. Tek t\u0131rnak (\u2018 \u2018) \u00c7ift t\u0131rnak (\u201d \u201d) \u00dc\u00e7 t\u0131rnak (\u201c\u201d\u201d \u201c\u201d\u201d) print('1) Python programlama dili') print(\"2) Python programlama dili\") print(\"\"\"3) Python programlama dili\"\"\") 1) Python programlama dili 2) Python programlama dili 3) Python programlama dili Print fonksiyonun i\u00e7erisinde t\u0131rnaklar\u0131 beraber kullanmak isted\u011finiz zaman ise \u015fu \u015fekilde bir yol izleyebilirsiniz. print('Python programlama dilinin ad\u0131 \"piton\" y\u0131lan\u0131ndan gelmez') print(\"\u0130stanbul'un 5 g\u00fcnl\u00fck hava durumu tahmini\") print(\"\"\"Python programlama dilinin ad\u0131 \"piton\" y\u0131lan\u0131ndan gelmez\"\"\") print(\"\"\"\u0130stanbul'un 5 g\u00fcnl\u00fck hava durumu tahmini\"\"\") Python programlama dilinin ad\u0131 \"piton\" y\u0131lan\u0131ndan gelmez \u0130stanbul'un 5 g\u00fcnl\u00fck hava durumu tahmini Python programlama dilinin ad\u0131 \"piton\" y\u0131lan\u0131ndan gelmez \u0130stanbul'un 5 g\u00fcnl\u00fck hava durumu tahmini Print i\u00e7erisinde \u00fc\u00e7 t\u0131rnak kullanarak \u00e7ok farkl\u0131 \u00e7\u0131kt\u0131lar verebilirsiniz. print(\"\"\" [H]=========\u015eAH\u0130========[-][o][x] | | | Programa Ho\u015fgeldiniz! | | S\u00fcr\u00fcm 0.8 | | Devam etmek i\u00e7in herhangi | | bir d\u00fc\u011fmeye bas\u0131n. | | | |=================================| \"\"\") [H]=========\u015eAH\u0130========[-][o][x] | | | Programa Ho\u015fgeldiniz! | | S\u00fcr\u00fcm 0.8 | | Devam etmek i\u00e7in herhangi | | bir d\u00fc\u011fmeye bas\u0131n. | | | |=================================| Print fonksiyonunda rakam ile harfleri beraber yazd\u0131rabilirsiniz. print(\"Python\", \"Versiyon\",3.7) Python Versiyon 3.7","title":"print Fonksiyonu"},{"location":"python/print/#print-fonksiyonunun-parametreleri","text":"","title":"print() Fonksiyonunun Parametreleri"},{"location":"python/print/#sep","text":"sep parametresi, ekrana bas\u0131lacak \u00f6\u011feler aras\u0131na hangi karakterin yerle\u015ftirilece\u011fini g\u00f6sterir. print(\"http://\", \"www.\", \"istihza.\", \"com\", sep=\"\") http://www.istihza.com print(\"\u0130stanbul\", \"Konya\", sep=\"-\") \u0130stanbul-Konya","title":"sep"},{"location":"python/print/#end","text":"end parametresi ise bu parametrelerin sonuna neyin gelece\u011fini belirler. print(\"Bug\u00fcn g\u00fcnlerden Cuma\", end=\".\") Bug\u00fcn g\u00fcnlerden Cuma.","title":"end"},{"location":"python/print/#file","text":"file verilen karakter dizisi ve/veya say\u0131lar\u0131n, yani parametrelerin nereye yaz\u0131laca\u011f\u0131n\u0131 belirtmektir. A\u015fa\u011f\u0131da bulunan komutlar\u0131o \u00e7al\u0131\u015ft\u0131rd\u0131\u011f\u0131m\u0131z taktirde python dosyas\u0131n\u0131n bulundu\u011fu konuma deneme.txt isminde bir dosya olu\u015fturup belirtmi\u015f oldu\u011fumuz c\u00fcmleyi yazacakt\u0131r. dosya = open(\"deneme.txt\", \"w\") print(\"Ben Python, Monty Python!\", file=dosya) dosya.close()","title":"file"},{"location":"python/print/#yldz","text":"Bu parametre veriler aras\u0131nda i\u015flem yapmam\u0131z\u0131 sa\u011flar. print(*\"Python\") P y t h o n","title":"y\u0131ld\u0131z(*)"},{"location":"python/python_donguler/","text":"D\u00f6ng\u00fcler(Loops) Bir durumun/s\u00fcrecin tekrar tekrar kullan\u0131lmas\u0131n\u0131 sa\u011flayan yap\u0131ya d\u00f6ng\u00fc(loops) denir. Python'da iki adet d\u00f6ng\u00fc bulunmaktad\u0131r; 1. While 2. For While D\u00f6ng\u00fcs\u00fc While d\u00f6ng\u00fcs\u00fcn\u00fc \u00f6rnekler \u00fczerinden \u00f6\u011frenelim. a = 1 while a < 5: a += 1 print(\"Say\u0131 5'ten k\u00fc\u00e7\u00fckt\u00fcr.\") Say\u0131 5'ten k\u00fc\u00e7\u00fckt\u00fcr. Say\u0131 5'ten k\u00fc\u00e7\u00fckt\u00fcr. Say\u0131 5'ten k\u00fc\u00e7\u00fckt\u00fcr. Say\u0131 5'ten k\u00fc\u00e7\u00fckt\u00fcr. Yukar\u0131da bulunan \u00f6rnekte a\u015fa\u011f\u0131daki ad\u0131mlar ger\u00e7ekle\u015fmi\u015ftir: Ad\u0131m 1: a de\u011fi\u015fkenine 1 de\u011ferini ata. Ad\u0131m 2: a say\u0131s\u0131 5 de\u011ferinden k\u00fc\u00e7\u00fck ise d\u00f6ng\u00fcn\u00fcn i\u00e7ine gir. E\u011fer a say\u0131s\u0131 5 de\u011ferinden b\u00fcy\u00fck ise Ad\u0131m 6 'ya git. Ad\u0131m 3: a de\u011ferini 1 art\u0131r. Ad\u0131m 4: ekrana \"Say\u0131 5'ten k\u00fc\u00e7\u00fckt\u00fcr.\" yazd\u0131r. Ad\u0131m 5: Ad\u0131m 2 'ye git. Ad\u0131m 6: \u00c7\u0131k\u0131\u015f. While d\u00f6ng\u00fcs\u00fcn\u00fcn daha iyi anla\u015f\u0131lmas\u0131 i\u00e7in \u00e7ift say\u0131lar\u0131 ekrana yazd\u0131ran bir uygulama yapal\u0131m. sayi = 0 while sayi < 19: sayi += 1 if sayi % 2 == 0: print(sayi) 2 4 6 8 10 12 14 16 18 For D\u00f6ng\u00fcs\u00fc while d\u00f6ng\u00fcs\u00fc ile yapamayaca\u011f\u0131n\u0131z veya yaparken \u00e7ok zorlanaca\u011f\u0131n\u0131z \u015feyleri for d\u00f6ng\u00fcs\u00fc yard\u0131m\u0131yla \u00e7ok kolay bir \u015fekilde halledebilirsiniz. harfler = \"abcd\" for harf in harfler: print(harf) a b c d \u00d6rnekte oldu\u011fu gibi for d\u00f6ng\u00fcs\u00fc bir nesnenin i\u00e7inde dola\u015fabilmemizi ve nesnenin sahip oldu\u011fu de\u011ferlere ayr\u0131 ayr\u0131 eri\u015febilmemizi sa\u011flar. Peki ayn\u0131 i\u015flemi while d\u00f6ng\u00fcs\u00fc ile yazal\u0131m ve kar\u015f\u0131la\u015ft\u0131ral\u0131m. a = 0 while a < len(harfler): print(harfler[a]) a += 1 a b c d For d\u00f6ng\u00fcs\u00fc ile yapt\u0131\u011f\u0131m\u0131z i\u015flemin ayn\u0131s\u0131n\u0131 while ile de yapabildik fakat biraz daha uzun s\u00fcrd\u00fc. Bu y\u00fczden for ile yapabilece\u011fimiz bir i\u015flemi while ile yapmamak daha iyi olacakt\u0131r. \u0130lgili Ara\u00e7lar D\u00f6ng\u00fcler kendilerinin yan\u0131na baz\u0131 fonksiyonlar alabilmektedir. Bu fonksiyonlar\u0131 inceleyelim. range Fonksiyonu range fonksiyonunu belirli bir aral\u0131kta bulunan say\u0131lar\u0131 g\u00f6stermek i\u00e7in kullan\u0131yoruz. for i in range(0,5): print(i) 0 1 2 3 4 range(ilk_sayi,son_sayi) fonksiyonu \u015feklinde kullan\u0131l\u0131r. Burada ilk_sayi aral\u0131\u011fa dahil edilirken, son_sayi aral\u0131\u011fa dahil edilmez. E\u011fer biz 1'den 5'e kadar olan say\u0131lar\u0131 ekrana yazd\u0131rmak istiyorsak range fonksiyonu \u015fu \u015fekilde olmal\u0131d\u0131r. for i in range(0,6): print(i) 0 1 2 3 4 5 Yukar\u0131daki \u00f6rneklerde say\u0131lar hep birer birer artt\u0131. Peki art\u0131\u015f miktar\u0131n\u0131 de\u011fi\u015ftirmek istiyorsak nas\u0131l bir yol izlemeliyiz. O zaman range fonksiyonunu \u015fu \u015fekilde range(ilk_sayi,son_sayi,artis_miktari) kullanmal\u0131y\u0131z. Burada art\u0131\u015f miktar\u0131na istedi\u011fimiz say\u0131y\u0131 yazabiliriz. Hemen birka\u00e7 \u00f6rnek ile inceleyelim. for i in range(5,0,-1): print(i) 5 4 3 2 1 Bir ba\u015fka \u00f6rnek; for i in range(0,10,2): print(i) 0 2 4 6 8 ve bir \u00f6rnek daha. for i in range(0,20,5): print(i) 0 5 10 15 range fonksiyonunun, print fonksiyonu ile kullan\u0131mana birka\u00e7 \u00f6rnek verelim; print(*range(10)) 0 1 2 3 4 5 6 7 8 9 ve range fonksiyonu i\u00e7in son \u00f6rne\u011fimiz: print(*range(10), sep=\", \") 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 pass Deyimi pass kelimesi ingilizce'de ge\u00e7mek anlam\u0131na gelir. Bu deyimi d\u00f6ng\u00fclerle birlikte kulland\u0131\u011f\u0131m\u0131z zaman o yap\u0131 g\u00f6z ard\u0131 edilecektir. sayi = int(input(\"Bir say\u0131 giriniz: \")) if sayi < 0: pass else: print(sayi) Bir say\u0131 giriniz: -1 Yukar\u0131daki \u00f6rnekte girmi\u015f oldu\u011fumuz say\u0131n\u0131n de\u011feri -1, if blo\u011funa geldi\u011fi zaman bakt\u0131 say\u0131 0'dan k\u00fc\u00e7\u00fck i\u00e7eri girdi fakat biz pas ge\u00e7 dedi\u011fimiz i\u00e7in herhangi bir i\u015flem yapmad\u0131. break Deyimi break kelimesi ingilizce'de k\u0131rmak anlam\u0131na gelir. Bu deyimi d\u00f6ng\u00fclerle birlikte kulland\u0131\u011f\u0131m\u0131z zaman d\u00f6ng\u00fcy\u00fc k\u0131rar ve d\u0131\u015far\u0131 \u00e7\u0131kar yani i\u015flem devam etmesi gerekse bile biz break yazd\u0131\u011f\u0131m\u0131z i\u00e7in break deyiminin oldu\u011fu yerde i\u015flemleri keser ve d\u0131\u015far\u0131 \u00e7\u0131kar. while True: parola = input(\"L\u00fctfen bir parola belirleyiniz:\") if len(parola) < 5: print(\"Parola 5 karakterden az olmamal\u0131!\") else: print(\"Parolan\u0131z belirlendi!\") break L\u00fctfen bir parola belirleyiniz:123456 Parolan\u0131z belirlendi! E\u011fer yukar\u0131da bulunan \u00f6rnekte break deyimini yazmam\u0131\u015f olsayd\u0131k, parolam\u0131z\u0131 istenildi\u011fi gibi belirledi\u011fimiz halde d\u00f6ng\u00fc devam edecekti. continue Deyimi continue kelimesi ingilizce'de devam et anlam\u0131na gelmektedir. Bu deyimi d\u00f6ng\u00fclerde kulland\u0131\u011f\u0131m\u0131z zaman istenilen \u015fart ger\u00e7ekle\u015fse bile d\u00f6ng\u00fcde i\u015fleme devam edilir. while True: s = input(\"Bir say\u0131 girin: \") if s == \"iptal\": break if len(s) <= 3: continue print(\"En fazla \u00fc\u00e7 haneli bir say\u0131 girebilirsiniz.\") Bir say\u0131 girin: 3 Bir say\u0131 girin: 2 Bir say\u0131 girin: 1 Bir say\u0131 girin: iptal Yukar\u0131daki \u00f6rnekte kullan\u0131c\u0131 3'e e\u015fit veya daha k\u00fc\u00e7\u00fck say\u0131lar girdi\u011fi s\u00fcrece d\u00f6ng\u00fc devam edecek \u00e7\u00fcnk\u00fc continue ifadesi bulunmaktad\u0131r. E\u011fer iptal ibaresini girersek d\u00f6ng\u00fc k\u0131r\u0131lm\u0131\u015f olacak ve d\u00f6ng\u00fcden d\u0131\u015far\u0131 \u00e7\u0131k\u0131lacak. Son G\u00fcncelleme: 16 Aral\u0131k 2019 - Pazartesi","title":"D\u00f6ng\u00fcler"},{"location":"python/python_donguler/#dongulerloops","text":"Bir durumun/s\u00fcrecin tekrar tekrar kullan\u0131lmas\u0131n\u0131 sa\u011flayan yap\u0131ya d\u00f6ng\u00fc(loops) denir. Python'da iki adet d\u00f6ng\u00fc bulunmaktad\u0131r; 1. While 2. For","title":"D\u00f6ng\u00fcler(Loops)"},{"location":"python/python_donguler/#while-dongusu","text":"While d\u00f6ng\u00fcs\u00fcn\u00fc \u00f6rnekler \u00fczerinden \u00f6\u011frenelim. a = 1 while a < 5: a += 1 print(\"Say\u0131 5'ten k\u00fc\u00e7\u00fckt\u00fcr.\") Say\u0131 5'ten k\u00fc\u00e7\u00fckt\u00fcr. Say\u0131 5'ten k\u00fc\u00e7\u00fckt\u00fcr. Say\u0131 5'ten k\u00fc\u00e7\u00fckt\u00fcr. Say\u0131 5'ten k\u00fc\u00e7\u00fckt\u00fcr. Yukar\u0131da bulunan \u00f6rnekte a\u015fa\u011f\u0131daki ad\u0131mlar ger\u00e7ekle\u015fmi\u015ftir: Ad\u0131m 1: a de\u011fi\u015fkenine 1 de\u011ferini ata. Ad\u0131m 2: a say\u0131s\u0131 5 de\u011ferinden k\u00fc\u00e7\u00fck ise d\u00f6ng\u00fcn\u00fcn i\u00e7ine gir. E\u011fer a say\u0131s\u0131 5 de\u011ferinden b\u00fcy\u00fck ise Ad\u0131m 6 'ya git. Ad\u0131m 3: a de\u011ferini 1 art\u0131r. Ad\u0131m 4: ekrana \"Say\u0131 5'ten k\u00fc\u00e7\u00fckt\u00fcr.\" yazd\u0131r. Ad\u0131m 5: Ad\u0131m 2 'ye git. Ad\u0131m 6: \u00c7\u0131k\u0131\u015f. While d\u00f6ng\u00fcs\u00fcn\u00fcn daha iyi anla\u015f\u0131lmas\u0131 i\u00e7in \u00e7ift say\u0131lar\u0131 ekrana yazd\u0131ran bir uygulama yapal\u0131m. sayi = 0 while sayi < 19: sayi += 1 if sayi % 2 == 0: print(sayi) 2 4 6 8 10 12 14 16 18","title":"While D\u00f6ng\u00fcs\u00fc"},{"location":"python/python_donguler/#for-dongusu","text":"while d\u00f6ng\u00fcs\u00fc ile yapamayaca\u011f\u0131n\u0131z veya yaparken \u00e7ok zorlanaca\u011f\u0131n\u0131z \u015feyleri for d\u00f6ng\u00fcs\u00fc yard\u0131m\u0131yla \u00e7ok kolay bir \u015fekilde halledebilirsiniz. harfler = \"abcd\" for harf in harfler: print(harf) a b c d \u00d6rnekte oldu\u011fu gibi for d\u00f6ng\u00fcs\u00fc bir nesnenin i\u00e7inde dola\u015fabilmemizi ve nesnenin sahip oldu\u011fu de\u011ferlere ayr\u0131 ayr\u0131 eri\u015febilmemizi sa\u011flar. Peki ayn\u0131 i\u015flemi while d\u00f6ng\u00fcs\u00fc ile yazal\u0131m ve kar\u015f\u0131la\u015ft\u0131ral\u0131m. a = 0 while a < len(harfler): print(harfler[a]) a += 1 a b c d For d\u00f6ng\u00fcs\u00fc ile yapt\u0131\u011f\u0131m\u0131z i\u015flemin ayn\u0131s\u0131n\u0131 while ile de yapabildik fakat biraz daha uzun s\u00fcrd\u00fc. Bu y\u00fczden for ile yapabilece\u011fimiz bir i\u015flemi while ile yapmamak daha iyi olacakt\u0131r.","title":"For D\u00f6ng\u00fcs\u00fc"},{"location":"python/python_donguler/#ilgili-araclar","text":"D\u00f6ng\u00fcler kendilerinin yan\u0131na baz\u0131 fonksiyonlar alabilmektedir. Bu fonksiyonlar\u0131 inceleyelim.","title":"\u0130lgili Ara\u00e7lar"},{"location":"python/python_donguler/#range-fonksiyonu","text":"range fonksiyonunu belirli bir aral\u0131kta bulunan say\u0131lar\u0131 g\u00f6stermek i\u00e7in kullan\u0131yoruz. for i in range(0,5): print(i) 0 1 2 3 4 range(ilk_sayi,son_sayi) fonksiyonu \u015feklinde kullan\u0131l\u0131r. Burada ilk_sayi aral\u0131\u011fa dahil edilirken, son_sayi aral\u0131\u011fa dahil edilmez. E\u011fer biz 1'den 5'e kadar olan say\u0131lar\u0131 ekrana yazd\u0131rmak istiyorsak range fonksiyonu \u015fu \u015fekilde olmal\u0131d\u0131r. for i in range(0,6): print(i) 0 1 2 3 4 5 Yukar\u0131daki \u00f6rneklerde say\u0131lar hep birer birer artt\u0131. Peki art\u0131\u015f miktar\u0131n\u0131 de\u011fi\u015ftirmek istiyorsak nas\u0131l bir yol izlemeliyiz. O zaman range fonksiyonunu \u015fu \u015fekilde range(ilk_sayi,son_sayi,artis_miktari) kullanmal\u0131y\u0131z. Burada art\u0131\u015f miktar\u0131na istedi\u011fimiz say\u0131y\u0131 yazabiliriz. Hemen birka\u00e7 \u00f6rnek ile inceleyelim. for i in range(5,0,-1): print(i) 5 4 3 2 1 Bir ba\u015fka \u00f6rnek; for i in range(0,10,2): print(i) 0 2 4 6 8 ve bir \u00f6rnek daha. for i in range(0,20,5): print(i) 0 5 10 15 range fonksiyonunun, print fonksiyonu ile kullan\u0131mana birka\u00e7 \u00f6rnek verelim; print(*range(10)) 0 1 2 3 4 5 6 7 8 9 ve range fonksiyonu i\u00e7in son \u00f6rne\u011fimiz: print(*range(10), sep=\", \") 0, 1, 2, 3, 4, 5, 6, 7, 8, 9","title":"range Fonksiyonu"},{"location":"python/python_donguler/#pass-deyimi","text":"pass kelimesi ingilizce'de ge\u00e7mek anlam\u0131na gelir. Bu deyimi d\u00f6ng\u00fclerle birlikte kulland\u0131\u011f\u0131m\u0131z zaman o yap\u0131 g\u00f6z ard\u0131 edilecektir. sayi = int(input(\"Bir say\u0131 giriniz: \")) if sayi < 0: pass else: print(sayi) Bir say\u0131 giriniz: -1 Yukar\u0131daki \u00f6rnekte girmi\u015f oldu\u011fumuz say\u0131n\u0131n de\u011feri -1, if blo\u011funa geldi\u011fi zaman bakt\u0131 say\u0131 0'dan k\u00fc\u00e7\u00fck i\u00e7eri girdi fakat biz pas ge\u00e7 dedi\u011fimiz i\u00e7in herhangi bir i\u015flem yapmad\u0131.","title":"pass Deyimi"},{"location":"python/python_donguler/#break-deyimi","text":"break kelimesi ingilizce'de k\u0131rmak anlam\u0131na gelir. Bu deyimi d\u00f6ng\u00fclerle birlikte kulland\u0131\u011f\u0131m\u0131z zaman d\u00f6ng\u00fcy\u00fc k\u0131rar ve d\u0131\u015far\u0131 \u00e7\u0131kar yani i\u015flem devam etmesi gerekse bile biz break yazd\u0131\u011f\u0131m\u0131z i\u00e7in break deyiminin oldu\u011fu yerde i\u015flemleri keser ve d\u0131\u015far\u0131 \u00e7\u0131kar. while True: parola = input(\"L\u00fctfen bir parola belirleyiniz:\") if len(parola) < 5: print(\"Parola 5 karakterden az olmamal\u0131!\") else: print(\"Parolan\u0131z belirlendi!\") break L\u00fctfen bir parola belirleyiniz:123456 Parolan\u0131z belirlendi! E\u011fer yukar\u0131da bulunan \u00f6rnekte break deyimini yazmam\u0131\u015f olsayd\u0131k, parolam\u0131z\u0131 istenildi\u011fi gibi belirledi\u011fimiz halde d\u00f6ng\u00fc devam edecekti.","title":"break Deyimi"},{"location":"python/python_donguler/#continue-deyimi","text":"continue kelimesi ingilizce'de devam et anlam\u0131na gelmektedir. Bu deyimi d\u00f6ng\u00fclerde kulland\u0131\u011f\u0131m\u0131z zaman istenilen \u015fart ger\u00e7ekle\u015fse bile d\u00f6ng\u00fcde i\u015fleme devam edilir. while True: s = input(\"Bir say\u0131 girin: \") if s == \"iptal\": break if len(s) <= 3: continue print(\"En fazla \u00fc\u00e7 haneli bir say\u0131 girebilirsiniz.\") Bir say\u0131 girin: 3 Bir say\u0131 girin: 2 Bir say\u0131 girin: 1 Bir say\u0131 girin: iptal Yukar\u0131daki \u00f6rnekte kullan\u0131c\u0131 3'e e\u015fit veya daha k\u00fc\u00e7\u00fck say\u0131lar girdi\u011fi s\u00fcrece d\u00f6ng\u00fc devam edecek \u00e7\u00fcnk\u00fc continue ifadesi bulunmaktad\u0131r. E\u011fer iptal ibaresini girersek d\u00f6ng\u00fc k\u0131r\u0131lm\u0131\u015f olacak ve d\u00f6ng\u00fcden d\u0131\u015far\u0131 \u00e7\u0131k\u0131lacak. Son G\u00fcncelleme: 16 Aral\u0131k 2019 - Pazartesi","title":"continue Deyimi"},{"location":"python/python_hata_yakalama/","text":"Hata Yakalama Geli\u015ftirdi\u011fimiz programlarda kullan\u0131c\u0131 bazen istenilenin d\u0131\u015f\u0131nda bilgiler girebilir. B\u00f6yle durumlarda hatalar ile kar\u015f\u0131la\u015facakt\u0131r. Bu hatalarda kullan\u0131c\u0131n\u0131n anlayamaca\u011f\u0131n\u0131 \u015fekilde karma\u015f\u0131k \u00e7\u0131kt\u0131lar verebilir. B\u00f6yle olunca bu hatalar ya\u015fanabilece\u011fin i\u00e7in hatalar\u0131 kullan\u0131c\u0131n\u0131n anlayabilece\u011fi ve nerede hata yapt\u0131\u011f\u0131n\u0131 ona a\u00e7\u0131k bir \u015fekilde belirten bir yap\u0131 olu\u015fturmam\u0131z gerekmektedir. Bu k\u0131s\u0131mda bu durumu ayr\u0131nt\u0131l\u0131 bir \u015fekilde inleceyece\u011fiz. Hata T\u00fcrleri Hatalar\u0131 \u00fc\u00e7 farkl\u0131 ba\u015fl\u0131k alt\u0131nda inceleye\u011fiz: Programc\u0131 Hatalar\u0131(Error) Program Kusular\u0131(Bug) \u0130stisnalar(Exception) Programc\u0131 Hatalar\u0131(Error) Ba\u015fl\u0131ktanda anla\u015f\u0131laca\u011f\u0131 \u00fczere programc\u0131n\u0131n yapm\u0131\u015f oldu\u011fu hatalard\u0131r. Bunlar yaz\u0131m hatalar\u0131 ve tan\u0131mlama hatalar\u0131 gibi hatalardan olu\u015furlar. Bir \u00f6rnek ile inceleyelim: print \"Merhaba D\u00fcnya\" File \"<ipython-input-1-267fc15c875c>\", line 1 print \"Merhaba D\u00fcnya\" ^ SyntaxError: Missing parentheses in call to 'print'. Did you mean print(\"Merhaba D\u00fcnya\")? Yukar\u0131daki \u00f6rnekte g\u00f6r\u00fcld\u00fc\u011f\u00fc \u00fczere print fonksiyonu i\u00e7in parantezleri yazmad\u0131\u011f\u0131m\u0131z i\u00e7in hata olu\u015ftu. Bu t\u00fcr hatalar programc\u0131 hatalar\u0131d\u0131r. Program Kusurlar\u0131(Bug) Program kusurlar\u0131 \u00e7o\u011fu zaman hata vermeden \u00e7al\u0131\u015f\u0131r fakat \u00fcretti\u011fi sonu\u00e7lar istedi\u011fimiz gibi de\u011fildir. \u00d6rnek vermek gerekirse form\u00fcl gerektiren bir programda e\u011fer form\u00fcl\u00fc yanl\u0131\u015f yazm\u0131\u015fsan\u0131z program \u00e7al\u0131\u015f\u0131r yaln\u0131z sonu\u00e7 hatal\u0131 olur. Bu durumu bir \u00f6rnek ile inceleyelim. sayi1 = input(\"Toplama i\u015flemi i\u00e7in ilk say\u0131y\u0131 girin: \") sayi2 = input(\"Toplama i\u015flemi i\u00e7in ikinci say\u0131y\u0131 girin: \") print(sayi1, \"+\", sayi2, \"=\", sayi1 + sayi2) Toplama i\u015flemi i\u00e7in ilk say\u0131y\u0131 girin: 1 Toplama i\u015flemi i\u00e7in ikinci say\u0131y\u0131 girin: 2 1 + 2 = 12 Yukar\u0131daki \u00f6rnekte g\u00f6r\u00fcld\u00fc\u011f\u00fc \u00fczere program iki say\u0131y\u0131 toplamak yerine onlar\u0131 yan yana yazd\u0131rmaktad\u0131r. Biz kullan\u0131c\u0131dan say\u0131lar\u0131 al\u0131rken int t\u00fcr\u00fcne d\u00f6n\u00fc\u015f\u00fcmlerini sa\u011flamad\u0131\u011f\u0131m\u0131z i\u00e7in hata olu\u015ftu. \u0130stisnalar(Exception) \u0130stisnalar, bir program\u0131n \u00e7al\u0131\u015fmas\u0131 s\u0131ras\u0131nda ortaya \u00e7\u0131kan, normalden farkl\u0131, istisnai durumlard\u0131r. Matematiksel bir i\u015flem yap\u0131lmas\u0131 gereken bir yerde kullan\u0131c\u0131 e\u011fer harfsel bir veri girerse hataya sebep olur. Bu durumu inceleyelim: sayi1 = int(input(\"Bir say\u0131 giriniz: \")) sayi2 = int(input(\"Bir say\u0131 giriniz: \")) print(\"Sonu\u00e7: \",sayi1 / sayi2) Bir say\u0131 giriniz: 1 Bir say\u0131 giriniz: a --------------------------------------------------------------------------- ValueError Traceback (most recent call last) <ipython-input-3-5310f8e3b775> in <module> 1 sayi1 = int(input(\"Bir say\u0131 giriniz: \")) ----> 2 sayi2 = int(input(\"Bir say\u0131 giriniz: \")) 3 4 print(\"Sonu\u00e7: \",sayi1 / sayi2) ValueError: invalid literal for int() with base 10: 'a' \u00d6rnektede g\u00f6r\u00fcld\u00fc\u011f\u00fc gibi kullan\u0131c\u0131 say\u0131sal bir veri girmesi gerekirken harfsel bir veri girdi\u011fi i\u00e7in programda hata olu\u015ftu. Bir ba\u015fka \u00f6rnekte matematikte bulunan istisnai durumlar. Say\u0131lar\u0131n 0'a b\u00f6l\u00fcnme durumu bir hatad\u0131r. Bu durumu inceleyelim. sayi1 = int(input(\"Bir say\u0131 giriniz: \")) sayi2 = int(input(\"Bir say\u0131 giriniz: \")) print(\"Sonu\u00e7: \",sayi1 / sayi2) Bir say\u0131 giriniz: 1 Bir say\u0131 giriniz: 0 --------------------------------------------------------------------------- ZeroDivisionError Traceback (most recent call last) <ipython-input-4-5310f8e3b775> in <module> 2 sayi2 = int(input(\"Bir say\u0131 giriniz: \")) 3 ----> 4 print(\"Sonu\u00e7: \",sayi1 / sayi2) ZeroDivisionError: division by zero Program hata olarak division by zero yani s\u0131f\u0131ra b\u00f6l\u00fcnme hatas\u0131 verdi. Bu gibi durumlar\u0131 yakalay\u0131p program\u0131m\u0131z\u0131 bu t\u00fcr hatalardan temizlememiz gerekmektedir. \u015eimdide bunlar\u0131 nas\u0131l yapabilece\u011fimizi g\u00f6relim. try..... except..... Hata T\u00fcrleri k\u0131sm\u0131nda hatalar\u0131n neler oldu\u011fundan bahsettik. Bu b\u00f6l\u00fcmde bu hatalar\u0131n nas\u0131l yakalanaca\u011f\u0131n\u0131 inceleyece\u011fiz. Yukar\u0131da hata ile kar\u015f\u0131la\u015ft\u0131\u011f\u0131m\u0131z programlar\u0131 tek tek d\u00fczeltelim. try: sayi1 = int(input(\"Bir say\u0131 giriniz: \")) sayi2 = int(input(\"Bir say\u0131 giriniz: \")) print(\"Sonu\u00e7: \",sayi1 / sayi2) except ValueError: print(\"L\u00fctfen sadece say\u0131 giriniz!\") Bir say\u0131 giriniz: 1 Bir say\u0131 giriniz: a L\u00fctfen sadece say\u0131 giriniz! Yukar\u0131da \u00e7\u00f6zd\u00fc\u011f\u00fcm kod par\u00e7as\u0131n\u0131 inceleyelim. try: Bu blo\u011fa hata olmas\u0131 beklenen kodlar\u0131 yazmam\u0131z gerekmektedir. except Hata_adi: Bu blo\u011fa kullan\u0131c\u0131ya g\u00f6sterilmesini istedi\u011fimiz mesaj\u0131 yaz\u0131yoruz. \u015eimdide s\u0131f\u0131ra b\u00f6l\u00fcnme hatas\u0131 durumunu \u00e7\u00f6zelim. try: sayi1 = int(input(\"Bir say\u0131 giriniz: \")) sayi2 = int(input(\"Bir say\u0131 giriniz: \")) print(\"Sonu\u00e7: \",sayi1 / sayi2) except ZeroDivisionError: print(\"Herhangi bir say\u0131 s\u0131f\u0131ra b\u00f6l\u00fcnemez.\") Bir say\u0131 giriniz: 1 Bir say\u0131 giriniz: 0 Herhangi bir say\u0131 s\u0131f\u0131ra b\u00f6l\u00fcnemez. Peki hem s\u0131f\u0131ra b\u00f6l\u00fcnme hatas\u0131 ya\u015fanabilecek hem de de\u011fer hatas\u0131 olabilmesi durumunda ne yapmam\u0131z gerekiyor. Bu durumu iki farkl\u0131 yol ile \u00e7\u00f6zebiliriz: 1. Yol try: sayi1 = int(input(\"Bir say\u0131 giriniz: \")) sayi2 = int(input(\"Bir say\u0131 giriniz: \")) print(\"Sonu\u00e7: \",sayi1 / sayi2) except ZeroDivisionError: print(\"Herhangi bir say\u0131 s\u0131f\u0131ra b\u00f6l\u00fcnemez.\") except ValueError: print(\"L\u00fctfen sadece say\u0131 giriniz.\") Bir say\u0131 giriniz: 1 Bir say\u0131 giriniz: 0 Herhangi bir say\u0131 s\u0131f\u0131ra b\u00f6l\u00fcnemez. 2. Yol try: sayi1 = int(input(\"Bir say\u0131 giriniz: \")) sayi2 = int(input(\"Bir say\u0131 giriniz: \")) print(\"Sonu\u00e7: \",sayi1 / sayi2) except (ZeroDivisionError, ValueError): print(\"Bir hata ile kar\u015f\u0131la\u015f\u0131ld\u0131.\") Bir say\u0131 giriniz: a Bir hata ile kar\u015f\u0131la\u015f\u0131ld\u0131. try..... except..... as..... Bu yap\u0131da hatan\u0131n ad\u0131n\u0131 de\u011filde hatan\u0131n tam olarak ne oldu\u011funu hataya dair a\u00e7\u0131klamay\u0131 \u00f6\u011frenebiliyoruz. \u00d6rnek \u00fczerine inceleyelim: try: sayi1 = int(input(\"Bir say\u0131 giriniz: \")) sayi2 = int(input(\"Bir say\u0131 giriniz: \")) print(\"Sonu\u00e7: \",sayi1 / sayi2) except ValueError as hata: print(hata) Bir say\u0131 giriniz: 1 Bir say\u0131 giriniz: a invalid literal for int() with base 10: 'a' G\u00f6rd\u00fc\u011f\u00fcn\u00fcz gibi hatan\u0131n ad\u0131n\u0131 de\u011filde direk hatan\u0131n tam olarak ne oldu\u011funu a\u00e7\u0131klamas\u0131n\u0131 ekranda g\u00f6sterdik. try..... except..... else..... Yazd\u0131\u011f\u0131m\u0131 programlarda bir\u00e7ok farkl\u0131 hata ile kar\u015f\u0131la\u015fabiliriz. Hatalar\u0131 farkl\u0131 bir \u015fekilde kar\u015f\u0131lay\u0131p farkl\u0131 kullan\u0131c\u0131 mesajlar\u0131 vermek isteyebiliriz. Bu durum genelde pek tavsiye edilmez \u00e7\u00fcnk\u00fc kodumuz \u00e7ok par\u00e7al\u0131 olaca\u011f\u0131ndan dolay\u0131. Fakat biz yinede bu durumuda inceleyelim: try: b\u00f6l\u00fcnen = int(input(\"b\u00f6l\u00fcnecek say\u0131: \")) b\u00f6len = int(input(\"b\u00f6len say\u0131: \")) except ValueError: print(\"L\u00fctfen sadece say\u0131 girin!\") else: try: print(b\u00f6l\u00fcnen/b\u00f6len) except ZeroDivisionError: print(\"Bir say\u0131y\u0131 0'a b\u00f6lemezsiniz!\") b\u00f6l\u00fcnecek say\u0131: 1 b\u00f6len say\u0131: 0 Bir say\u0131y\u0131 0'a b\u00f6lemezsiniz! Yukar\u0131daki kod blo\u011fundanda anla\u015f\u0131ld\u0131\u011f\u0131 \u00fczere s\u0131f\u0131ra b\u00f6l\u00fcnme durumunu farkl\u0131 bir alanda yakalay\u0131p kontrol ediyor ve buna uygun bir mesaj veriyoruz kullan\u0131c\u0131ya. Bu durumu kullan\u0131c\u0131 a\u00e7\u0131s\u0131ndan d\u00fc\u015f\u00fcnd\u00fc\u011f\u00fcm\u00fcz zaman g\u00fczel bir \u015fey fakat hatalar birka\u00e7 tane olmad\u0131\u011f\u0131 i\u00e7in b\u00f6yle bir \u015fey yapmam\u0131z kodumuzun \u00e7ok par\u00e7al\u0131 olmas\u0131na ve \u00e7al\u0131\u015ft\u0131\u011f\u0131m\u0131z proje b\u00fcy\u00fcd\u00fck\u00e7e kontrol zorla\u015faca\u011f\u0131 i\u00e7in bu durumu pek tavsiye edilmez. try..... except..... finally..... Bu kod yap\u0131s\u0131nda hata olsun veya olmas\u0131n her daim finally blo\u011fu \u00e7al\u0131\u015ft\u0131r\u0131l\u0131r. Bir \u00f6rnek \u00fczerinden inceleyelim: try: sayi1 = int(input(\"Bir say\u0131 giriniz: \")) sayi2 = int(input(\"Bir say\u0131 giriniz: \")) print(\"Sonu\u00e7: \",sayi1 / sayi2) except ZeroDivisionError: print(\"Herhangi bir say\u0131 s\u0131f\u0131ra b\u00f6l\u00fcnemez.\") finally: print(\"Finally her zaman \u00e7al\u0131\u015f\u0131r.\") Bir say\u0131 giriniz: 1 Bir say\u0131 giriniz: 0 Herhangi bir say\u0131 s\u0131f\u0131ra b\u00f6l\u00fcnemez. Finally her zaman \u00e7al\u0131\u015f\u0131r. raise Bazen yazd\u0131\u011f\u0131m\u0131z programlarda hata olu\u015fmayacak olsa bile biz bu t\u00fcr durumlarda bir hata mesaj\u0131 g\u00f6stermek isteyebiliriz. Bir \u00f6rnek ile inceleyelim: b\u00f6l\u00fcnen = int(input(\"b\u00f6l\u00fcnecek say\u0131: \")) if b\u00f6l\u00fcnen == 5: raise Exception(\"5 say\u0131s\u0131n\u0131 kullanamazs\u0131n\u0131z.\") b\u00f6len = int(input(\"b\u00f6len say\u0131: \")) print(b\u00f6l\u00fcnen/b\u00f6len) b\u00f6l\u00fcnecek say\u0131: 5 --------------------------------------------------------------------------- Exception Traceback (most recent call last) <ipython-input-14-d3500b3eb850> in <module> 1 b\u00f6l\u00fcnen = int(input(\"b\u00f6l\u00fcnecek say\u0131: \")) 2 if b\u00f6l\u00fcnen == 5: ----> 3 raise Exception(\"5 say\u0131s\u0131n\u0131 kullanamazs\u0131n\u0131z.\") 4 5 b\u00f6len = int(input(\"b\u00f6len say\u0131: \")) Exception: 5 say\u0131s\u0131n\u0131 kullanamazs\u0131n\u0131z. Burada raise kelimesinden sonra bulunan Exception anahtar kelimesinin yerine istedi\u011fimizi yazamay\u0131z. Onun yerine sadece Python i\u00e7inde bulunan hata belirten anahtar kelimelerini kullanabiliriz. Bu kelimelere \u00f6rnek vermek gerekirse NameError, TypeError, ZeroDivisionError, vb... B\u00fct\u00fcn Hatalar\u0131 Yakalamak Geli\u015ftirdi\u011fimiz programda bekledi\u011fimiz hatalar\u0131n d\u0131\u015f\u0131nda beklemedi\u011fimiz hatalar ile de kar\u015f\u0131la\u015fabiliriz. Bu durumu \u00f6nlemek i\u00e7in bekledi\u011fimiz hatalar\u0131n d\u0131\u015f\u0131ndan bulunan b\u00fct\u00fcn hatalar\u0131da yakalamam\u0131z gerekmektedir. Bir \u00f6rnek ile inceleyelim: try: sayi1 = int(input(\"Bir say\u0131 giriniz: \")) sayi2 = int(input(\"Bir say\u0131 giriniz: \")) print(\"Sonu\u00e7: \",sayi1 / sayi2) except ZeroDivisionError: print(\"Herhangi bir say\u0131 s\u0131f\u0131ra b\u00f6l\u00fcnemez.\") except ValueError: print(\"L\u00fctfen sadece say\u0131 giriniz.\") except: print(\"Bir hata ile kar\u015f\u0131la\u015f\u0131ld\u0131.\") Bir say\u0131 giriniz: 1 Bir say\u0131 giriniz: 2 Sonu\u00e7: 0.5 Di\u011fer Hatalar Python i\u00e7erisinde bulunan di\u011fer hatalar\u0131n neler oldu\u011funu \u00f6\u011frenmek isterseniz e\u011fer buradan \u00f6\u011frenebilirsiniz. Son G\u00fcncelleme: 17 Aral\u0131k 2019","title":"Hata Yakalama"},{"location":"python/python_hata_yakalama/#hata-yakalama","text":"Geli\u015ftirdi\u011fimiz programlarda kullan\u0131c\u0131 bazen istenilenin d\u0131\u015f\u0131nda bilgiler girebilir. B\u00f6yle durumlarda hatalar ile kar\u015f\u0131la\u015facakt\u0131r. Bu hatalarda kullan\u0131c\u0131n\u0131n anlayamaca\u011f\u0131n\u0131 \u015fekilde karma\u015f\u0131k \u00e7\u0131kt\u0131lar verebilir. B\u00f6yle olunca bu hatalar ya\u015fanabilece\u011fin i\u00e7in hatalar\u0131 kullan\u0131c\u0131n\u0131n anlayabilece\u011fi ve nerede hata yapt\u0131\u011f\u0131n\u0131 ona a\u00e7\u0131k bir \u015fekilde belirten bir yap\u0131 olu\u015fturmam\u0131z gerekmektedir. Bu k\u0131s\u0131mda bu durumu ayr\u0131nt\u0131l\u0131 bir \u015fekilde inleceyece\u011fiz.","title":"Hata Yakalama"},{"location":"python/python_hata_yakalama/#hata-turleri","text":"Hatalar\u0131 \u00fc\u00e7 farkl\u0131 ba\u015fl\u0131k alt\u0131nda inceleye\u011fiz: Programc\u0131 Hatalar\u0131(Error) Program Kusular\u0131(Bug) \u0130stisnalar(Exception)","title":"Hata T\u00fcrleri"},{"location":"python/python_hata_yakalama/#programc-hatalarerror","text":"Ba\u015fl\u0131ktanda anla\u015f\u0131laca\u011f\u0131 \u00fczere programc\u0131n\u0131n yapm\u0131\u015f oldu\u011fu hatalard\u0131r. Bunlar yaz\u0131m hatalar\u0131 ve tan\u0131mlama hatalar\u0131 gibi hatalardan olu\u015furlar. Bir \u00f6rnek ile inceleyelim: print \"Merhaba D\u00fcnya\" File \"<ipython-input-1-267fc15c875c>\", line 1 print \"Merhaba D\u00fcnya\" ^ SyntaxError: Missing parentheses in call to 'print'. Did you mean print(\"Merhaba D\u00fcnya\")? Yukar\u0131daki \u00f6rnekte g\u00f6r\u00fcld\u00fc\u011f\u00fc \u00fczere print fonksiyonu i\u00e7in parantezleri yazmad\u0131\u011f\u0131m\u0131z i\u00e7in hata olu\u015ftu. Bu t\u00fcr hatalar programc\u0131 hatalar\u0131d\u0131r.","title":"Programc\u0131 Hatalar\u0131(Error)"},{"location":"python/python_hata_yakalama/#program-kusurlarbug","text":"Program kusurlar\u0131 \u00e7o\u011fu zaman hata vermeden \u00e7al\u0131\u015f\u0131r fakat \u00fcretti\u011fi sonu\u00e7lar istedi\u011fimiz gibi de\u011fildir. \u00d6rnek vermek gerekirse form\u00fcl gerektiren bir programda e\u011fer form\u00fcl\u00fc yanl\u0131\u015f yazm\u0131\u015fsan\u0131z program \u00e7al\u0131\u015f\u0131r yaln\u0131z sonu\u00e7 hatal\u0131 olur. Bu durumu bir \u00f6rnek ile inceleyelim. sayi1 = input(\"Toplama i\u015flemi i\u00e7in ilk say\u0131y\u0131 girin: \") sayi2 = input(\"Toplama i\u015flemi i\u00e7in ikinci say\u0131y\u0131 girin: \") print(sayi1, \"+\", sayi2, \"=\", sayi1 + sayi2) Toplama i\u015flemi i\u00e7in ilk say\u0131y\u0131 girin: 1 Toplama i\u015flemi i\u00e7in ikinci say\u0131y\u0131 girin: 2 1 + 2 = 12 Yukar\u0131daki \u00f6rnekte g\u00f6r\u00fcld\u00fc\u011f\u00fc \u00fczere program iki say\u0131y\u0131 toplamak yerine onlar\u0131 yan yana yazd\u0131rmaktad\u0131r. Biz kullan\u0131c\u0131dan say\u0131lar\u0131 al\u0131rken int t\u00fcr\u00fcne d\u00f6n\u00fc\u015f\u00fcmlerini sa\u011flamad\u0131\u011f\u0131m\u0131z i\u00e7in hata olu\u015ftu.","title":"Program Kusurlar\u0131(Bug)"},{"location":"python/python_hata_yakalama/#istisnalarexception","text":"\u0130stisnalar, bir program\u0131n \u00e7al\u0131\u015fmas\u0131 s\u0131ras\u0131nda ortaya \u00e7\u0131kan, normalden farkl\u0131, istisnai durumlard\u0131r. Matematiksel bir i\u015flem yap\u0131lmas\u0131 gereken bir yerde kullan\u0131c\u0131 e\u011fer harfsel bir veri girerse hataya sebep olur. Bu durumu inceleyelim: sayi1 = int(input(\"Bir say\u0131 giriniz: \")) sayi2 = int(input(\"Bir say\u0131 giriniz: \")) print(\"Sonu\u00e7: \",sayi1 / sayi2) Bir say\u0131 giriniz: 1 Bir say\u0131 giriniz: a --------------------------------------------------------------------------- ValueError Traceback (most recent call last) <ipython-input-3-5310f8e3b775> in <module> 1 sayi1 = int(input(\"Bir say\u0131 giriniz: \")) ----> 2 sayi2 = int(input(\"Bir say\u0131 giriniz: \")) 3 4 print(\"Sonu\u00e7: \",sayi1 / sayi2) ValueError: invalid literal for int() with base 10: 'a' \u00d6rnektede g\u00f6r\u00fcld\u00fc\u011f\u00fc gibi kullan\u0131c\u0131 say\u0131sal bir veri girmesi gerekirken harfsel bir veri girdi\u011fi i\u00e7in programda hata olu\u015ftu. Bir ba\u015fka \u00f6rnekte matematikte bulunan istisnai durumlar. Say\u0131lar\u0131n 0'a b\u00f6l\u00fcnme durumu bir hatad\u0131r. Bu durumu inceleyelim. sayi1 = int(input(\"Bir say\u0131 giriniz: \")) sayi2 = int(input(\"Bir say\u0131 giriniz: \")) print(\"Sonu\u00e7: \",sayi1 / sayi2) Bir say\u0131 giriniz: 1 Bir say\u0131 giriniz: 0 --------------------------------------------------------------------------- ZeroDivisionError Traceback (most recent call last) <ipython-input-4-5310f8e3b775> in <module> 2 sayi2 = int(input(\"Bir say\u0131 giriniz: \")) 3 ----> 4 print(\"Sonu\u00e7: \",sayi1 / sayi2) ZeroDivisionError: division by zero Program hata olarak division by zero yani s\u0131f\u0131ra b\u00f6l\u00fcnme hatas\u0131 verdi. Bu gibi durumlar\u0131 yakalay\u0131p program\u0131m\u0131z\u0131 bu t\u00fcr hatalardan temizlememiz gerekmektedir. \u015eimdide bunlar\u0131 nas\u0131l yapabilece\u011fimizi g\u00f6relim.","title":"\u0130stisnalar(Exception)"},{"location":"python/python_hata_yakalama/#try-except","text":"Hata T\u00fcrleri k\u0131sm\u0131nda hatalar\u0131n neler oldu\u011fundan bahsettik. Bu b\u00f6l\u00fcmde bu hatalar\u0131n nas\u0131l yakalanaca\u011f\u0131n\u0131 inceleyece\u011fiz. Yukar\u0131da hata ile kar\u015f\u0131la\u015ft\u0131\u011f\u0131m\u0131z programlar\u0131 tek tek d\u00fczeltelim. try: sayi1 = int(input(\"Bir say\u0131 giriniz: \")) sayi2 = int(input(\"Bir say\u0131 giriniz: \")) print(\"Sonu\u00e7: \",sayi1 / sayi2) except ValueError: print(\"L\u00fctfen sadece say\u0131 giriniz!\") Bir say\u0131 giriniz: 1 Bir say\u0131 giriniz: a L\u00fctfen sadece say\u0131 giriniz! Yukar\u0131da \u00e7\u00f6zd\u00fc\u011f\u00fcm kod par\u00e7as\u0131n\u0131 inceleyelim. try: Bu blo\u011fa hata olmas\u0131 beklenen kodlar\u0131 yazmam\u0131z gerekmektedir. except Hata_adi: Bu blo\u011fa kullan\u0131c\u0131ya g\u00f6sterilmesini istedi\u011fimiz mesaj\u0131 yaz\u0131yoruz. \u015eimdide s\u0131f\u0131ra b\u00f6l\u00fcnme hatas\u0131 durumunu \u00e7\u00f6zelim. try: sayi1 = int(input(\"Bir say\u0131 giriniz: \")) sayi2 = int(input(\"Bir say\u0131 giriniz: \")) print(\"Sonu\u00e7: \",sayi1 / sayi2) except ZeroDivisionError: print(\"Herhangi bir say\u0131 s\u0131f\u0131ra b\u00f6l\u00fcnemez.\") Bir say\u0131 giriniz: 1 Bir say\u0131 giriniz: 0 Herhangi bir say\u0131 s\u0131f\u0131ra b\u00f6l\u00fcnemez. Peki hem s\u0131f\u0131ra b\u00f6l\u00fcnme hatas\u0131 ya\u015fanabilecek hem de de\u011fer hatas\u0131 olabilmesi durumunda ne yapmam\u0131z gerekiyor. Bu durumu iki farkl\u0131 yol ile \u00e7\u00f6zebiliriz: 1. Yol try: sayi1 = int(input(\"Bir say\u0131 giriniz: \")) sayi2 = int(input(\"Bir say\u0131 giriniz: \")) print(\"Sonu\u00e7: \",sayi1 / sayi2) except ZeroDivisionError: print(\"Herhangi bir say\u0131 s\u0131f\u0131ra b\u00f6l\u00fcnemez.\") except ValueError: print(\"L\u00fctfen sadece say\u0131 giriniz.\") Bir say\u0131 giriniz: 1 Bir say\u0131 giriniz: 0 Herhangi bir say\u0131 s\u0131f\u0131ra b\u00f6l\u00fcnemez. 2. Yol try: sayi1 = int(input(\"Bir say\u0131 giriniz: \")) sayi2 = int(input(\"Bir say\u0131 giriniz: \")) print(\"Sonu\u00e7: \",sayi1 / sayi2) except (ZeroDivisionError, ValueError): print(\"Bir hata ile kar\u015f\u0131la\u015f\u0131ld\u0131.\") Bir say\u0131 giriniz: a Bir hata ile kar\u015f\u0131la\u015f\u0131ld\u0131.","title":"try..... except....."},{"location":"python/python_hata_yakalama/#try-except-as","text":"Bu yap\u0131da hatan\u0131n ad\u0131n\u0131 de\u011filde hatan\u0131n tam olarak ne oldu\u011funu hataya dair a\u00e7\u0131klamay\u0131 \u00f6\u011frenebiliyoruz. \u00d6rnek \u00fczerine inceleyelim: try: sayi1 = int(input(\"Bir say\u0131 giriniz: \")) sayi2 = int(input(\"Bir say\u0131 giriniz: \")) print(\"Sonu\u00e7: \",sayi1 / sayi2) except ValueError as hata: print(hata) Bir say\u0131 giriniz: 1 Bir say\u0131 giriniz: a invalid literal for int() with base 10: 'a' G\u00f6rd\u00fc\u011f\u00fcn\u00fcz gibi hatan\u0131n ad\u0131n\u0131 de\u011filde direk hatan\u0131n tam olarak ne oldu\u011funu a\u00e7\u0131klamas\u0131n\u0131 ekranda g\u00f6sterdik.","title":"try..... except..... as....."},{"location":"python/python_hata_yakalama/#try-except-else","text":"Yazd\u0131\u011f\u0131m\u0131 programlarda bir\u00e7ok farkl\u0131 hata ile kar\u015f\u0131la\u015fabiliriz. Hatalar\u0131 farkl\u0131 bir \u015fekilde kar\u015f\u0131lay\u0131p farkl\u0131 kullan\u0131c\u0131 mesajlar\u0131 vermek isteyebiliriz. Bu durum genelde pek tavsiye edilmez \u00e7\u00fcnk\u00fc kodumuz \u00e7ok par\u00e7al\u0131 olaca\u011f\u0131ndan dolay\u0131. Fakat biz yinede bu durumuda inceleyelim: try: b\u00f6l\u00fcnen = int(input(\"b\u00f6l\u00fcnecek say\u0131: \")) b\u00f6len = int(input(\"b\u00f6len say\u0131: \")) except ValueError: print(\"L\u00fctfen sadece say\u0131 girin!\") else: try: print(b\u00f6l\u00fcnen/b\u00f6len) except ZeroDivisionError: print(\"Bir say\u0131y\u0131 0'a b\u00f6lemezsiniz!\") b\u00f6l\u00fcnecek say\u0131: 1 b\u00f6len say\u0131: 0 Bir say\u0131y\u0131 0'a b\u00f6lemezsiniz! Yukar\u0131daki kod blo\u011fundanda anla\u015f\u0131ld\u0131\u011f\u0131 \u00fczere s\u0131f\u0131ra b\u00f6l\u00fcnme durumunu farkl\u0131 bir alanda yakalay\u0131p kontrol ediyor ve buna uygun bir mesaj veriyoruz kullan\u0131c\u0131ya. Bu durumu kullan\u0131c\u0131 a\u00e7\u0131s\u0131ndan d\u00fc\u015f\u00fcnd\u00fc\u011f\u00fcm\u00fcz zaman g\u00fczel bir \u015fey fakat hatalar birka\u00e7 tane olmad\u0131\u011f\u0131 i\u00e7in b\u00f6yle bir \u015fey yapmam\u0131z kodumuzun \u00e7ok par\u00e7al\u0131 olmas\u0131na ve \u00e7al\u0131\u015ft\u0131\u011f\u0131m\u0131z proje b\u00fcy\u00fcd\u00fck\u00e7e kontrol zorla\u015faca\u011f\u0131 i\u00e7in bu durumu pek tavsiye edilmez.","title":"try..... except..... else....."},{"location":"python/python_hata_yakalama/#try-except-finally","text":"Bu kod yap\u0131s\u0131nda hata olsun veya olmas\u0131n her daim finally blo\u011fu \u00e7al\u0131\u015ft\u0131r\u0131l\u0131r. Bir \u00f6rnek \u00fczerinden inceleyelim: try: sayi1 = int(input(\"Bir say\u0131 giriniz: \")) sayi2 = int(input(\"Bir say\u0131 giriniz: \")) print(\"Sonu\u00e7: \",sayi1 / sayi2) except ZeroDivisionError: print(\"Herhangi bir say\u0131 s\u0131f\u0131ra b\u00f6l\u00fcnemez.\") finally: print(\"Finally her zaman \u00e7al\u0131\u015f\u0131r.\") Bir say\u0131 giriniz: 1 Bir say\u0131 giriniz: 0 Herhangi bir say\u0131 s\u0131f\u0131ra b\u00f6l\u00fcnemez. Finally her zaman \u00e7al\u0131\u015f\u0131r.","title":"try..... except..... finally....."},{"location":"python/python_hata_yakalama/#raise","text":"Bazen yazd\u0131\u011f\u0131m\u0131z programlarda hata olu\u015fmayacak olsa bile biz bu t\u00fcr durumlarda bir hata mesaj\u0131 g\u00f6stermek isteyebiliriz. Bir \u00f6rnek ile inceleyelim: b\u00f6l\u00fcnen = int(input(\"b\u00f6l\u00fcnecek say\u0131: \")) if b\u00f6l\u00fcnen == 5: raise Exception(\"5 say\u0131s\u0131n\u0131 kullanamazs\u0131n\u0131z.\") b\u00f6len = int(input(\"b\u00f6len say\u0131: \")) print(b\u00f6l\u00fcnen/b\u00f6len) b\u00f6l\u00fcnecek say\u0131: 5 --------------------------------------------------------------------------- Exception Traceback (most recent call last) <ipython-input-14-d3500b3eb850> in <module> 1 b\u00f6l\u00fcnen = int(input(\"b\u00f6l\u00fcnecek say\u0131: \")) 2 if b\u00f6l\u00fcnen == 5: ----> 3 raise Exception(\"5 say\u0131s\u0131n\u0131 kullanamazs\u0131n\u0131z.\") 4 5 b\u00f6len = int(input(\"b\u00f6len say\u0131: \")) Exception: 5 say\u0131s\u0131n\u0131 kullanamazs\u0131n\u0131z. Burada raise kelimesinden sonra bulunan Exception anahtar kelimesinin yerine istedi\u011fimizi yazamay\u0131z. Onun yerine sadece Python i\u00e7inde bulunan hata belirten anahtar kelimelerini kullanabiliriz. Bu kelimelere \u00f6rnek vermek gerekirse NameError, TypeError, ZeroDivisionError, vb...","title":"raise"},{"location":"python/python_hata_yakalama/#butun-hatalar-yakalamak","text":"Geli\u015ftirdi\u011fimiz programda bekledi\u011fimiz hatalar\u0131n d\u0131\u015f\u0131nda beklemedi\u011fimiz hatalar ile de kar\u015f\u0131la\u015fabiliriz. Bu durumu \u00f6nlemek i\u00e7in bekledi\u011fimiz hatalar\u0131n d\u0131\u015f\u0131ndan bulunan b\u00fct\u00fcn hatalar\u0131da yakalamam\u0131z gerekmektedir. Bir \u00f6rnek ile inceleyelim: try: sayi1 = int(input(\"Bir say\u0131 giriniz: \")) sayi2 = int(input(\"Bir say\u0131 giriniz: \")) print(\"Sonu\u00e7: \",sayi1 / sayi2) except ZeroDivisionError: print(\"Herhangi bir say\u0131 s\u0131f\u0131ra b\u00f6l\u00fcnemez.\") except ValueError: print(\"L\u00fctfen sadece say\u0131 giriniz.\") except: print(\"Bir hata ile kar\u015f\u0131la\u015f\u0131ld\u0131.\") Bir say\u0131 giriniz: 1 Bir say\u0131 giriniz: 2 Sonu\u00e7: 0.5","title":"B\u00fct\u00fcn Hatalar\u0131 Yakalamak"},{"location":"python/python_hata_yakalama/#diger-hatalar","text":"Python i\u00e7erisinde bulunan di\u011fer hatalar\u0131n neler oldu\u011funu \u00f6\u011frenmek isterseniz e\u011fer buradan \u00f6\u011frenebilirsiniz. Son G\u00fcncelleme: 17 Aral\u0131k 2019","title":"Di\u011fer Hatalar"},{"location":"python/python_karakter_dizileri/","text":"Karakter Dizileri Karakter Dizilerinin \u00d6\u011felerine Eri\u015fmek Karakter dizileri \u00e7ok s\u0131k kullanaca\u011f\u0131m\u0131z yap\u0131lard\u0131r. \u00d6nceki b\u00f6l\u00fcmlerde karakter dizileri \u00fczerinde i\u015flemler yapm\u0131\u015ft\u0131k. Bu b\u00f6l\u00fcmde daha ayr\u0131nt\u0131l\u0131 olarak inceleyece\u011fiz. Karakter dizilerine birka\u00e7 farkl\u0131 yol ile eri\u015febiliriz. \u00d6rne\u011fin: karakter = \"karakter\" print(karakter) karakter Yukar\u0131da g\u00f6r\u00fcld\u00fc\u011f\u00fc gibi karakter isimli de\u011fi\u015fkene print fonksiyonu ile eri\u015fmi\u015f olduk ve i\u00e7erisinde bulunan de\u011ferin tamam\u0131n\u0131 ekrana yazd\u0131rd\u0131k. Bir ba\u015fka yol olarakta kullan\u0131c\u0131dan alabiliriz de\u011feri. karakter = input(\"Bir kelime giriniz: \") print(karakter) Bir kelime giriniz: kelime kelime Ayn\u0131 zamanda for d\u00f6ng\u00fcs\u00fc ile karakter dizisinin b\u00fct\u00fcn de\u011ferlerine tek tek eri\u015febiliriz. \u00d6rne\u011fin: for deger in karakter: print(deger) k e l i m e Yukar\u0131daki i\u015flemi print fonsiyonu ile de yapabiliriz. print(*karakter, sep=\"\\n\") k e l i m e Ayn\u0131 zamanda karakter dizine \u015fu \u015fekildede eri\u015febiliriz. nesne[\u00f6ge_s\u0131ras\u0131], \u00f6rnek ile inceleyelim bu durumu: karakter[0] 'k' G\u00f6rd\u00fc\u011f\u00fcn\u00fcz gibi karakter nesnesinin ilk eleman\u0131na eri\u015fmek i\u00e7in s\u0131f\u0131r yazd\u0131m yani burada ba\u015flang\u0131\u00e7 her daim s\u0131f\u0131r olmaktad\u0131r. E\u011fer bir yazm\u0131\u015f olsayd\u0131m ikinci karaktere ula\u015fm\u0131\u015f olurdum. karakter[1] 'e' Peki b\u00fcy\u00fck bir rakam yazarsam ne ile kar\u015f\u0131la\u015f\u0131r\u0131m, hemen bakal\u0131m: karakter[10] --------------------------------------------------------------------------- IndexError Traceback (most recent call last) <ipython-input-7-ad38375bdd41> in <module> ----> 1 karakter[10] IndexError: string index out of range G\u00f6rm\u00fc\u015f oldu\u011funuz gibi karakter de\u011fi\u015fkeninin uzunlu\u011funun d\u0131\u015f\u0131na \u00e7\u0131km\u0131\u015f oldum. Yukar\u0131da verilen hata string index out of range bir nesnenin var olan uzunlu\u011funun d\u0131\u015f\u0131na \u00e7\u0131k\u0131ld\u0131\u011f\u0131 zaman olu\u015fmaktad\u0131r. Peki karakter de\u011fi\u015fkenimizin uzunlu\u011funu nas\u0131l \u00f6\u011frenebiliriz. Bunun daha \u00f6nce \u00f6\u011frendi\u011fimiz len() fonksiyonu ile yapabiliriz. len(karakter) 6 karakter de\u011fi\u015fkenimizin i\u00e7inde kelime yazmaktad\u0131r. Bu de\u011ferin uzunlu\u011fu alt\u0131d\u0131r. Fakat biz alt\u0131nc\u0131 karaktere eri\u015fmeye \u00e7al\u0131\u015ft\u0131\u011f\u0131m\u0131z zaman hata ile kar\u015f\u0131laca\u011f\u0131z: karakter[6] --------------------------------------------------------------------------- IndexError Traceback (most recent call last) <ipython-input-9-3c6610cc998a> in <module> ----> 1 karakter[6] IndexError: string index out of range G\u00f6rm\u00fc\u015f oldu\u011funuz gibi alt\u0131nc\u0131 karaktere eri\u015fmek istedi\u011fimiz zaman hata verdi \u00e7\u00fcnk\u00fc karakter dizilerine eri\u015firken s\u0131f\u0131r ile ba\u015flar\u0131z. Normalde saymaya birden ba\u015flar\u0131z ama burada saymaya s\u0131f\u0131rdan ba\u015fl\u0131yoruz. Bu fark\u0131 her daim hat\u0131rlayal\u0131m. karakter[5] 'e' karakter isimli de\u011fi\u015fkenimizin elemanlar\u0131na tek tek eri\u015felim. karakter[0] 'k' karakter[1] 'e' karakter[2] 'l' karakter[3] 'i' karakter[4] 'm' karakter[5] 'e' Yukar\u0131da belirtti\u011fimiz \u00f6\u011fe_s\u0131ras\u0131 yazan yere eksi de\u011ferli bir de\u011ferde girebiliriz. E\u011fer -1 de\u011ferini girersek bize de\u011fi\u015fkenimizin en sonda bulunan de\u011ferini getirecektir. E\u011fer -2 de\u011ferini girersek sondan bir \u00f6nceki de\u011feri getirecektir. karakter[-1] 'e' karakter[-2] 'm' karakter[-3] 'i' Bu \u015fekilde eksi de\u011ferlerde girebiliriz. Peki for d\u00f6ng\u00fcs\u00fcn\u00fc ve bu yap\u0131y\u0131 kullanarak eri\u015febilir miyiz? Tabiki de, hemen bir \u00f6rnek ile bakal\u0131m: for deger in range(len(karakter)): print(karakter[deger]) k e l i m e Farkl\u0131 bir \u015fekilde ekranda g\u00f6sterelim: for i in range(len(karakter)): print(\"De\u011fi\u015fkenimizin {}. harfi: {}\".format(i, karakter[i])) De\u011fi\u015fkenimizin 0. harfi: k De\u011fi\u015fkenimizin 1. harfi: e De\u011fi\u015fkenimizin 2. harfi: l De\u011fi\u015fkenimizin 3. harfi: i De\u011fi\u015fkenimizin 4. harfi: m De\u011fi\u015fkenimizin 5. harfi: e Karakter Dizilerini Dilimlemek Karakter dizilerine par\u00e7a par\u00e7ada eri\u015febiliriz yani onlar\u0131 meyve dilimler gibi dilimleyebiliriz. Hemen bir \u00f6rnek \u00fczerinden inceleyelim: karakter_dizisi = \"Bu bir karakter dizisidir.\" karakter_dizisi[0:2] 'Bu' Yukar\u0131daki \u00f6rnekte karakter_dizisi de\u011fi\u015fkenimizin sadece ilk iki de\u011ferini getirdik. karakter_dizisi[2:7] ' bir ' Peki burada da eksi de\u011ferli de\u011ferler kullanabilir miyiz? Tabiki de, hemen bir \u00f6rnek ile inceleyelim: karakter_dizisi[-4:] 'dir.' Burada nas\u0131l bir y\u00f6ntem izleyiyoruz. Nesnelere bu \u015fekilde eri\u015febiliyoruz: karakter_dizisi[al\u0131nacak_ilk_\u00f6\u011fenin_s\u0131ras\u0131:al\u0131nacak_son_\u00f6\u011fenin_s\u0131ras\u0131n\u0131n_bir_fazlas\u0131] . E\u011fer istersek ilk nesneyi yazmad\u0131\u011f\u0131m\u0131z zaman ba\u015ftan ba\u015flay\u0131p bizim belirledi\u011fimiz de\u011fere kadar eri\u015fir. karakter_dizisi[:4] 'Bu b' Yukar\u0131da yazd\u0131\u011f\u0131m\u0131z kod ile ayn\u0131 i\u015fe yapan kod ise: karakter_dizisi[0:4] 'Bu b' Karakter Dizilerini Ters \u00c7evirmek Bir de\u011fi\u015fkenin bar\u0131nd\u0131rd\u0131\u011f\u0131 karakter dizisini ters \u00e7evirmek istedi\u011fimiz zaman \u015funu yapmam\u0131z gerekmektedir: karakter_dizisi[::-1] '.ridisizid retkarak rib uB' Peki sadece belirli aral\u0131klarla ilerlemek istedi\u011fimiz zaman ne yapmal\u0131y\u0131z? karakter_dizisi[0:7:2] 'B i ' karakter_dizisi[ilk_karakter:son_karakter:atlama_say\u0131s\u0131]. Burada atlama say\u0131s\u0131 yazan yere ka\u00e7 adet karakter atlaya atlaya ilerlemek istiyorsan\u0131z onu yazmal\u0131s\u0131n\u0131z. Karakter dizisini ters \u00e7evirmek i\u00e7in kullanabilece\u011fimiz daha pratik bir fonksiyon mevcut o da, reversed(). Hemen bir \u00f6rnek ile inceyelim: reversed(karakter_dizisi) <reversed at 0x11200d290> reversed fonksiyonunu tek ba\u015f\u0131na kulland\u0131\u011f\u0131m\u0131z zaman bizlere bu \u015fekilde bir de\u011fer d\u00f6nd\u00fcr\u00fcyor. Bu fonksiyonu for d\u00f6ng\u00fcs\u00fc veya print fonksiyonu ile kullanmam\u0131z gerekmektedir. for i in reversed(karakter_dizisi): print(i, end=\"\") .ridisizid retkarak rib uB print(*reversed(karakter_dizisi), sep=\"\") .ridisizid retkarak rib uB Karakter Dizilerini Alfabe S\u0131ras\u0131na Dizmek Python'da sorted() fonksiyonu ile karakter dizisini alfabetik s\u0131raya g\u00f6re dizmek m\u00fcmk\u00fcn. karakter_dizisi = \"zebra\" sorted(karakter_dizisi) ['a', 'b', 'e', 'r', 'z'] Yukar\u0131da ald\u0131\u011f\u0131m\u0131z \u00e7\u0131kt\u0131y\u0131 iki farkl\u0131 yollada alabiliriz. Yol print(*sorted(karakter_dizisi), sep=\"\") aberz Yol for i in sorted(karakter_dizisi): print(i, end=\"\") aberz Sorted() fonksiyonu T\u00fcrk\u00e7e karakterlerde do\u011fru bir \u015fekilde \u00e7al\u0131\u015fmamaktad\u0131r. Bu durumu \u00e7\u00f6zmek m\u00fcmk\u00fcn lakin \"i\" harfi i\u00e7in elimizle d\u00fczeltmemiz gerekmektedir \u00e7\u00fcnk\u00fc \u0131 ve i harflerini birbirinden ay\u0131ramamaktad\u0131r. Bu duruma dikkat etmekte fayda var. Karakter Dizileri \u00dczerinde De\u011fi\u015fiklik Yapmak Bu k\u0131s\u0131mda karakter dizilerinde istedi\u011fimiz adet karakteri de\u011fi\u015ftirmekten tutunda, ba\u015f harfi b\u00fcy\u00fctmeye kadar farkl\u0131 konular\u0131 inceleyece\u011fiz. karakter_dizisi = \"elma\" Elimizde bulunan karakter_dizisi de\u011fi\u015fkenin ba\u015f harfini b\u00fcy\u00fctmek istiyoruz diyelim: karakter_dizisi = \"E\" + karakter_dizisi[1:] print(karakter_dizisi) Elma Peki karakter_dizisi i\u00e7erisinden istedi\u011fimiz k\u0131sm\u0131 \u00e7\u0131kar\u0131p yerine ba\u015fka bir kelime ekleyelim. karakter_dizisi = karakter_dizisi[0:2] + \"kart\" print(karakter_dizisi) Elkart \u00dc\u00e7 \u00d6nemli Fonksiyon Python'da i\u015flerimizi kolayla\u015ft\u0131ran veya unuttu\u011fumuz bilgileri hat\u0131rlamam\u0131z\u0131 sa\u011flayan baz\u0131 fonksiyonlar \u015fimdi bunlar\u0131 \u00f6\u011frenelim. dir() Bu fonksiyon bizlere Python'da bulunan nesneler hakk\u0131nda bilgi vermektedir. Bu fonksiyon arac\u0131l\u0131\u011f\u0131 ile karakter dizileri(str) hakk\u0131nda bilgi alal\u0131m. dir(str) ['__add__', '__class__', '__contains__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getnewargs__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__mod__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__rmod__', '__rmul__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'capitalize', 'casefold', 'center', 'count', 'encode', 'endswith', 'expandtabs', 'find', 'format', 'format_map', 'index', 'isalnum', 'isalpha', 'isascii', 'isdecimal', 'isdigit', 'isidentifier', 'islower', 'isnumeric', 'isprintable', 'isspace', 'istitle', 'isupper', 'join', 'ljust', 'lower', 'lstrip', 'maketrans', 'partition', 'replace', 'rfind', 'rindex', 'rjust', 'rpartition', 'rsplit', 'rstrip', 'split', 'splitlines', 'startswith', 'strip', 'swapcase', 'title', 'translate', 'upper', 'zfill'] dir() fonksiyonu karakter dizileri ile beraber kullanabilece\u011fimiz fonksiyonlar\u0131 bizlere g\u00f6stermektedir. Ayn\u0131 \u015fekilde int t\u00fcr\u00fcndekiler i\u00e7inde bakabiliriz. dir(int) ['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes'] dir() ile kullanaca\u011f\u0131n\u0131z bir yap\u0131n\u0131n ne t\u00fcr yap\u0131larla beraber kullan\u0131labildi\u011fini \u00f6\u011frenebilirsiniz. enumerate() Enumerate ingilizcede \"numaralamak, numaraland\u0131rmak\" olarak ge\u00e7mektedir. Yani bir karakter dizisinin de\u011ferlerini numaraland\u0131rmam\u0131za yaramaktad\u0131r. print(*enumerate(karakter_dizisi)) (0, 'E') (1, 'l') (2, 'k') (3, 'a') (4, 'r') (5, 't') Bir de\u011fi\u015fkenin i\u00e7erisinde bar\u0131nd\u0131rd\u0131\u011f\u0131 de\u011ferleri tek tek numaraland\u0131rabilmemizi sa\u011fl\u0131yor. E\u011fer b\u00f6yle bir ihtiyac\u0131n\u0131z olursa bu fonksiyon i\u015finizi h\u0131zl\u0131 bir \u015fekilde yapabilmenizi sa\u011flar. help() Herhangi bir fonksiyon, metot veya nesne hakk\u0131nda interneti kullanmadan h\u0131zl\u0131 bir \u015fekilde ingilizce olarak bilgi almak isterseniz bu fonksiyon i\u015finizi g\u00f6recektir. \u00d6rne\u011fin: help(len) Help on built-in function len in module builtins: len(obj, /) Return the number of items in a container. G\u00f6rm\u00fc\u015f oldu\u011funuz gibi help fonksiyonu bizlere len fonksiyonunun ne oldu\u011funu ve nas\u0131l kullan\u0131labildi\u011fini g\u00f6stermektedir. Son G\u00fcncelleme: 18 Aral\u0131k 2019 - \u00c7ar\u015famba","title":"Karakter Dizileri(str)"},{"location":"python/python_karakter_dizileri/#karakter-dizileri","text":"","title":"Karakter Dizileri"},{"location":"python/python_karakter_dizileri/#karakter-dizilerinin-ogelerine-erismek","text":"Karakter dizileri \u00e7ok s\u0131k kullanaca\u011f\u0131m\u0131z yap\u0131lard\u0131r. \u00d6nceki b\u00f6l\u00fcmlerde karakter dizileri \u00fczerinde i\u015flemler yapm\u0131\u015ft\u0131k. Bu b\u00f6l\u00fcmde daha ayr\u0131nt\u0131l\u0131 olarak inceleyece\u011fiz. Karakter dizilerine birka\u00e7 farkl\u0131 yol ile eri\u015febiliriz. \u00d6rne\u011fin: karakter = \"karakter\" print(karakter) karakter Yukar\u0131da g\u00f6r\u00fcld\u00fc\u011f\u00fc gibi karakter isimli de\u011fi\u015fkene print fonksiyonu ile eri\u015fmi\u015f olduk ve i\u00e7erisinde bulunan de\u011ferin tamam\u0131n\u0131 ekrana yazd\u0131rd\u0131k. Bir ba\u015fka yol olarakta kullan\u0131c\u0131dan alabiliriz de\u011feri. karakter = input(\"Bir kelime giriniz: \") print(karakter) Bir kelime giriniz: kelime kelime Ayn\u0131 zamanda for d\u00f6ng\u00fcs\u00fc ile karakter dizisinin b\u00fct\u00fcn de\u011ferlerine tek tek eri\u015febiliriz. \u00d6rne\u011fin: for deger in karakter: print(deger) k e l i m e Yukar\u0131daki i\u015flemi print fonsiyonu ile de yapabiliriz. print(*karakter, sep=\"\\n\") k e l i m e Ayn\u0131 zamanda karakter dizine \u015fu \u015fekildede eri\u015febiliriz. nesne[\u00f6ge_s\u0131ras\u0131], \u00f6rnek ile inceleyelim bu durumu: karakter[0] 'k' G\u00f6rd\u00fc\u011f\u00fcn\u00fcz gibi karakter nesnesinin ilk eleman\u0131na eri\u015fmek i\u00e7in s\u0131f\u0131r yazd\u0131m yani burada ba\u015flang\u0131\u00e7 her daim s\u0131f\u0131r olmaktad\u0131r. E\u011fer bir yazm\u0131\u015f olsayd\u0131m ikinci karaktere ula\u015fm\u0131\u015f olurdum. karakter[1] 'e' Peki b\u00fcy\u00fck bir rakam yazarsam ne ile kar\u015f\u0131la\u015f\u0131r\u0131m, hemen bakal\u0131m: karakter[10] --------------------------------------------------------------------------- IndexError Traceback (most recent call last) <ipython-input-7-ad38375bdd41> in <module> ----> 1 karakter[10] IndexError: string index out of range G\u00f6rm\u00fc\u015f oldu\u011funuz gibi karakter de\u011fi\u015fkeninin uzunlu\u011funun d\u0131\u015f\u0131na \u00e7\u0131km\u0131\u015f oldum. Yukar\u0131da verilen hata string index out of range bir nesnenin var olan uzunlu\u011funun d\u0131\u015f\u0131na \u00e7\u0131k\u0131ld\u0131\u011f\u0131 zaman olu\u015fmaktad\u0131r. Peki karakter de\u011fi\u015fkenimizin uzunlu\u011funu nas\u0131l \u00f6\u011frenebiliriz. Bunun daha \u00f6nce \u00f6\u011frendi\u011fimiz len() fonksiyonu ile yapabiliriz. len(karakter) 6 karakter de\u011fi\u015fkenimizin i\u00e7inde kelime yazmaktad\u0131r. Bu de\u011ferin uzunlu\u011fu alt\u0131d\u0131r. Fakat biz alt\u0131nc\u0131 karaktere eri\u015fmeye \u00e7al\u0131\u015ft\u0131\u011f\u0131m\u0131z zaman hata ile kar\u015f\u0131laca\u011f\u0131z: karakter[6] --------------------------------------------------------------------------- IndexError Traceback (most recent call last) <ipython-input-9-3c6610cc998a> in <module> ----> 1 karakter[6] IndexError: string index out of range G\u00f6rm\u00fc\u015f oldu\u011funuz gibi alt\u0131nc\u0131 karaktere eri\u015fmek istedi\u011fimiz zaman hata verdi \u00e7\u00fcnk\u00fc karakter dizilerine eri\u015firken s\u0131f\u0131r ile ba\u015flar\u0131z. Normalde saymaya birden ba\u015flar\u0131z ama burada saymaya s\u0131f\u0131rdan ba\u015fl\u0131yoruz. Bu fark\u0131 her daim hat\u0131rlayal\u0131m. karakter[5] 'e' karakter isimli de\u011fi\u015fkenimizin elemanlar\u0131na tek tek eri\u015felim. karakter[0] 'k' karakter[1] 'e' karakter[2] 'l' karakter[3] 'i' karakter[4] 'm' karakter[5] 'e' Yukar\u0131da belirtti\u011fimiz \u00f6\u011fe_s\u0131ras\u0131 yazan yere eksi de\u011ferli bir de\u011ferde girebiliriz. E\u011fer -1 de\u011ferini girersek bize de\u011fi\u015fkenimizin en sonda bulunan de\u011ferini getirecektir. E\u011fer -2 de\u011ferini girersek sondan bir \u00f6nceki de\u011feri getirecektir. karakter[-1] 'e' karakter[-2] 'm' karakter[-3] 'i' Bu \u015fekilde eksi de\u011ferlerde girebiliriz. Peki for d\u00f6ng\u00fcs\u00fcn\u00fc ve bu yap\u0131y\u0131 kullanarak eri\u015febilir miyiz? Tabiki de, hemen bir \u00f6rnek ile bakal\u0131m: for deger in range(len(karakter)): print(karakter[deger]) k e l i m e Farkl\u0131 bir \u015fekilde ekranda g\u00f6sterelim: for i in range(len(karakter)): print(\"De\u011fi\u015fkenimizin {}. harfi: {}\".format(i, karakter[i])) De\u011fi\u015fkenimizin 0. harfi: k De\u011fi\u015fkenimizin 1. harfi: e De\u011fi\u015fkenimizin 2. harfi: l De\u011fi\u015fkenimizin 3. harfi: i De\u011fi\u015fkenimizin 4. harfi: m De\u011fi\u015fkenimizin 5. harfi: e","title":"Karakter Dizilerinin \u00d6\u011felerine Eri\u015fmek"},{"location":"python/python_karakter_dizileri/#karakter-dizilerini-dilimlemek","text":"Karakter dizilerine par\u00e7a par\u00e7ada eri\u015febiliriz yani onlar\u0131 meyve dilimler gibi dilimleyebiliriz. Hemen bir \u00f6rnek \u00fczerinden inceleyelim: karakter_dizisi = \"Bu bir karakter dizisidir.\" karakter_dizisi[0:2] 'Bu' Yukar\u0131daki \u00f6rnekte karakter_dizisi de\u011fi\u015fkenimizin sadece ilk iki de\u011ferini getirdik. karakter_dizisi[2:7] ' bir ' Peki burada da eksi de\u011ferli de\u011ferler kullanabilir miyiz? Tabiki de, hemen bir \u00f6rnek ile inceleyelim: karakter_dizisi[-4:] 'dir.' Burada nas\u0131l bir y\u00f6ntem izleyiyoruz. Nesnelere bu \u015fekilde eri\u015febiliyoruz: karakter_dizisi[al\u0131nacak_ilk_\u00f6\u011fenin_s\u0131ras\u0131:al\u0131nacak_son_\u00f6\u011fenin_s\u0131ras\u0131n\u0131n_bir_fazlas\u0131] . E\u011fer istersek ilk nesneyi yazmad\u0131\u011f\u0131m\u0131z zaman ba\u015ftan ba\u015flay\u0131p bizim belirledi\u011fimiz de\u011fere kadar eri\u015fir. karakter_dizisi[:4] 'Bu b' Yukar\u0131da yazd\u0131\u011f\u0131m\u0131z kod ile ayn\u0131 i\u015fe yapan kod ise: karakter_dizisi[0:4] 'Bu b'","title":"Karakter Dizilerini Dilimlemek"},{"location":"python/python_karakter_dizileri/#karakter-dizilerini-ters-cevirmek","text":"Bir de\u011fi\u015fkenin bar\u0131nd\u0131rd\u0131\u011f\u0131 karakter dizisini ters \u00e7evirmek istedi\u011fimiz zaman \u015funu yapmam\u0131z gerekmektedir: karakter_dizisi[::-1] '.ridisizid retkarak rib uB' Peki sadece belirli aral\u0131klarla ilerlemek istedi\u011fimiz zaman ne yapmal\u0131y\u0131z? karakter_dizisi[0:7:2] 'B i ' karakter_dizisi[ilk_karakter:son_karakter:atlama_say\u0131s\u0131]. Burada atlama say\u0131s\u0131 yazan yere ka\u00e7 adet karakter atlaya atlaya ilerlemek istiyorsan\u0131z onu yazmal\u0131s\u0131n\u0131z. Karakter dizisini ters \u00e7evirmek i\u00e7in kullanabilece\u011fimiz daha pratik bir fonksiyon mevcut o da, reversed(). Hemen bir \u00f6rnek ile inceyelim: reversed(karakter_dizisi) <reversed at 0x11200d290> reversed fonksiyonunu tek ba\u015f\u0131na kulland\u0131\u011f\u0131m\u0131z zaman bizlere bu \u015fekilde bir de\u011fer d\u00f6nd\u00fcr\u00fcyor. Bu fonksiyonu for d\u00f6ng\u00fcs\u00fc veya print fonksiyonu ile kullanmam\u0131z gerekmektedir. for i in reversed(karakter_dizisi): print(i, end=\"\") .ridisizid retkarak rib uB print(*reversed(karakter_dizisi), sep=\"\") .ridisizid retkarak rib uB","title":"Karakter Dizilerini Ters \u00c7evirmek"},{"location":"python/python_karakter_dizileri/#karakter-dizilerini-alfabe-srasna-dizmek","text":"Python'da sorted() fonksiyonu ile karakter dizisini alfabetik s\u0131raya g\u00f6re dizmek m\u00fcmk\u00fcn. karakter_dizisi = \"zebra\" sorted(karakter_dizisi) ['a', 'b', 'e', 'r', 'z'] Yukar\u0131da ald\u0131\u011f\u0131m\u0131z \u00e7\u0131kt\u0131y\u0131 iki farkl\u0131 yollada alabiliriz. Yol print(*sorted(karakter_dizisi), sep=\"\") aberz Yol for i in sorted(karakter_dizisi): print(i, end=\"\") aberz Sorted() fonksiyonu T\u00fcrk\u00e7e karakterlerde do\u011fru bir \u015fekilde \u00e7al\u0131\u015fmamaktad\u0131r. Bu durumu \u00e7\u00f6zmek m\u00fcmk\u00fcn lakin \"i\" harfi i\u00e7in elimizle d\u00fczeltmemiz gerekmektedir \u00e7\u00fcnk\u00fc \u0131 ve i harflerini birbirinden ay\u0131ramamaktad\u0131r. Bu duruma dikkat etmekte fayda var.","title":"Karakter Dizilerini Alfabe S\u0131ras\u0131na Dizmek"},{"location":"python/python_karakter_dizileri/#karakter-dizileri-uzerinde-degisiklik-yapmak","text":"Bu k\u0131s\u0131mda karakter dizilerinde istedi\u011fimiz adet karakteri de\u011fi\u015ftirmekten tutunda, ba\u015f harfi b\u00fcy\u00fctmeye kadar farkl\u0131 konular\u0131 inceleyece\u011fiz. karakter_dizisi = \"elma\" Elimizde bulunan karakter_dizisi de\u011fi\u015fkenin ba\u015f harfini b\u00fcy\u00fctmek istiyoruz diyelim: karakter_dizisi = \"E\" + karakter_dizisi[1:] print(karakter_dizisi) Elma Peki karakter_dizisi i\u00e7erisinden istedi\u011fimiz k\u0131sm\u0131 \u00e7\u0131kar\u0131p yerine ba\u015fka bir kelime ekleyelim. karakter_dizisi = karakter_dizisi[0:2] + \"kart\" print(karakter_dizisi) Elkart","title":"Karakter Dizileri \u00dczerinde De\u011fi\u015fiklik Yapmak"},{"location":"python/python_karakter_dizileri/#uc-onemli-fonksiyon","text":"Python'da i\u015flerimizi kolayla\u015ft\u0131ran veya unuttu\u011fumuz bilgileri hat\u0131rlamam\u0131z\u0131 sa\u011flayan baz\u0131 fonksiyonlar \u015fimdi bunlar\u0131 \u00f6\u011frenelim.","title":"\u00dc\u00e7 \u00d6nemli Fonksiyon"},{"location":"python/python_karakter_dizileri/#dir","text":"Bu fonksiyon bizlere Python'da bulunan nesneler hakk\u0131nda bilgi vermektedir. Bu fonksiyon arac\u0131l\u0131\u011f\u0131 ile karakter dizileri(str) hakk\u0131nda bilgi alal\u0131m. dir(str) ['__add__', '__class__', '__contains__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getnewargs__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__mod__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__rmod__', '__rmul__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'capitalize', 'casefold', 'center', 'count', 'encode', 'endswith', 'expandtabs', 'find', 'format', 'format_map', 'index', 'isalnum', 'isalpha', 'isascii', 'isdecimal', 'isdigit', 'isidentifier', 'islower', 'isnumeric', 'isprintable', 'isspace', 'istitle', 'isupper', 'join', 'ljust', 'lower', 'lstrip', 'maketrans', 'partition', 'replace', 'rfind', 'rindex', 'rjust', 'rpartition', 'rsplit', 'rstrip', 'split', 'splitlines', 'startswith', 'strip', 'swapcase', 'title', 'translate', 'upper', 'zfill'] dir() fonksiyonu karakter dizileri ile beraber kullanabilece\u011fimiz fonksiyonlar\u0131 bizlere g\u00f6stermektedir. Ayn\u0131 \u015fekilde int t\u00fcr\u00fcndekiler i\u00e7inde bakabiliriz. dir(int) ['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes'] dir() ile kullanaca\u011f\u0131n\u0131z bir yap\u0131n\u0131n ne t\u00fcr yap\u0131larla beraber kullan\u0131labildi\u011fini \u00f6\u011frenebilirsiniz.","title":"dir()"},{"location":"python/python_karakter_dizileri/#enumerate","text":"Enumerate ingilizcede \"numaralamak, numaraland\u0131rmak\" olarak ge\u00e7mektedir. Yani bir karakter dizisinin de\u011ferlerini numaraland\u0131rmam\u0131za yaramaktad\u0131r. print(*enumerate(karakter_dizisi)) (0, 'E') (1, 'l') (2, 'k') (3, 'a') (4, 'r') (5, 't') Bir de\u011fi\u015fkenin i\u00e7erisinde bar\u0131nd\u0131rd\u0131\u011f\u0131 de\u011ferleri tek tek numaraland\u0131rabilmemizi sa\u011fl\u0131yor. E\u011fer b\u00f6yle bir ihtiyac\u0131n\u0131z olursa bu fonksiyon i\u015finizi h\u0131zl\u0131 bir \u015fekilde yapabilmenizi sa\u011flar.","title":"enumerate()"},{"location":"python/python_karakter_dizileri/#help","text":"Herhangi bir fonksiyon, metot veya nesne hakk\u0131nda interneti kullanmadan h\u0131zl\u0131 bir \u015fekilde ingilizce olarak bilgi almak isterseniz bu fonksiyon i\u015finizi g\u00f6recektir. \u00d6rne\u011fin: help(len) Help on built-in function len in module builtins: len(obj, /) Return the number of items in a container. G\u00f6rm\u00fc\u015f oldu\u011funuz gibi help fonksiyonu bizlere len fonksiyonunun ne oldu\u011funu ve nas\u0131l kullan\u0131labildi\u011fini g\u00f6stermektedir. Son G\u00fcncelleme: 18 Aral\u0131k 2019 - \u00c7ar\u015famba","title":"help()"},{"location":"python/python_karakter_dizilerinin_metotlari/","text":"Karakter Dizilerinin Metotlar\u0131 replace() Bu metot karakter dizisi i\u00e7erisinde de\u011fi\u015fiklikler yapabilmemizi sa\u011flar. Kullan\u0131m \u015fekli: karakter_dizisi.replace(eski_karakter_dizisi, yeni_karakter_dizisi). \u00d6rne\u011fin: kelime = \"elma\" kelime 'elma' kelime.replace(\"e\",\"E\") 'Elma' Bu fonksiyon ile karakter dizileri \u00fczerinde bir\u00e7ok de\u011fi\u015fiklik yapabilirsiniz. split() Bu metot karakter dizisi i\u00e7erisinde par\u00e7alama yapabilmemizi sa\u011flar. meyveler = \"Elma, Armut, Karpuz, Kiraz\" meyveler.split() ['Elma,', 'Armut,', 'Karpuz,', 'Kiraz'] meyveler de\u011fi\u015fkeninde bulunan i\u00e7eri\u011fi bo\u015flu\u011fa par\u00e7alad\u0131 fakat verdi\u011fi \u00e7\u0131kt\u0131 biraz problemli. Yani her i\u00e7erik virg\u00fcl ile beraber gelmi\u015f. Split fonksiyonuna neye g\u00f6re par\u00e7alamas\u0131n\u0131 s\u00f6ylersek onu baz alarak par\u00e7alama i\u015flemini yapar. meyveler.split(\",\") ['Elma', ' Armut', ' Karpuz', ' Kiraz'] veya bir harfe g\u00f6re par\u00e7alatabiliriz. meyveler.split(\"a\") ['Elm', ', Armut, K', 'rpuz, Kir', 'z'] split fonksiyonu ayn\u0131 zamanda ka\u00e7 kere b\u00f6lmesi gerekti\u011finide almaktad\u0131r. \u00d6rne\u011fin: meyveler.split(\",\",2) ['Elma', ' Armut', ' Karpuz, Kiraz'] rsplit() rsplit() metodunun split() metodundan fark\u0131 sa\u011fdan sola do\u011fru okumas\u0131d\u0131r. \u00d6rne\u011fin: meyveler.rsplit(\",\",2) ['Elma, Armut', ' Karpuz', ' Kiraz'] rsplit() metodu karakter dizisini b\u00f6lmeye sa\u011fdan ba\u015flad\u0131 ve sola do\u011fru gitti, split() metodundan fark\u0131 bu. splitlines() Bu metot veriyi sat\u0131r sat\u0131r b\u00f6le bilmemizi sa\u011flamaktad\u0131r. \u00d6rne\u011fin: lorem = \"\"\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus nec magna nulla. Sed interdum diam at sem ultrices, nec suscipit massa lobortis. Fusce in leo finibus risus lacinia viverra. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Nam eget lorem ornare libero consequat tempus. Pellentesque sed odio at magna fringilla euismod a at enim. Fusce aliquet malesuada neque sit amet hendrerit.\"\"\" print(lorem.splitlines()) ['Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus nec magna nulla. ', 'Sed interdum diam at sem ultrices, nec suscipit massa lobortis. ', 'Fusce in leo finibus risus lacinia viverra. ', 'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. ', 'Nam eget lorem ornare libero consequat tempus. ', 'Pellentesque sed odio at magna fringilla euismod a at enim. Fusce aliquet malesuada neque sit amet hendrerit.'] \u00d6rnekte oldu\u011fu gibi splitlines() metodu de\u011ferleri sat\u0131r sat\u0131r par\u00e7alad\u0131. lower() Bu metot de\u011fi\u015fkenin tuttu\u011fu de\u011ferlerin tamam\u0131n\u0131n k\u00fc\u00e7\u00fck harfe d\u00f6n\u00fc\u015ft\u00fcr\u00fclmesini sa\u011fl\u0131yor. degisken = input(\"Bir kelime yaz\u0131n\u0131z: \") print(degisken.lower()) Bir kelime yaz\u0131n\u0131z: MERHABA merhaba Bu fonksiyonun k\u00fc\u00e7\u00fck bir problemi var. T\u00fcrk\u00e7e karakter duyarl\u0131l\u0131\u011f\u0131 yoktur. Bu durumu bilmekte fayda var. iller = \"ISPARTA, ADIYAMAN, D\u0130YARBAKIR, AYDIN, BALIKES\u0130R, A\u011eRI\" iller = iller.replace(\"I\", \"\u0131\").replace(\"\u0130\", \"i\").lower() print(iller) \u0131sparta, ad\u0131yaman, diyarbak\u0131r, ayd\u0131n, bal\u0131kesir, a\u011fr\u0131 upper() Bu metot de\u011fi\u015fkenin tuttu\u011fu de\u011ferlerin tamam\u0131n\u0131n b\u00fcy\u00fck harfe d\u00f6n\u00fc\u015ft\u00fcr\u00fclmesini sa\u011fl\u0131yor. degisken = \"oku\" print(degisken.upper()) OKU Bu metodunda ayn\u0131 \u015fekilde T\u00fcrk\u00e7e karakter duyarl\u0131l\u0131\u011f\u0131 yoktur. Bu durumu bilmekte fayda var. iller = \"istanbul, izmir, siirt, mersin\" iller = iller.replace(\"i\", \"\u0130\").upper() print(iller) \u0130STANBUL, \u0130ZM\u0130R, S\u0130\u0130RT, MERS\u0130N islower() Bu metot bir de\u011fi\u015fkenin tuttu\u011fu de\u011ferin k\u00fc\u00e7\u00fck olup olmad\u0131\u011f\u0131n\u0131 kontrol ediyor. deger = \"Deger\" deger.islower() False deger = \"deger\" deger.islower() True isupper() Bu metot bir de\u011fi\u015fkenin tuttu\u011fu de\u011ferin b\u00fcy\u00fck olup olmad\u0131\u011f\u0131n\u0131 kontrol ediyor. deger = \"Deger\" deger.isupper() False deger = \"DEGER\" deger.isupper() True endswith() Bu metot yard\u0131m\u0131yla bir karakter dizisinin hangi karakter dizisi ile bitti\u011fini sorgulayabiliyoruz. \u00d6rne\u011fin: deger = \"deger\" deger.endswith(\"r\") True startswith() Bu metot yard\u0131m\u0131yla bir karakter dizisinin hangi karakter dizisi ile ba\u015flad\u0131\u011f\u0131n\u0131 sorgulayabiliyoruz. \u00d6rne\u011fin: deger = \"Deger\" deger.startswith(\"D\") True capitalize() Bu metot yard\u0131m\u0131yla bir karakter dizisinin sadece ilk harfini b\u00fcy\u00fctebiliriz. deger = \"deger\" deger.capitalize() 'Deger' title() Bu metot yard\u0131m\u0131yla bir karakter dizisinin ilk harflerini b\u00fcy\u00fctmektedir. deger = \"python programlama dili\" deger.title() 'Python Programlama Dili' swapcase() Bu metot bir karakter dizisi i\u00e7indeki b\u00fcy\u00fck harfleri k\u00fc\u00e7\u00fck harfe; k\u00fc\u00e7\u00fck harfleri de b\u00fcy\u00fck harfe d\u00f6n\u00fc\u015ft\u00fcr\u00fcr. \u00d6rne\u011fin: deger = \"PythoN\" deger.swapcase() 'pYTHOn' casefold() Bu metot lower() metoduna benzerdir. deger = \"DeGer\" deger.casefold() 'deger' strip() Bu metot karakter dizilerinde bulunan bo\u015fluklar\u0131 silmektedir. Ayn\u0131 zamanda bo\u015flu\u011fun haricinde bizim belirtti\u011fimiz de\u011fere g\u00f6re silme i\u015flemini yapmaktad\u0131r. deger = \"deger \" deger.strip() 'deger' strip() metodunun \u00f6n tan\u0131ml\u0131 olarak k\u0131rpt\u0131\u011f\u0131 karakterler: \u2018\u2018 bo\u015fluk karakteri \\t sekme (TAB) olu\u015fturan ka\u00e7\u0131\u015f dizisi \\n sat\u0131r ba\u015f\u0131na ge\u00e7iren ka\u00e7\u0131\u015f dizisi \\r imleci ayn\u0131 sat\u0131r\u0131n ba\u015f\u0131na d\u00f6nd\u00fcren ka\u00e7\u0131\u015f dizisi \\v d\u00fc\u015fey sekme olu\u015fturan ka\u00e7\u0131\u015f dizisi \\f yeni bir sayfaya ge\u00e7iren ka\u00e7\u0131\u015f dizisi E\u011fer istersek bizim verdi\u011fimi de\u011fere g\u00f6rede k\u0131rpma i\u015flemini ger\u00e7ekle\u015ftirebilir. \u00d6rne\u011fin: deger = \"Python\" deger.strip(\"P\") 'ython' lstrip() Bu metot strip() metodu ile ayn\u0131 i\u015flemi yapmaktad\u0131r. Fakat farkl\u0131 olarak sol tarafta bulunan gereksiz karakterleri siler. deger = \" Python \" deger.lstrip() 'Python ' Bir ba\u015fka \u00f6rnek: deger = \"Python P\" deger.lstrip(\"P\") 'ython P' rstrip() Bu metot strip() metodu ile ayn\u0131 i\u015flemi yapmaktad\u0131r. Fakat farkl\u0131 olarak sa\u011f tarafta bulunan gereksiz karakterleri siler. deger = \" Python \" deger.rstrip() ' Python' Bir ba\u015fka \u00f6rnek: deger = \"Python P\" deger.rstrip(\"P\") 'Python ' join() Bu metot karakter dizilerini birle\u015ftirmemize yarar. karakter = \"Python Programlama Dili\" bolunmus = karakter.split() print(bolunmus) ['Python', 'Programlama', 'Dili'] \u015eimdi tekrar birle\u015ftirelim. \" \".join(bolunmus) 'Python Programlama Dili' Burada bo\u015fluk karakterini kulland\u0131k. E\u011fer isterseniz daha farkl\u0131 karakterler kullanabilirsiniz. count() Bu metodun g\u00f6revi bir karakter dizisi i\u00e7inde belli bir karakterin ka\u00e7 kez ge\u00e7ti\u011fini sorgulamakt\u0131r deger = \"Fatih Sultan Mehmet 1453 y\u0131l\u0131nda \u0130stanbul'u fethetti.\" deger.count(\"a\") 4 Bu metot bir parametre daha almaktad\u0131r. Bu parametrede ka\u00e7\u0131nc\u0131 s\u0131radan ba\u015flayaca\u011f\u0131n\u0131 g\u00f6steriyor. deger.count(\"a\", 5) 3 index() Bu metot karakter dizisinde bulunan bir de\u011ferin ka\u00e7\u0131nc\u0131 indekste oldu\u011funu \u00f6\u011frenebilmemize yarar. deger = \"Fatih\" deger.index(\"F\") 0 index metodu ikinci bir parametre almaktad\u0131r. Bu parametre ka\u00e7\u0131nc\u0131 s\u0131radan aramaya ba\u015flayaca\u011f\u0131n\u0131 g\u00f6stermektedir. deger.index(\"i\",1) 3 Bu metot \u00fc\u00e7\u00fcnc\u00fc bir parametre daha almaktad\u0131r. Bu parametrede bir \u00f6nceki parametre ile dilimleme yap\u0131p, dilimlemenin yap\u0131ld\u0131\u011f\u0131 aral\u0131kta aramas\u0131n\u0131 belirtti\u011fimiz de\u011feri aramaktad\u0131r. deger.index(\"i\",1,4) 3 rindex() Bu metot karakter dizisini sa\u011fdan sola do\u011fru okur. deger.rindex(\"h\") 4 find() Bu metot index() metodu ile ayn\u0131 i\u015fi yapmaktad\u0131r. deger.find(\"i\") 3 rfind() Bu metot rindex() metodu ile ayn\u0131 i\u015fi yapmaktad\u0131r. deger.rfind(\"h\") 4 center() Bu metot karakter dizisini merkezde tutmam\u0131za yarar. deger = \"python\" deger.center(10) ' python ' Bu metot ikinci bir parametre almaktad\u0131r. Bu parametrede bo\u015flu\u011fun haricinde farkl\u0131 karakterlerde kullanabilmemizi sa\u011flamaktad\u0131r. deger.center(20,\"-\") '-------python-------' rjust() Bu metot bir karakter dizisini sa\u011fa yaslar. deger = \"python\" deger.rjust(10,\"-\") '----python' ljust() Bu metot bir dizisini sola yaslar. deger = \"python\" deger.ljust(10,\"-\") 'python----' zfill() Bu metot yard\u0131m\u0131yla karakter dizisinin sol taraf\u0131na istedi\u011fimiz say\u0131da s\u0131f\u0131r ekleyebiliriz. deger = \"python\" deger.zfill(10) '0000python' partition() Bu metot yard\u0131m\u0131yla karakter dizisini belli bir \u00f6l\u00e7\u00fcte g\u00f6re \u00fc\u00e7e ay\u0131r\u0131yoruz. deger = \"istanbul\" deger.partition(\"an\") ('ist', 'an', 'bul') rpartition() Bu metot yard\u0131m\u0131yla karakter dizisini sa\u011fdan sola do\u011fru belli bir \u00f6l\u00e7\u00fcte g\u00f6re \u00fc\u00e7e ay\u0131r\u0131yoruz. deger = \"adana\" deger.rpartition(\"a\") ('adan', 'a', '') encode() Bu metot yard\u0131m\u0131yla karakter dizilerimizi istedi\u011fimiz kodlama sistemine g\u00f6re kodlayabiliriz. \"fatih\".encode(\"cp1254\") b'fatih' expandtabs() Bu metot yard\u0131m\u0131yla karakter dizisi i\u00e7indeki sekme bo\u015fluklar\u0131n\u0131 geni\u015fletebiliyoruz. deger = \"elma\\tbir\\tmeyvedir\" deger.expandtabs(10) 'elma bir meyvedir' str.maketrans(), translate() Bu metotlar genelde beraber kullan\u0131ld\u0131\u011f\u0131 i\u00e7in buradada beraber kullanaca\u011f\u0131z. \u015eu \u015fekilde bir durum oldu\u011funu d\u00fc\u015f\u00fcnelim, internette bazen T\u00fcrk\u00e7e karakter kullanmamam\u0131z\u0131 gerektiren durumlar oluyor. B\u00f6yle bir durumu bu metodlar ile \u00e7\u00f6zece\u011fiz ve yazd\u0131\u011f\u0131m\u0131z T\u00fcrk\u00e7e karakter bar\u0131nd\u0131ran bir c\u00fcmleyi T\u00fcrk\u00e7e karakter bar\u0131nd\u0131rmayan bir hale getirecek. kaynak = \"\u015f\u00e7\u00f6\u011f\u00fc\u0131\u015e\u00c7\u00d6\u011e\u00dc\u0130\" hedef = \"scoguiSCOGUI\" \u00e7eviri_tablosu = str.maketrans(kaynak, hedef) metin = \"Bildi\u011finiz gibi, internet \u00fczerinde bazen T\u00fcrk\u00e7e karakterleri kullanam\u0131yoruz.\" print(metin.translate(\u00e7eviri_tablosu)) Bildiginiz gibi, internet uzerinde bazen Turkce karakterleri kullanamiyoruz. isalpha() Bu metot yard\u0131m\u0131 ile bir karakter dizisinin alfabetik olup olmad\u0131\u011f\u0131n\u0131 denetleyebiliriz. deger = \"a\u011fa\u00e7\" deger.isalpha() True Bir ba\u015fka \u00f6rne\u011fe bakal\u0131m: deger = \"A\u011fa\u00e71\" deger.isalpha() False isdigit() Bu metot yard\u0131m\u0131 ile bir karakter dizisinin n\u00fcmerik olup olmad\u0131\u011f\u0131n\u0131 denetleyebiliriz. deger = \"12345\" deger.isdigit() True Bir ba\u015fka \u00f6rne\u011fe bakal\u0131m: deger = \"A1\" deger.isdigit() False isalnum() Bu metot yard\u0131m\u0131 ile bir karakter dizisinin alfan\u00fcmerik olup olmad\u0131\u011f\u0131n\u0131 denetleyebiliriz. deger = \"a1\" deger.isalnum() True Bir ba\u015fka \u00f6rne\u011fe bakal\u0131m: deger = \"a1>\" deger.isalnum() False isdecimal() Bu metot yard\u0131m\u0131 ile bir karakter dizisinin ondal\u0131k say\u0131 cinsinden olup olmad\u0131\u011f\u0131n\u0131 denetleyebiliriz. deger = \"123\" deger.isdecimal() True Bir ba\u015fka \u00f6rne\u011fe bakal\u0131m: \"123.4\".isdecimal() False isidentifier() Bu metot ile neyin tan\u0131mlay\u0131c\u0131 olup neyin tan\u0131mlay\u0131c\u0131 olamayaca\u011f\u0131n\u0131 denetleyebiliriz. \"1a\".isidentifier() False Python'da de\u011fi\u015fkenler rakam ile ba\u015flayamaz bu y\u00fczden bu metod bizlere False de\u011ferini verdi. isnumeric() Bu metot ile bir karakter dizisinin n\u00fcmerik olup olmad\u0131\u011f\u0131n\u0131 denetleyebiliriz. \"12\".isnumeric() True Bir ba\u015fka \u00f6rne\u011fe bakal\u0131m: \"ad\".isnumeric() False isspace() Bu metot ile bir karakter dizisinin tamamen bo\u015fluklardan olu\u015fup olmad\u0131\u011f\u0131n\u0131 denetleyebiliriz. \"Bu bir bo\u015fluk de\u011fil.\".isspace() False Bir ba\u015fka \u00f6rne\u011fe bakal\u0131m: \" \".isspace() True isprintable() Bu metot ile bir karakterin bas\u0131labilen bir karakter mi yoksa bas\u0131lmayan bir karakter mi oldu\u011funu denetleyebiliriz. \"ahmet\".isprintable() True Bir ba\u015fka \u00f6rne\u011fe bakal\u0131m: \"\\n\".isprintable() False Son G\u00fcncelleme: 18 Aral\u0131k 2019 - \u00c7ar\u015famba","title":"Karakter Dizilerinin Metotlar\u0131"},{"location":"python/python_karakter_dizilerinin_metotlari/#karakter-dizilerinin-metotlar","text":"","title":"Karakter Dizilerinin Metotlar\u0131"},{"location":"python/python_karakter_dizilerinin_metotlari/#replace","text":"Bu metot karakter dizisi i\u00e7erisinde de\u011fi\u015fiklikler yapabilmemizi sa\u011flar. Kullan\u0131m \u015fekli: karakter_dizisi.replace(eski_karakter_dizisi, yeni_karakter_dizisi). \u00d6rne\u011fin: kelime = \"elma\" kelime 'elma' kelime.replace(\"e\",\"E\") 'Elma' Bu fonksiyon ile karakter dizileri \u00fczerinde bir\u00e7ok de\u011fi\u015fiklik yapabilirsiniz.","title":"replace()"},{"location":"python/python_karakter_dizilerinin_metotlari/#split","text":"Bu metot karakter dizisi i\u00e7erisinde par\u00e7alama yapabilmemizi sa\u011flar. meyveler = \"Elma, Armut, Karpuz, Kiraz\" meyveler.split() ['Elma,', 'Armut,', 'Karpuz,', 'Kiraz'] meyveler de\u011fi\u015fkeninde bulunan i\u00e7eri\u011fi bo\u015flu\u011fa par\u00e7alad\u0131 fakat verdi\u011fi \u00e7\u0131kt\u0131 biraz problemli. Yani her i\u00e7erik virg\u00fcl ile beraber gelmi\u015f. Split fonksiyonuna neye g\u00f6re par\u00e7alamas\u0131n\u0131 s\u00f6ylersek onu baz alarak par\u00e7alama i\u015flemini yapar. meyveler.split(\",\") ['Elma', ' Armut', ' Karpuz', ' Kiraz'] veya bir harfe g\u00f6re par\u00e7alatabiliriz. meyveler.split(\"a\") ['Elm', ', Armut, K', 'rpuz, Kir', 'z'] split fonksiyonu ayn\u0131 zamanda ka\u00e7 kere b\u00f6lmesi gerekti\u011finide almaktad\u0131r. \u00d6rne\u011fin: meyveler.split(\",\",2) ['Elma', ' Armut', ' Karpuz, Kiraz']","title":"split()"},{"location":"python/python_karakter_dizilerinin_metotlari/#rsplit","text":"rsplit() metodunun split() metodundan fark\u0131 sa\u011fdan sola do\u011fru okumas\u0131d\u0131r. \u00d6rne\u011fin: meyveler.rsplit(\",\",2) ['Elma, Armut', ' Karpuz', ' Kiraz'] rsplit() metodu karakter dizisini b\u00f6lmeye sa\u011fdan ba\u015flad\u0131 ve sola do\u011fru gitti, split() metodundan fark\u0131 bu.","title":"rsplit()"},{"location":"python/python_karakter_dizilerinin_metotlari/#splitlines","text":"Bu metot veriyi sat\u0131r sat\u0131r b\u00f6le bilmemizi sa\u011flamaktad\u0131r. \u00d6rne\u011fin: lorem = \"\"\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus nec magna nulla. Sed interdum diam at sem ultrices, nec suscipit massa lobortis. Fusce in leo finibus risus lacinia viverra. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Nam eget lorem ornare libero consequat tempus. Pellentesque sed odio at magna fringilla euismod a at enim. Fusce aliquet malesuada neque sit amet hendrerit.\"\"\" print(lorem.splitlines()) ['Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus nec magna nulla. ', 'Sed interdum diam at sem ultrices, nec suscipit massa lobortis. ', 'Fusce in leo finibus risus lacinia viverra. ', 'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. ', 'Nam eget lorem ornare libero consequat tempus. ', 'Pellentesque sed odio at magna fringilla euismod a at enim. Fusce aliquet malesuada neque sit amet hendrerit.'] \u00d6rnekte oldu\u011fu gibi splitlines() metodu de\u011ferleri sat\u0131r sat\u0131r par\u00e7alad\u0131.","title":"splitlines()"},{"location":"python/python_karakter_dizilerinin_metotlari/#lower","text":"Bu metot de\u011fi\u015fkenin tuttu\u011fu de\u011ferlerin tamam\u0131n\u0131n k\u00fc\u00e7\u00fck harfe d\u00f6n\u00fc\u015ft\u00fcr\u00fclmesini sa\u011fl\u0131yor. degisken = input(\"Bir kelime yaz\u0131n\u0131z: \") print(degisken.lower()) Bir kelime yaz\u0131n\u0131z: MERHABA merhaba Bu fonksiyonun k\u00fc\u00e7\u00fck bir problemi var. T\u00fcrk\u00e7e karakter duyarl\u0131l\u0131\u011f\u0131 yoktur. Bu durumu bilmekte fayda var. iller = \"ISPARTA, ADIYAMAN, D\u0130YARBAKIR, AYDIN, BALIKES\u0130R, A\u011eRI\" iller = iller.replace(\"I\", \"\u0131\").replace(\"\u0130\", \"i\").lower() print(iller) \u0131sparta, ad\u0131yaman, diyarbak\u0131r, ayd\u0131n, bal\u0131kesir, a\u011fr\u0131","title":"lower()"},{"location":"python/python_karakter_dizilerinin_metotlari/#upper","text":"Bu metot de\u011fi\u015fkenin tuttu\u011fu de\u011ferlerin tamam\u0131n\u0131n b\u00fcy\u00fck harfe d\u00f6n\u00fc\u015ft\u00fcr\u00fclmesini sa\u011fl\u0131yor. degisken = \"oku\" print(degisken.upper()) OKU Bu metodunda ayn\u0131 \u015fekilde T\u00fcrk\u00e7e karakter duyarl\u0131l\u0131\u011f\u0131 yoktur. Bu durumu bilmekte fayda var. iller = \"istanbul, izmir, siirt, mersin\" iller = iller.replace(\"i\", \"\u0130\").upper() print(iller) \u0130STANBUL, \u0130ZM\u0130R, S\u0130\u0130RT, MERS\u0130N","title":"upper()"},{"location":"python/python_karakter_dizilerinin_metotlari/#islower","text":"Bu metot bir de\u011fi\u015fkenin tuttu\u011fu de\u011ferin k\u00fc\u00e7\u00fck olup olmad\u0131\u011f\u0131n\u0131 kontrol ediyor. deger = \"Deger\" deger.islower() False deger = \"deger\" deger.islower() True","title":"islower()"},{"location":"python/python_karakter_dizilerinin_metotlari/#isupper","text":"Bu metot bir de\u011fi\u015fkenin tuttu\u011fu de\u011ferin b\u00fcy\u00fck olup olmad\u0131\u011f\u0131n\u0131 kontrol ediyor. deger = \"Deger\" deger.isupper() False deger = \"DEGER\" deger.isupper() True","title":"isupper()"},{"location":"python/python_karakter_dizilerinin_metotlari/#endswith","text":"Bu metot yard\u0131m\u0131yla bir karakter dizisinin hangi karakter dizisi ile bitti\u011fini sorgulayabiliyoruz. \u00d6rne\u011fin: deger = \"deger\" deger.endswith(\"r\") True","title":"endswith()"},{"location":"python/python_karakter_dizilerinin_metotlari/#startswith","text":"Bu metot yard\u0131m\u0131yla bir karakter dizisinin hangi karakter dizisi ile ba\u015flad\u0131\u011f\u0131n\u0131 sorgulayabiliyoruz. \u00d6rne\u011fin: deger = \"Deger\" deger.startswith(\"D\") True","title":"startswith()"},{"location":"python/python_karakter_dizilerinin_metotlari/#capitalize","text":"Bu metot yard\u0131m\u0131yla bir karakter dizisinin sadece ilk harfini b\u00fcy\u00fctebiliriz. deger = \"deger\" deger.capitalize() 'Deger'","title":"capitalize()"},{"location":"python/python_karakter_dizilerinin_metotlari/#title","text":"Bu metot yard\u0131m\u0131yla bir karakter dizisinin ilk harflerini b\u00fcy\u00fctmektedir. deger = \"python programlama dili\" deger.title() 'Python Programlama Dili'","title":"title()"},{"location":"python/python_karakter_dizilerinin_metotlari/#swapcase","text":"Bu metot bir karakter dizisi i\u00e7indeki b\u00fcy\u00fck harfleri k\u00fc\u00e7\u00fck harfe; k\u00fc\u00e7\u00fck harfleri de b\u00fcy\u00fck harfe d\u00f6n\u00fc\u015ft\u00fcr\u00fcr. \u00d6rne\u011fin: deger = \"PythoN\" deger.swapcase() 'pYTHOn'","title":"swapcase()"},{"location":"python/python_karakter_dizilerinin_metotlari/#casefold","text":"Bu metot lower() metoduna benzerdir. deger = \"DeGer\" deger.casefold() 'deger'","title":"casefold()"},{"location":"python/python_karakter_dizilerinin_metotlari/#strip","text":"Bu metot karakter dizilerinde bulunan bo\u015fluklar\u0131 silmektedir. Ayn\u0131 zamanda bo\u015flu\u011fun haricinde bizim belirtti\u011fimiz de\u011fere g\u00f6re silme i\u015flemini yapmaktad\u0131r. deger = \"deger \" deger.strip() 'deger' strip() metodunun \u00f6n tan\u0131ml\u0131 olarak k\u0131rpt\u0131\u011f\u0131 karakterler: \u2018\u2018 bo\u015fluk karakteri \\t sekme (TAB) olu\u015fturan ka\u00e7\u0131\u015f dizisi \\n sat\u0131r ba\u015f\u0131na ge\u00e7iren ka\u00e7\u0131\u015f dizisi \\r imleci ayn\u0131 sat\u0131r\u0131n ba\u015f\u0131na d\u00f6nd\u00fcren ka\u00e7\u0131\u015f dizisi \\v d\u00fc\u015fey sekme olu\u015fturan ka\u00e7\u0131\u015f dizisi \\f yeni bir sayfaya ge\u00e7iren ka\u00e7\u0131\u015f dizisi E\u011fer istersek bizim verdi\u011fimi de\u011fere g\u00f6rede k\u0131rpma i\u015flemini ger\u00e7ekle\u015ftirebilir. \u00d6rne\u011fin: deger = \"Python\" deger.strip(\"P\") 'ython'","title":"strip()"},{"location":"python/python_karakter_dizilerinin_metotlari/#lstrip","text":"Bu metot strip() metodu ile ayn\u0131 i\u015flemi yapmaktad\u0131r. Fakat farkl\u0131 olarak sol tarafta bulunan gereksiz karakterleri siler. deger = \" Python \" deger.lstrip() 'Python ' Bir ba\u015fka \u00f6rnek: deger = \"Python P\" deger.lstrip(\"P\") 'ython P'","title":"lstrip()"},{"location":"python/python_karakter_dizilerinin_metotlari/#rstrip","text":"Bu metot strip() metodu ile ayn\u0131 i\u015flemi yapmaktad\u0131r. Fakat farkl\u0131 olarak sa\u011f tarafta bulunan gereksiz karakterleri siler. deger = \" Python \" deger.rstrip() ' Python' Bir ba\u015fka \u00f6rnek: deger = \"Python P\" deger.rstrip(\"P\") 'Python '","title":"rstrip()"},{"location":"python/python_karakter_dizilerinin_metotlari/#join","text":"Bu metot karakter dizilerini birle\u015ftirmemize yarar. karakter = \"Python Programlama Dili\" bolunmus = karakter.split() print(bolunmus) ['Python', 'Programlama', 'Dili'] \u015eimdi tekrar birle\u015ftirelim. \" \".join(bolunmus) 'Python Programlama Dili' Burada bo\u015fluk karakterini kulland\u0131k. E\u011fer isterseniz daha farkl\u0131 karakterler kullanabilirsiniz.","title":"join()"},{"location":"python/python_karakter_dizilerinin_metotlari/#count","text":"Bu metodun g\u00f6revi bir karakter dizisi i\u00e7inde belli bir karakterin ka\u00e7 kez ge\u00e7ti\u011fini sorgulamakt\u0131r deger = \"Fatih Sultan Mehmet 1453 y\u0131l\u0131nda \u0130stanbul'u fethetti.\" deger.count(\"a\") 4 Bu metot bir parametre daha almaktad\u0131r. Bu parametrede ka\u00e7\u0131nc\u0131 s\u0131radan ba\u015flayaca\u011f\u0131n\u0131 g\u00f6steriyor. deger.count(\"a\", 5) 3","title":"count()"},{"location":"python/python_karakter_dizilerinin_metotlari/#index","text":"Bu metot karakter dizisinde bulunan bir de\u011ferin ka\u00e7\u0131nc\u0131 indekste oldu\u011funu \u00f6\u011frenebilmemize yarar. deger = \"Fatih\" deger.index(\"F\") 0 index metodu ikinci bir parametre almaktad\u0131r. Bu parametre ka\u00e7\u0131nc\u0131 s\u0131radan aramaya ba\u015flayaca\u011f\u0131n\u0131 g\u00f6stermektedir. deger.index(\"i\",1) 3 Bu metot \u00fc\u00e7\u00fcnc\u00fc bir parametre daha almaktad\u0131r. Bu parametrede bir \u00f6nceki parametre ile dilimleme yap\u0131p, dilimlemenin yap\u0131ld\u0131\u011f\u0131 aral\u0131kta aramas\u0131n\u0131 belirtti\u011fimiz de\u011feri aramaktad\u0131r. deger.index(\"i\",1,4) 3","title":"index()"},{"location":"python/python_karakter_dizilerinin_metotlari/#rindex","text":"Bu metot karakter dizisini sa\u011fdan sola do\u011fru okur. deger.rindex(\"h\") 4","title":"rindex()"},{"location":"python/python_karakter_dizilerinin_metotlari/#find","text":"Bu metot index() metodu ile ayn\u0131 i\u015fi yapmaktad\u0131r. deger.find(\"i\") 3","title":"find()"},{"location":"python/python_karakter_dizilerinin_metotlari/#rfind","text":"Bu metot rindex() metodu ile ayn\u0131 i\u015fi yapmaktad\u0131r. deger.rfind(\"h\") 4","title":"rfind()"},{"location":"python/python_karakter_dizilerinin_metotlari/#center","text":"Bu metot karakter dizisini merkezde tutmam\u0131za yarar. deger = \"python\" deger.center(10) ' python ' Bu metot ikinci bir parametre almaktad\u0131r. Bu parametrede bo\u015flu\u011fun haricinde farkl\u0131 karakterlerde kullanabilmemizi sa\u011flamaktad\u0131r. deger.center(20,\"-\") '-------python-------'","title":"center()"},{"location":"python/python_karakter_dizilerinin_metotlari/#rjust","text":"Bu metot bir karakter dizisini sa\u011fa yaslar. deger = \"python\" deger.rjust(10,\"-\") '----python'","title":"rjust()"},{"location":"python/python_karakter_dizilerinin_metotlari/#ljust","text":"Bu metot bir dizisini sola yaslar. deger = \"python\" deger.ljust(10,\"-\") 'python----'","title":"ljust()"},{"location":"python/python_karakter_dizilerinin_metotlari/#zfill","text":"Bu metot yard\u0131m\u0131yla karakter dizisinin sol taraf\u0131na istedi\u011fimiz say\u0131da s\u0131f\u0131r ekleyebiliriz. deger = \"python\" deger.zfill(10) '0000python'","title":"zfill()"},{"location":"python/python_karakter_dizilerinin_metotlari/#partition","text":"Bu metot yard\u0131m\u0131yla karakter dizisini belli bir \u00f6l\u00e7\u00fcte g\u00f6re \u00fc\u00e7e ay\u0131r\u0131yoruz. deger = \"istanbul\" deger.partition(\"an\") ('ist', 'an', 'bul')","title":"partition()"},{"location":"python/python_karakter_dizilerinin_metotlari/#rpartition","text":"Bu metot yard\u0131m\u0131yla karakter dizisini sa\u011fdan sola do\u011fru belli bir \u00f6l\u00e7\u00fcte g\u00f6re \u00fc\u00e7e ay\u0131r\u0131yoruz. deger = \"adana\" deger.rpartition(\"a\") ('adan', 'a', '')","title":"rpartition()"},{"location":"python/python_karakter_dizilerinin_metotlari/#encode","text":"Bu metot yard\u0131m\u0131yla karakter dizilerimizi istedi\u011fimiz kodlama sistemine g\u00f6re kodlayabiliriz. \"fatih\".encode(\"cp1254\") b'fatih'","title":"encode()"},{"location":"python/python_karakter_dizilerinin_metotlari/#expandtabs","text":"Bu metot yard\u0131m\u0131yla karakter dizisi i\u00e7indeki sekme bo\u015fluklar\u0131n\u0131 geni\u015fletebiliyoruz. deger = \"elma\\tbir\\tmeyvedir\" deger.expandtabs(10) 'elma bir meyvedir'","title":"expandtabs()"},{"location":"python/python_karakter_dizilerinin_metotlari/#strmaketrans-translate","text":"Bu metotlar genelde beraber kullan\u0131ld\u0131\u011f\u0131 i\u00e7in buradada beraber kullanaca\u011f\u0131z. \u015eu \u015fekilde bir durum oldu\u011funu d\u00fc\u015f\u00fcnelim, internette bazen T\u00fcrk\u00e7e karakter kullanmamam\u0131z\u0131 gerektiren durumlar oluyor. B\u00f6yle bir durumu bu metodlar ile \u00e7\u00f6zece\u011fiz ve yazd\u0131\u011f\u0131m\u0131z T\u00fcrk\u00e7e karakter bar\u0131nd\u0131ran bir c\u00fcmleyi T\u00fcrk\u00e7e karakter bar\u0131nd\u0131rmayan bir hale getirecek. kaynak = \"\u015f\u00e7\u00f6\u011f\u00fc\u0131\u015e\u00c7\u00d6\u011e\u00dc\u0130\" hedef = \"scoguiSCOGUI\" \u00e7eviri_tablosu = str.maketrans(kaynak, hedef) metin = \"Bildi\u011finiz gibi, internet \u00fczerinde bazen T\u00fcrk\u00e7e karakterleri kullanam\u0131yoruz.\" print(metin.translate(\u00e7eviri_tablosu)) Bildiginiz gibi, internet uzerinde bazen Turkce karakterleri kullanamiyoruz.","title":"str.maketrans(), translate()"},{"location":"python/python_karakter_dizilerinin_metotlari/#isalpha","text":"Bu metot yard\u0131m\u0131 ile bir karakter dizisinin alfabetik olup olmad\u0131\u011f\u0131n\u0131 denetleyebiliriz. deger = \"a\u011fa\u00e7\" deger.isalpha() True Bir ba\u015fka \u00f6rne\u011fe bakal\u0131m: deger = \"A\u011fa\u00e71\" deger.isalpha() False","title":"isalpha()"},{"location":"python/python_karakter_dizilerinin_metotlari/#isdigit","text":"Bu metot yard\u0131m\u0131 ile bir karakter dizisinin n\u00fcmerik olup olmad\u0131\u011f\u0131n\u0131 denetleyebiliriz. deger = \"12345\" deger.isdigit() True Bir ba\u015fka \u00f6rne\u011fe bakal\u0131m: deger = \"A1\" deger.isdigit() False","title":"isdigit()"},{"location":"python/python_karakter_dizilerinin_metotlari/#isalnum","text":"Bu metot yard\u0131m\u0131 ile bir karakter dizisinin alfan\u00fcmerik olup olmad\u0131\u011f\u0131n\u0131 denetleyebiliriz. deger = \"a1\" deger.isalnum() True Bir ba\u015fka \u00f6rne\u011fe bakal\u0131m: deger = \"a1>\" deger.isalnum() False","title":"isalnum()"},{"location":"python/python_karakter_dizilerinin_metotlari/#isdecimal","text":"Bu metot yard\u0131m\u0131 ile bir karakter dizisinin ondal\u0131k say\u0131 cinsinden olup olmad\u0131\u011f\u0131n\u0131 denetleyebiliriz. deger = \"123\" deger.isdecimal() True Bir ba\u015fka \u00f6rne\u011fe bakal\u0131m: \"123.4\".isdecimal() False","title":"isdecimal()"},{"location":"python/python_karakter_dizilerinin_metotlari/#isidentifier","text":"Bu metot ile neyin tan\u0131mlay\u0131c\u0131 olup neyin tan\u0131mlay\u0131c\u0131 olamayaca\u011f\u0131n\u0131 denetleyebiliriz. \"1a\".isidentifier() False Python'da de\u011fi\u015fkenler rakam ile ba\u015flayamaz bu y\u00fczden bu metod bizlere False de\u011ferini verdi.","title":"isidentifier()"},{"location":"python/python_karakter_dizilerinin_metotlari/#isnumeric","text":"Bu metot ile bir karakter dizisinin n\u00fcmerik olup olmad\u0131\u011f\u0131n\u0131 denetleyebiliriz. \"12\".isnumeric() True Bir ba\u015fka \u00f6rne\u011fe bakal\u0131m: \"ad\".isnumeric() False","title":"isnumeric()"},{"location":"python/python_karakter_dizilerinin_metotlari/#isspace","text":"Bu metot ile bir karakter dizisinin tamamen bo\u015fluklardan olu\u015fup olmad\u0131\u011f\u0131n\u0131 denetleyebiliriz. \"Bu bir bo\u015fluk de\u011fil.\".isspace() False Bir ba\u015fka \u00f6rne\u011fe bakal\u0131m: \" \".isspace() True","title":"isspace()"},{"location":"python/python_karakter_dizilerinin_metotlari/#isprintable","text":"Bu metot ile bir karakterin bas\u0131labilen bir karakter mi yoksa bas\u0131lmayan bir karakter mi oldu\u011funu denetleyebiliriz. \"ahmet\".isprintable() True Bir ba\u015fka \u00f6rne\u011fe bakal\u0131m: \"\\n\".isprintable() False Son G\u00fcncelleme: 18 Aral\u0131k 2019 - \u00c7ar\u015famba","title":"isprintable()"},{"location":"python/yorum_isareti/","text":"Yorum \u0130\u015fareti Yaz\u0131l\u0131m d\u00fcnyas\u0131nda yazd\u0131\u011f\u0131m\u0131z kodlar\u0131n ba\u015fkalar\u0131 taraf\u0131ndan da anla\u015f\u0131labilir olmas\u0131 i\u00e7in yorum ve a\u00e7\u0131klama c\u00fcmleleri b\u00fcy\u00fck bir \u00f6nem arz etmektedir. Burada yorum ve a\u00e7\u0131klama c\u00fcmlelerini bir de\u011fi\u015fkeni veya bir fonksiyonun ne i\u015fe yarad\u0131\u011f\u0131n\u0131 a\u00e7\u0131klamak i\u00e7in kullanabilirisiniz. tel_no = 11111 #bu de\u011fi\u015fken kullan\u0131c\u0131 taraf\u0131ndan girilen telefon numaras\u0131n\u0131 tutmak i\u00e7in kullan\u0131lmaktad\u0131r. Yorum i\u015faretleri farkl\u0131 ama\u00e7lar i\u00e7inde kullan\u0131labilr. Yazm\u0131\u015f oldu\u011fumuz kodu etkisizle\u015ftirmek i\u00e7in kullanabiliriz. # \u00fclke = \"T\u00fcrkiye\" Yorum i\u015faretlerini s\u00fcsleme ama\u00e7l\u0131da kullanabiliriz. ####################################################### #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~# # Yazan # Lisans # #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~# ####################################################### Son G\u00fcncelleme: 16 Aral\u0131k 2019 - Pazartesi","title":"Yorum \u0130\u015fareti"},{"location":"python/yorum_isareti/#yorum-isareti","text":"Yaz\u0131l\u0131m d\u00fcnyas\u0131nda yazd\u0131\u011f\u0131m\u0131z kodlar\u0131n ba\u015fkalar\u0131 taraf\u0131ndan da anla\u015f\u0131labilir olmas\u0131 i\u00e7in yorum ve a\u00e7\u0131klama c\u00fcmleleri b\u00fcy\u00fck bir \u00f6nem arz etmektedir. Burada yorum ve a\u00e7\u0131klama c\u00fcmlelerini bir de\u011fi\u015fkeni veya bir fonksiyonun ne i\u015fe yarad\u0131\u011f\u0131n\u0131 a\u00e7\u0131klamak i\u00e7in kullanabilirisiniz. tel_no = 11111 #bu de\u011fi\u015fken kullan\u0131c\u0131 taraf\u0131ndan girilen telefon numaras\u0131n\u0131 tutmak i\u00e7in kullan\u0131lmaktad\u0131r. Yorum i\u015faretleri farkl\u0131 ama\u00e7lar i\u00e7inde kullan\u0131labilr. Yazm\u0131\u015f oldu\u011fumuz kodu etkisizle\u015ftirmek i\u00e7in kullanabiliriz. # \u00fclke = \"T\u00fcrkiye\" Yorum i\u015faretlerini s\u00fcsleme ama\u00e7l\u0131da kullanabiliriz. ####################################################### #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~# # Yazan # Lisans # #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~# ####################################################### Son G\u00fcncelleme: 16 Aral\u0131k 2019 - Pazartesi","title":"Yorum \u0130\u015fareti"}]}